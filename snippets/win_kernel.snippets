snippet ACPI_OP_REGION_CALLBACK
	ACPI_OP_REGION_CALLBACK(); ${1:// VOID #PASSIVE_LEVEL}
snippet ACPI_OP_REGION_HANDLER
	ACPI_OP_REGION_HANDLER(${1:ULONG AccessType}, ${2:PVOID OperationRegionObject}, ${3:ULONG Address}, ${4:ULONG Size}, ${5:PULONG Data}, ${6:ULONG_PTR Context}, ${7:PACPI_OP_REGION_CALLBACK CompletionHandler}, ${8:PVOID CompletionContext}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet BatteryClassInitializeDevice
	BatteryClassInitializeDevice(${1:PBATTERY_MINIPORT_INFO inMiniportInfo}, ${2:PVOID out*ClassData}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet BatteryClassIoctl
	BatteryClassIoctl(${1:PVOID inClassData}, ${2:PIRP ioIrp}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet BatteryClassStatusNotify
	BatteryClassStatusNotify(${1:PVOID inClassData}); ${2:// NTSTATUS #DISPATCH_LEVEL}
snippet BatteryClassUnload
	BatteryClassUnload(${1:PVOID inClassData}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ClassAcquireChildLock
	ClassAcquireChildLock(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}); ${2:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassClaimDevice
	ClassClaimDevice(${1:PDEVICE_OBJECT inLowerDeviceObject}, ${2:BOOLEAN inRelease}); ${3:// SCSIPORT_NTSTATUS #PASSIVE_LEVEL}
snippet ClassCleanupMediaChangeDetection
	ClassCleanupMediaChangeDetection(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}) #PASSIVE_LEVEL
snippet ClassCreateDeviceObject
	ClassCreateDeviceObject(${1:PDRIVER_OBJECT inDriverObject}, ${2:PCCHAR inObjectNameBuffer}, ${3:PDEVICE_OBJECT inLowerDeviceObject}, ${4:BOOLEAN inIsFdo}, ${5:PDEVICE_OBJECT *outDeviceObject}) #PASSIVE_LEVEL
snippet ClassDeleteSrbLookasideList
	ClassDeleteSrbLookasideList(${1:PCOMMON_DEVICE_EXTENSION ioCommonExtension}); ${2:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassDisableMediaChangeDetection
	ClassDisableMediaChangeDetection(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}); ${2:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassEnableMediaChangeDetection
	ClassEnableMediaChangeDetection(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}); ${2:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassGetDescriptor
	ClassGetDescriptor(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PSTORAGE_PROPERTY_ID inPropertyId}, ${3:PVOID *Descriptor}); ${4:// SCSIPORT_NTSTATUS #PASSIVE_LEVEL}
snippet ClassGetDeviceParameter
	ClassGetDeviceParameter(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:PWSTR inSubkeyName}, ${3:PWSTR inParameterName}, ${4:PULONG ioParameterValue}); ${5:// VOID #PASSIVE_LEVEL}
snippet ClassGetDriverExtension
	ClassGetDriverExtension(${1:PDRIVER_OBJECT inDriverObject}); ${2:// SCSIPORT_PCLASS_DRIVER_EXTENSION #DISPATCH_LEVEL}
snippet ClassGetFsContext
	ClassGetFsContext(${1:PCOMMON_DEVICE_EXTENSION inCommonExtension}, ${2:PFILE_OBJECT inFileObject}); ${3:// PFILE_OBJECT_EXTENSION #PASSIVE_LEVEL}
snippet ClassInitialize
	ClassInitialize(${1:PVOID inArgument1}, ${2:PVOID inArgument2}, ${3:PCLASS_INIT_DATA inInitializationData}); ${4:// SCSIPORT_ULONG #PASSIVE_LEVEL}
snippet ClassInitializeEx
	ClassInitializeEx(${1:PDRIVER_OBJECT inDriverObject}, ${2:LPGUID inGuid}, ${3:PVOID inData}); ${4:// SCSIPORT_ULONG #PASSIVE_LEVEL}
snippet ClassInitializeMediaChangeDetection
	ClassInitializeMediaChangeDetection(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:PUCHAR inEventPrefix}); ${3:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassInitializeSrbLookasideList
	ClassInitializeSrbLookasideList(${1:PCOMMON_DEVICE_EXTENSION ioCommonExtension}, ${2:ULONG inNumberElements}); ${3:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassInitializeTestUnitPolling
	ClassInitializeTestUnitPolling(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:BOOLEAN inAllowDriveToSleep}); ${3:// SCSIPORT_NTSTATUS #PASSIVE_LEVEL}
snippet ClassInvalidateBusRelations
	ClassInvalidateBusRelations(${1:PDEVICE_OBJECT inFdo}); ${2:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassMarkChildMissing
	ClassMarkChildMissing(${1:PPHYSICAL_DEVICE_EXTENSION inPdoExtension}, ${2:BOOLEAN inAcquireChildLock}); ${3:// SCSIPORT_BOOLEAN #PASSIVE_LEVEL}
snippet ClassMarkChildrenMissing
	ClassMarkChildrenMissing(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdo}); ${2:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassNotifyFailurePredicted
	ClassNotifyFailurePredicted(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:PUCHAR Buffer}, ${3:ULONG inBufferSize}, ${4:BOOLEAN inLogError}, ${5:ULONG inUniqueErrorValue}, ${6:UCHAR inPathId}, ${7:UCHAR inTargetId}, ${8:UCHAR inLun}); ${9:// VOID #DISPATCH_LEVEL}
snippet ClassQueryTimeOutRegistryValue
	ClassQueryTimeOutRegistryValue(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// SCSIPORT_ULONG #PASSIVE_LEVEL}
snippet ClassRemoveDevice
	ClassRemoveDevice(${1:PDEVICE_OBJECT inDeviceObject}, ${2:UCHAR inRemoveType}); ${3:// SCSIPORT_NTSTATUS #PASSIVE_LEVEL}
snippet ClassScanForSpecial
	ClassScanForSpecial(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:CLASSPNP_SCAN_FOR_SPECIAL_INFO inDeviceList[]}, ${3:PCLASS_SCAN_FOR_SPECIAL_HANDLER inFunction}); ${4:// VOID #PASSIVE_LEVEL}
snippet ClassSendNotification
	ClassSendNotification(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:const inGUID * Guid}, ${3:ULONG inExtraDataSize}, ${4:PVOID inExtraData}); ${5:// VOID #DISPATCH_LEVEL}
snippet ClassSetDeviceParameter
	ClassSetDeviceParameter(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:PWSTR inSubkeyName}, ${3:PWSTR inParameterName}, ${4:ULONG inParameterValue}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ClassSetFailurePredictionPoll
	ClassSetFailurePredictionPoll(${1:PFUNCTIONAL_DEVICE_EXTENSION ioFdoExtension}, ${2:FAILURE_PREDICTION_METHOD inFailurePredictionMethod}, ${3:ULONG inPollingPeriod}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ClassSetMediaChangeState
	ClassSetMediaChangeState(${1:PFUNCTIONAL_DEVICE_EXTENSION inFdoExtension}, ${2:MEDIA_CHANGE_DETECTION_STATE inState}, ${3:BOOLEAN inWait}); ${4:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassUpdateInformationInRegistry
	ClassUpdateInformationInRegistry(${1:PDEVICE_OBJECT inFdo}, ${2:PCHAR inDeviceName}, ${3:ULONG inDeviceNumber}, ${4:PINQUIRYDATA inInquiryData}, ${5:ULONG inInquiryDataLength}); ${6:// SCSIPORT_VOID #PASSIVE_LEVEL}
snippet ClassWmiFireEvent
	ClassWmiFireEvent(${1:PDEVICE_OBJECT inDeviceObject}, ${2:LPGUID inGuid}, ${3:ULONG inInstanceIndex}, ${4:ULONG inEventDataSize}, ${5:VOID EventData}); ${6:// SCSIPORT_NTSTATUS #DISPATCH_LEVEL}
snippet CmCallbackGetKeyObjectID
	CmCallbackGetKeyObjectID(${1:PLARGE_INTEGER inCookie}, 	 ${2:PVOID	 inObject}, ${3:PULONG_PTR outObjectID}, ${4:PCUNICODE_STRING *ObjectName}); ${5:// NTSTATUS #APC_LEVEL}
snippet CmGetBoundTransaction
	CmGetBoundTransaction(${1:PLARGE_INTEGER inCookie}, ${2:-> PVOID #APC_LEVEL
snippet CmGetCallbackVersion
	CmGetCallbackVersion(${1:PULONG outMajor}}, ${2:PULONG outMinor}); ${3:// VOID #APC_LEVEL}
snippet CmRegisterCallback
	CmRegisterCallback(${1:PEX_CALLBACK_FUNCTION inFunction}, ${2:PVOID inContext}, ${3:PLARGE_INTEGER outCookie}); ${4:// NTSTATUS #APC_LEVEL}
snippet CmRegisterCallbackEx
	CmRegisterCallbackEx(${1:PEX_CALLBACK_FUNCTION inFunction}, ${2:PCUNICODE_STRING inAltitude}, ${3:PVOID inDriver}, ${4:#PDRIVER_OBJECT PVOID 	inContext}, ${5:PLARGE_INTEGER 	 outCookie}, ${6:PVOID			 Reserved}); ${7:// NTSTATUS //APC_LEVEL}
snippet CmSetCallbackObjectContext
	CmSetCallbackObjectContext(${1:PVOID	 ioObject}, ${2:PLARGE_INTEGER inCookie}, ${3:PVOID inNewContext}, ${4:PVOID out*OldContext}); ${5:// NTSTATUS #APC_LEVEL}
snippet DRIVER_NOTIFICATION_CALLBACK_ROUTINE
	DRIVER_NOTIFICATION_CALLBACK_ROUTINE(${1:PVOID inNotificationStructure}, ${2:PVOID Context}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet DeRegisterOpRegionHandler
	DeRegisterOpRegionHandler(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PVOID inOperationRegionObject}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet DrmAddContentHandlers
	DrmAddContentHandlers(${1:ULONG inContentId}, ${2:PVOID* paHandlers}, ${3:ULONG inNumHandlers}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet DrmCreateContentMixed
	DrmCreateContentMixed(${1:PULONG inpaContentId}, ${2:ULONG incContentId}, ${3:PULONG outpMixedContentId}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet DrmDestroyContent
	DrmDestroyContent(${1:ULONG inContentId}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet DrmForwardContentToFileObject
	DrmForwardContentToFileObject(${1:ULONG inContentId}, ${2:PFILE_OBJECT inFileObject}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet DrmForwardContentToInterface
	DrmForwardContentToInterface(${1:ULONG inContentId}, ${2:PUNKNOWN inpUnknown}, ${3:-> NTSTATUS #PASSIVE_LEVEL
snippet DrmGetContentRights
	DrmGetContentRights(${1:ULONG inContentId}}, ${2:PDRMRIGHTS outDrmRights}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet EmClientQueryRuleState
	EmClientQueryRuleState(${1:LPCGUID inRuleId}, ${2:PEM_RULE_STATE outState}); ${3:// NTSTATUS #APC_LEVEL}
snippet EmClientRuleDeregisterNotification
	EmClientRuleDeregisterNotification(${1:PVOID inNotificationHandle}); ${2:// VOID #APC_LEVEL}
snippet EmClientRuleEvaluate
	EmClientRuleEvaluate(${1:LPCGUID inRuleId}, ${2:EM_ENTRY_DATA **InputEntries}, ${3:ULONG inNumberOfEntries}, ${4:PEM_RULE_STATE outState}); ${5:// NTSTATUS #APC_LEVEL}
snippet EmClientRuleRegisterNotification
	EmClientRuleRegisterNotification(${1:PDRIVER_OBJECT inDriverObject}, ${2:PEM_CLIENT_NOTIFICATION_REGISTRATION RuleNotificationsRegistration}, ${3:ULONG inNumberOfNotificatoinRegistration}, ${4:PVOID out*NotificationHandle}); ${5:// NTSTATUS #APC_LEVEL}
snippet EmProviderDeregister
	EmProviderDeregister(${1:PVOID inProviderHandle}); ${2:// VOID #APC_LEVEL}
snippet EmProviderDeregisterEntry
	EmProviderDeregisterEntry(${1:PVOID inEntryHandle}); ${2:// VOID #APC_LEVEL}
snippet EmProviderRegister
	EmProviderRegister(${1:PDRIVER_OBJECT inDriverObject}, ${2:PEM_ENTRY_REGISTRATION inEntryRegistration}, ${3:ULONG inNumberOfEntry}, ${4:PEM_CALLBACK_REGISTRATION inCallbackRegistration}, ${5:ULONG inNumberOfCallback}, ${6:PVOID out*ProviderHandle}); ${7:// NTSTATUS #APC_LEVEL}
snippet EmProviderRegisterEntry
	EmProviderRegisterEntry(${1:PVOID inProviderHandle}, ${2:LPCGUID inEntryId}, ${3:PEM_ENTRY_DATA inEntryData}, ${4:PVOID out*EntryHandle}); ${5:// NTSTATUS #APC_LEVEL}
snippet EtwActivityIdControl
	EtwActivityIdControl(${1:ULONG inControlCode}, ${2:LPGUID ActivityId}); ${3:// NTSTATUS #APC_LEVEL}
snippet EtwEventEnabled
	EtwEventEnabled(${1:REGHANDLE inRegHandle}, ${2:PCEVENT_DESCRIPTOR inEventDescriptor}); ${3:// BOOLEAN #HIGH_LEVEL}
snippet EtwProviderEnabled
	EtwProviderEnabled(${1:REGHANDLE inRegHandle}, ${2:UCHAR inLevel}, ${3:ULONGLONG inKeyword}); ${4:// BOOLEAN #HIGH_LEVEL}
snippet EtwRegister
	EtwRegister(${1:LPCGUID inProviderId}, ${2:PETWENABLECALLBACK inEnableCallback}, ${3:PVOID inCallbackContext}, ${4:PREGHANDLE outRegHandle}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet EtwUnregister
	EtwUnregister(${1:REGHANDLE inRegHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet EtwWrite
	EtwWrite(${1:REGHANDLE inRegHandle}, ${2:PCEVENT_DESCRIPTOR inEventDescriptor}, ${3:LPCGUID inActivityId}, ${4:ULONG inUserDataCount}, ${5:PEVENT_DATA_DESCRIPTOR inUserData}); ${6:// NTSTATUS #HIGH_LEVEL}
snippet EtwWriteEx
	EtwWriteEx(${1:REGHANDLE inRegHandle}, ${2:PCEVENT_DESCRIPTOR inEventDescriptor}, ${3:ULONG64 inFilter}, ${4:ULONG inFlags}, ${5:LPCGUID inActivityId}, ${6:LPCGUID inRelatedActivityId}, ${7:ULONG inUserDataCount}, ${8:PEVENT_DATA_DESCRIPTOR inUserData}); ${9:// NTSTATUS #HIGH_LEVEL}
snippet EtwWriteString
	EtwWriteString(${1:REGHANDLE inRegHandle}, ${2:UCHAR inLevel}, ${3:ULONGLONG inKeyword}, ${4:LPCGUID inActivityId}, ${5:PCWSTR inString}); ${6:// NTSTATUS #HIGH_LEVEL}
snippet EtwWriteTransfer
	EtwWriteTransfer(${1:REGHANDLE inRegHandle}, ${2:PCEVENT_DESCRIPTOR inEventDescriptor}, ${3:LPCGUID inActivityId}, ${4:LPCGUID inRelatedActivityId}, ${5:ULONG inUserDataCount}, ${6:PEVENT_DATA_DESCRIPTOR inUserData}); ${7:// NTSTATUS #HIGH_LEVEL}
snippet ExAcquireFastMutexUnsafe
	ExAcquireFastMutexUnsafe(${1:PFAST_MUTEX ioFastMutex}); ${2:// FASTCALL #APC_LEVEL}
snippet ExAcquireResourceExclusiveLite
	ExAcquireResourceExclusiveLite(${1:PERESOURCE ioResource}, ${2:BOOLEAN inWait}) #APC_LEVEL
snippet ExAcquireResourceSharedLite
	ExAcquireResourceSharedLite(${1:PERESOURCE ioResource}, ${2:BOOLEAN inWait}) #APC_LEVEL
snippet ExAcquireSharedStarveExclusive
	ExAcquireSharedStarveExclusive(${1:PERESOURCE ioResource}, ${2:BOOLEAN inWait}) #APC_LEVEL
snippet ExAcquireSharedWaitForExclusive
	ExAcquireSharedWaitForExclusive(${1:PERESOURCE ioResource}, ${2:BOOLEAN inWait}) #APC_LEVEL
snippet ExAdjustLookasideDepth
	ExAdjustLookasideDepth(${1:VOID}); ${2:// VOID #DISPATCH_LEVEL}
snippet ExAllocateCacheAwareRundownProtection
	ExAllocateCacheAwareRundownProtection(${1:POOL_TYPE inPoolType}, ${2:ULONG inPoolTag}); ${3:// PEX_RUNDOWN_REF_CACHE_AWARE #APC_LEVEL}
snippet ExAllocateFromPagedLookasideList
	ExAllocateFromPagedLookasideList(${1:PPAGED_LOOKASIDE_LIST ioLookaside}); ${2:// PVOID #APC_LEVEL}
snippet ExAllocatePool
	ExAllocatePool(${1:POOL_TYPE inPoolType}, ${2:SIZE_T inNumberOfBytes}); ${3:// PVOID # APC_LEVEL}
snippet ExAllocatePoolWithQuota
	ExAllocatePoolWithQuota(${1:POOL_TYPE inPoolType}, ${2:SIZE_T inNumberOfBytes}); ${3:// PVOID # APC_LEVEL}
snippet ExAllocatePoolWithQuotaTag
	ExAllocatePoolWithQuotaTag(${1:POOL_TYPE inPoolType}, ${2:SIZE_T inNumberOfBytes}, ${3:ULONG inTag}); ${4:// PVOID # DISPATCH_LEVEL}
snippet ExAllocatePoolWithTag
	ExAllocatePoolWithTag(${1:POOL_TYPE inPoolType}, ${2:SIZE_T inNumberOfBytes}, ${3:ULONG inTag}); ${4:// PVOID # DISPATCH_LEVEL}
snippet ExAllocatePoolWithTagPriority
	ExAllocatePoolWithTagPriority(${1:POOL_TYPE inPoolType}, ${2:SIZE_T inNumberOfBytes}, ${3:ULONG inTag}, ${4:EX_POOL_PRIORITY inPriority}); ${5:// PVOID # DISPATCH_LEVEL}
snippet ExConvertExclusiveToSharedLite
	ExConvertExclusiveToSharedLite(${1:PERESOURCE ioResource}); ${2:// VOID #DISPATCH_LEVEL}
snippet ExCreateCallback
	ExCreateCallback(${1:PCALLBACK_OBJECT *CallbackObject}, ${2:POBJECT_ATTRIBUTES inObjectAttributes}, ${3:BOOLEAN inCreate}, ${4:BOOLEAN inAllowMultipleCallbacks}); ${5:// NTSTATUS #APC_LEVEL}
snippet ExDeleteLookasideListEx
	ExDeleteLookasideListEx(${1:PLOOKASIDE_LIST_EX ioLookaside}); ${2:// VOID #DISPATCH_LEVEL}
snippet ExDeleteNPagedLookasideList
	ExDeleteNPagedLookasideList(${1:PNPAGED_LOOKASIDE_LIST ioLookaside}); ${2:// VOID #DISPATCH_LEVEL}
snippet ExDeletePagedLookasideList
	ExDeletePagedLookasideList(${1:PPAGED_LOOKASIDE_LIST ioLookaside}); ${2:// VOID #APC_LEVEL}
snippet ExDeleteResourceLite
	ExDeleteResourceLite(${1:PERESOURCE ioResource}); ${2:// NTSTATUS #DISPATCH_LEVEL}
snippet ExDisableResourceBoostLite
	ExDisableResourceBoostLite(${1:PERESOURCE inResource}); ${2:// VOID #DISPATCH_LEVEL}
snippet ExEnterCriticalRegionAndAcquireResourceExclusive
	ExEnterCriticalRegionAndAcquireResourceExclusive(${1:PERESOURCE ioResource}); ${2:// PVOID #APC_LEVEL}
snippet ExEnterCriticalRegionAndAcquireResourceShared
	ExEnterCriticalRegionAndAcquireResourceShared(${1:PERESOURCE ioResource}); ${2:// PVOID #APC_LEVEL}
snippet ExEnterCriticalRegionAndAcquireSharedWaitForExclusive
	ExEnterCriticalRegionAndAcquireSharedWaitForExclusive(${1:PERESOURCE ioResource}); ${2:// PVOID #APC_LEVEL}
snippet ExFlushLookasideListEx
	ExFlushLookasideListEx(${1:PLOOKASIDE_LIST_EX ioLookaside}); ${2:// VOID #DISPATCH_LEVEL}
snippet ExFreeCacheAwareRundownProtection
	ExFreeCacheAwareRundownProtection(${1:PEX_RUNDOWN_REF_CACHE_AWARE ioRunRefCacheAware}); ${2:// VOID #APC_LEVEL}
snippet ExFreePool
	ExFreePool(${1:inPVOID P}); ${2:// VOID #DISPATCH_LEVEL}
snippet ExFreePoolWithTag
	ExFreePoolWithTag(${1:inPVOID P}, ${2:ULONG inTag}); ${3:// VOID #DISPATCH_LEVEL}
snippet ExFreeToPagedLookasideList
	ExFreeToPagedLookasideList(${1:PPAGED_LOOKASIDE_LIST ioLookaside}, ${2:PVOID inEntry}); ${3:// VOID #APC_LEVEL}
snippet ExGetExclusiveWaiterCount
	ExGetExclusiveWaiterCount(${1:PERESOURCE inResource}); ${2:// ULONG #DISPATCH_LEVEL}
snippet ExGetPreviousMode
	ExGetPreviousMode(${1:VOID}); ${2:// KPROCESSOR_MODE #DISPATCH_LEVEL}
snippet ExGetSharedWaiterCount
	ExGetSharedWaiterCount(${1:PERESOURCE inResource}); ${2:// ULONG #DISPATCH_LEVEL}
snippet ExInitializeLookasideListEx
	ExInitializeLookasideListEx(${1:PLOOKASIDE_LIST_EX outLookaside}, ${2:PALLOCATE_FUNCTION_EX inAllocate}, ${3:PFREE_FUNCTION_EX inFree}, ${4:POOL_TYPE inPoolType}, ${5:ULONG inFlags}, ${6:SIZE_T inSize}, ${7:ULONG inTag}, ${8:USHORT inDepth}); ${9:// NTSTATUS #DISPATCH_LEVEL}
snippet ExInitializeNPagedLookasideList
	ExInitializeNPagedLookasideList(${1:PNPAGED_LOOKASIDE_LIST outLookaside}, ${2:PALLOCATE_FUNCTION inAllocate}, ${3:PFREE_FUNCTION inFree}, ${4:ULONG inFlags}, ${5:SIZE_T inSize}, ${6:ULONG inTag}, ${7:USHORT inDepth}); ${8:// VOID #DISPATCH_LEVEL}
snippet ExInitializePagedLookasideList
	ExInitializePagedLookasideList(${1:PPAGED_LOOKASIDE_LIST outLookaside}, ${2:PALLOCATE_FUNCTION inAllocate}, ${3:PFREE_FUNCTION inFree}, ${4:ULONG inFlags}, ${5:SIZE_T inSize}, ${6:ULONG inTag}, ${7:USHORT inDepth}); ${8:// VOID #APC_LEVEL}
snippet ExInitializeResourceLite
	ExInitializeResourceLite(${1:PERESOURCE outResource}); ${2:// NTSTATUS #DISPATCH_LEVEL}
snippet ExInitializeRundownProtectionCacheAware
	ExInitializeRundownProtectionCacheAware(${1:PEX_RUNDOWN_REF_CACHE_AWARE outRunRefCacheAware}, ${2:SIZE_T inRunRefSize}); ${3:// VOID #APC_LEVEL}
snippet ExInterlockedExtendZone
	ExInterlockedExtendZone(${1:PZONE_HEADER ioZone}, ${2:PVOID ioSegment}, ${3:ULONG inSegmentSize}, ${4:PKSPIN_LOCK ioLock}); ${5:// NTSTATUS #DISPATCH_LEVEL}
snippet ExIsProcessorFeaturePresent
	ExIsProcessorFeaturePresent(${1:ULONG inProcessorFeature}); ${2:// BOOLEAN #PASSIVE_LEVEL}
snippet ExIsResourceAcquiredExclusiveLite
	ExIsResourceAcquiredExclusiveLite(${1:PERESOURCE inResource}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet ExIsResourceAcquiredSharedLite
	ExIsResourceAcquiredSharedLite(${1:PERESOURCE inResource}); ${2:// ULONG #DISPATCH_LEVEL}
snippet ExNotifyCallback
	ExNotifyCallback(${1:PVOID inCallbackObject}, ${2:PVOID inArgument1}, ${3:PVOID inArgument2}); ${4:// VOID #DISPATCH_LEVEL}
snippet ExQueryPoolBlockSize
	ExQueryPoolBlockSize(${1:PVOID inPoolBlock}, ${2:PBOOLEAN outQuotaCharged}); ${3:// SIZE_T #DISPATCH_LEVEL}
snippet ExQueueWorkItem
	ExQueueWorkItem(${1:PWORK_QUEUE_ITEM ioWorkItem}, ${2:WORK_QUEUE_TYPE inQueueType}); ${3:// VOID #DISPATCH_LEVEL}
snippet ExRaiseAccessViolation
	ExRaiseAccessViolation(${1:VOID}); ${2:// VOID #PASSIVE_LEVEL}
snippet ExRaiseDatatypeMisalignment
	ExRaiseDatatypeMisalignment(${1:VOID}); ${2:// VOID #PASSIVE_LEVEL}
snippet ExRaiseStatus
	ExRaiseStatus(${1:NTSTATUS inStatus}); ${2:// VOID #APC_LEVEL}
snippet ExRegisterCallback
	ExRegisterCallback(${1:PCALLBACK_OBJECT ioCallbackObject}, ${2:PCALLBACK_FUNCTION inCallbackFunction}, ${3:PVOID inCallbackContext}); ${4:// PVOID #APC_LEVEL}
snippet ExReinitializeResourceLite
	ExReinitializeResourceLite(${1:PERESOURCE ioResource}); ${2:// NTSTATUS #DISPATCH_LEVEL}
snippet ExReleaseFastMutexUnsafe
	ExReleaseFastMutexUnsafe(${1:PFAST_MUTEX ioFastMutex}); ${2:// FASTCALL #APC_LEVEL}
snippet ExReleaseResourceAndLeaveCriticalRegion
	ExReleaseResourceAndLeaveCriticalRegion(${1:PERESOURCE ioResource}); ${2:// FASTCALL #DISPATCH_LEVEL}
snippet ExReleaseResourceForThreadLite
	ExReleaseResourceForThreadLite(${1:PERESOURCE ioResource}, ${2:ERESOURCE_THREAD inResourceThreadId}); ${3:// VOID #DISPATCH_LEVEL}
snippet ExReleaseResourceLite
	ExReleaseResourceLite(${1:PERESOURCE ioResource}); ${2:// FASTCALL #DISPATCH_LEVEL}
snippet ExSetResourceOwnerPointer
	ExSetResourceOwnerPointer(${1:PERESOURCE ioResource}, ${2:PVOID inOwnerPointer}); ${3:// VOID #DISPATCH_LEVEL}
snippet ExSetResourceOwnerPointerEx
	ExSetResourceOwnerPointerEx(${1:PERESOURCE ioResource}, ${2:PVOID inOwnerPointer}, ${3:ULONG inFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet ExSetTimerResolution
	ExSetTimerResolution(${1:ULONG inDesiredTime}, ${2:BOOLEAN inSetResolution}); ${3:// ULONG #APC_LEVEL}
snippet ExSizeOfRundownProtectionCacheAware
	ExSizeOfRundownProtectionCacheAware(${1:VOID}); ${2:// SIZE_T #APC_LEVEL}
snippet ExUnregisterCallback
	ExUnregisterCallback(${1:PVOID ioCallbackRegistration}); ${2:// VOID #APC_LEVEL}
snippet ExUuidCreate
	ExUuidCreate(${1:UUID out*Uuid}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet FltAcknowledgeEcp
	FltAcknowledgeEcp(${1:PFLT_FILTER inFilter}, ${2:PVOID inEcpContext}); ${3:// VOID #APC_LEVEL}
snippet FltAcquirePushLockExclusive
	FltAcquirePushLockExclusive(${1:PEX_PUSH_LOCK ioPushLock}); ${2:// VOID #APC_LEVEL}
snippet FltAcquirePushLockShared
	FltAcquirePushLockShared(${1:PEX_PUSH_LOCK ioPushLock}); ${2:// VOID #APC_LEVEL}
snippet FltAcquireResourceExclusive
	FltAcquireResourceExclusive(${1:PERESOURCE ioResource}); ${2:// VOID #APC_LEVEL}
snippet FltAcquireResourceShared
	FltAcquireResourceShared(${1:PERESOURCE ioResource}); ${2:// VOID #APC_LEVEL}
snippet FltAdjustDeviceStackSizeForIoRedirection
	FltAdjustDeviceStackSizeForIoRedirection(${1:PFLT_INSTANCE inSourceInstance}, ${2:PFLT_INSTANCE inTargetInstance}, ${3:PBOOLEAN outSourceDeviceStackSizeModified}); ${4:// NTSTATUS #DISPATCH_LEVEL}
snippet FltAllocateCallbackData
	FltAllocateCallbackData(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_CALLBACK_DATA *RetNewCallbackData}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltAllocateCallbackDataEx
	FltAllocateCallbackDataEx(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:FLT_ALLOCATE_CALLBACK_DATA_FLAGS inFlags}, ${4:PFLT_CALLBACK_DATA *RetNewCallbackData}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltAllocateContext
	FltAllocateContext(${1:PFLT_FILTER inFilter}, ${2:FLT_CONTEXT_TYPE inContextType}, ${3:SIZE_T inContextSize}, ${4:POOL_TYPE inPoolType}, ${5:PFLT_CONTEXT *ReturnedContext}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltAllocateDeferredIoWorkItem
	FltAllocateDeferredIoWorkItem(${1:VOID}); ${2:// PFLT_DEFERRED_IO_WORKITEM #DISPATCH_LEVEL}
snippet FltAllocateExtraCreateParameter
	FltAllocateExtraCreateParameter(${1:PFLT_FILTER inFilter}, ${2:LPCGUID inEcpType}, ${3:ULONG inSizeOfContext}, ${4:FSRTL_ALLOCATE_ECP_FLAGS inFlags}, ${5:PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK inCleanupCallback}, ${6:ULONG inPoolTag}, ${7:PVOID *EcpContext}); ${8:// NTSTATUS #APC_LEVEL}
snippet FltAllocateExtraCreateParameterFromLookasideList
	FltAllocateExtraCreateParameterFromLookasideList(${1:PFLT_FILTER inFilter}, ${2:LPCGUID inEcpType}, ${3:ULONG inSizeOfContext}, ${4:FSRTL_ALLOCATE_ECP_FLAGS inFlags}, ${5:PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK inCleanupCallback}, ${6:PVOID ioLookasideList}, ${7:PVOID *EcpContext}); ${8:// NTSTATUS #APC_LEVEL}
snippet FltAllocateExtraCreateParameterList
	FltAllocateExtraCreateParameterList(${1:PFLT_FILTER inFilter}, ${2:FSRTL_ALLOCATE_ECPLIST_FLAGS inFlags}, ${3:PECP_LIST *EcpList}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltAllocateFileLock
	FltAllocateFileLock(${1:PFLT_COMPLETE_LOCK_CALLBACK_DATA_ROUTINE inCompleteLockCallbackDataRoutine}, ${2:PUNLOCK_ROUTINE inUnlockRoutine}); ${3:// PFILE_LOCK #APC_LEVEL}
snippet FltAllocateGenericWorkItem
	FltAllocateGenericWorkItem(${1:VOID}); ${2:// PFLT_GENERIC_WORKITEM #DISPATCH_LEVEL}
snippet FltAllocatePoolAlignedWithTag
	FltAllocatePoolAlignedWithTag(${1:PFLT_INSTANCE inInstance}, ${2:POOL_TYPE inPoolType}, ${3:SIZE_T inNumberOfBytes}, ${4:ULONG inTag}); ${5:// PVOID # APC_LEVEL}
snippet FltApplyPriorityInfoThread
	FltApplyPriorityInfoThread(${1:PIO_PRIORITY_INFO inInputPriorityInfo}, ${2:PIO_PRIORITY_INFO outOutputPriorityInfo}, ${3:PETHREAD inThread}); ${4:// NTSTATUS #DISPATCH_LEVEL}
snippet FltAttachVolume
	FltAttachVolume(${1:PFLT_FILTER ioFilter}, ${2:PFLT_VOLUME ioVolume}, ${3:PCUNICODE_STRING inInstanceName}, ${4:PFLT_INSTANCE *RetInstance}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltAttachVolumeAtAltitude
	FltAttachVolumeAtAltitude(${1:PFLT_FILTER ioFilter}, ${2:PFLT_VOLUME ioVolume}, ${3:PCUNICODE_STRING inAltitude}, ${4:PCUNICODE_STRING inInstanceName}, ${5:PFLT_INSTANCE *RetInstance}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltBuildDefaultSecurityDescriptor
	FltBuildDefaultSecurityDescriptor(${1:PSECURITY_DESCRIPTOR *SecurityDescriptor}, ${2:ACCESS_MASK inDesiredAccess}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltCancelFileOpen
	FltCancelFileOpen(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}); ${3:// VOID #PASSIVE_LEVEL}
snippet FltCancelIo
	FltCancelIo(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet FltCancellableWaitForMultipleObjects
	FltCancellableWaitForMultipleObjects(${1:ULONG inCount}, ${2:PVOID ObjectArray[]}, ${3:WAIT_TYPE inWaitType}, ${4:PLARGE_INTEGER inTimeout}, ${5:PKWAIT_BLOCK inWaitBlockArray}, ${6:PFLT_CALLBACK_DATA inCallbackData}); ${7:// NTSTATUS # APC_LEVEL}
snippet FltCancellableWaitForSingleObject
	FltCancellableWaitForSingleObject(${1:PVOID inObject}, ${2:PLARGE_INTEGER inTimeout}, ${3:PFLT_CALLBACK_DATA inCallbackData}); ${4:// NTSTATUS # APC_LEVEL}
snippet FltCheckAndGrowNameControl
	FltCheckAndGrowNameControl(${1:PFLT_NAME_CONTROL ioNameCtrl}, ${2:USHORT inNewSize}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltCheckLockForReadAccess
	FltCheckLockForReadAccess(${1:PFILE_LOCK inFileLock}, ${2:PFLT_CALLBACK_DATA inCallbackData}); ${3:// BOOLEAN #APC_LEVEL}
snippet FltCheckLockForWriteAccess
	FltCheckLockForWriteAccess(${1:PFILE_LOCK inFileLock}, ${2:PFLT_CALLBACK_DATA inCallbackData}); ${3:// BOOLEAN #APC_LEVEL}
snippet FltCheckOplock
	FltCheckOplock(${1:POPLOCK inOplock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:PVOID inContext}, ${4:PFLTOPLOCK_WAIT_COMPLETE_ROUTINE inWaitCompletionRoutine}, ${5:PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE inPrePostCallbackDataRoutine}); ${6:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltCheckOplockEx
	FltCheckOplockEx(${1:POPLOCK inOplock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:ULONG inFlags}, ${4:PVOID inContext}, ${5:PFLTOPLOCK_WAIT_COMPLETE_ROUTINE inWaitCompletionRoutine}, ${6:PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE inPrePostCallbackDataRoutine}); ${7:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltClearCancelCompletion
	FltClearCancelCompletion(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// NTSTATUS #DISPATCH_LEVEL}
snippet FltClose
	FltClose(${1:HANDLE inFileHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet FltCloseClientPort
	FltCloseClientPort(${1:PFLT_FILTER inFilter}, ${2:PFLT_PORT *ClientPort}); ${3:// VOID #PASSIVE_LEVEL}
snippet FltCloseCommunicationPort
	FltCloseCommunicationPort(${1:PFLT_PORT inServerPort}); ${2:// VOID #PASSIVE_LEVEL}
snippet FltCommitComplete
	FltCommitComplete(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT inTransactionContext}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet FltCommitFinalizeComplete
	FltCommitFinalizeComplete(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT inTransactionContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltCompletePendedPostOperation
	FltCompletePendedPostOperation(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltCompletePendedPreOperation
	FltCompletePendedPreOperation(${1:PFLT_CALLBACK_DATA inCallbackData}, ${2:FLT_PREOP_CALLBACK_STATUS inCallbackStatus}, ${3:PVOID inContext}); ${4:// VOID # APC_LEVEL}
snippet FltCreateCommunicationPort
	FltCreateCommunicationPort(${1:PFLT_FILTER inFilter}, ${2:PFLT_PORT *ServerPort}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PVOID inServerPortCookie}, ${5:PFLT_CONNECT_NOTIFY inConnectNotifyCallback}, ${6:PFLT_DISCONNECT_NOTIFY inDisconnectNotifyCallback}, ${7:PFLT_MESSAGE_NOTIFY inMessageNotifyCallback}, ${8:LONG inMaxConnections}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet FltCreateFile
	FltCreateFile(${1:PFLT_FILTER inFilter}, ${2:PFLT_INSTANCE inInstance}, ${3:PHANDLE outFileHandle}, ${4:ACCESS_MASK inDesiredAccess}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}, ${6:PIO_STATUS_BLOCK outIoStatusBlock}, ${7:PLARGE_INTEGER inAllocationSize}, ${8:ULONG inFileAttributes}, ${9:ULONG inShareAccess}, ${10:ULONG inCreateDisposition}, ${11:ULONG inCreateOptions}, ${12:VOID inEaBuffer}, ${13:ULONG inEaLength}, ${14:ULONG inFlags}); ${15:// NTSTATUS #PASSIVE_LEVEL}
snippet FltCreateFileEx
	FltCreateFileEx(${1:PFLT_FILTER inFilter}, ${2:PFLT_INSTANCE inInstance}, ${3:PHANDLE outFileHandle}, ${4:PFILE_OBJECT *FileObject}, ${5:ACCESS_MASK inDesiredAccess}, ${6:POBJECT_ATTRIBUTES inObjectAttributes}, ${7:PIO_STATUS_BLOCK outIoStatusBlock}, ${8:PLARGE_INTEGER inAllocationSize}, ${9:ULONG inFileAttributes}, ${10:ULONG inShareAccess}, ${11:ULONG inCreateDisposition}, ${12:ULONG inCreateOptions}, ${13:PVOID inEaBuffer}, ${14:ULONG inEaLength}, ${15:ULONG inFlags}); ${16:// NTSTATUS #PASSIVE_LEVEL}
snippet FltCreateFileEx2
	FltCreateFileEx2(${1:PFLT_FILTER inFilter}, ${2:PFLT_INSTANCE inInstance}, ${3:PHANDLE outFileHandle}, ${4:PFILE_OBJECT *FileObject}, ${5:ACCESS_MASK inDesiredAccess}, ${6:POBJECT_ATTRIBUTES inObjectAttributes}, ${7:PIO_STATUS_BLOCK outIoStatusBlock}, ${8:PLARGE_INTEGER inAllocationSize}, ${9:ULONG inFileAttributes}, ${10:ULONG inShareAccess}, ${11:ULONG inCreateDisposition}, ${12:ULONG inCreateOptions}, ${13:PVOID inEaBuffer}, ${14:ULONG inEaLength}, ${15:ULONG inFlags}, ${16:PIO_DRIVER_CREATE_CONTEXT inDriverContext}); ${17:// NTSTATUS #PASSIVE_LEVEL}
snippet FltCreateSystemVolumeInformationFolder
	FltCreateSystemVolumeInformationFolder(${1:PFLT_INSTANCE inInstance}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet FltCurrentBatchOplock
	FltCurrentBatchOplock(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltCurrentOplock
	FltCurrentOplock(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltCurrentOplockH
	FltCurrentOplockH(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltDeleteContext
	FltDeleteContext(${1:PFLT_CONTEXT inContext}); ${2:// VOID #APC_LEVEL}
snippet FltDeleteExtraCreateParameterLookasideList
	FltDeleteExtraCreateParameterLookasideList(${1:PFLT_FILTER inFilter}, ${2:PVOID ioLookaside}, ${3:FSRTL_ECP_LOOKASIDE_FLAGS inFlags}); ${4:// VOID #APC_LEVEL}
snippet FltDeleteFileContext
	FltDeleteFileContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_CONTEXT *OldContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltDeleteInstanceContext
	FltDeleteInstanceContext(${1:PFLT_INSTANCE inInstance}, ${2:PFLT_CONTEXT *OldContext}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltDeletePushLock
	FltDeletePushLock(${1:PEX_PUSH_LOCK inPushLock}); ${2:// VOID #APC_LEVEL}
snippet FltDeleteStreamContext
	FltDeleteStreamContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_CONTEXT *OldContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltDeleteStreamHandleContext
	FltDeleteStreamHandleContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_CONTEXT *OldContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltDeleteTransactionContext
	FltDeleteTransactionContext(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT *OldContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltDeleteVolumeContext
	FltDeleteVolumeContext(${1:PFLT_FILTER inFilter}, ${2:PFLT_VOLUME inVolume}, ${3:PFLT_CONTEXT *OldContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltDetachVolume
	FltDetachVolume(${1:PFLT_FILTER ioFilter}, ${2:PFLT_VOLUME ioVolume}, ${3:PCUNICODE_STRING inInstanceName}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltDeviceIoControlFile
	FltDeviceIoControlFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:ULONG inIoControlCode}, ${4:PVOID inInputBuffer}, ${5:ULONG inInputBufferLength}, ${6:PVOID outOutputBuffer}, ${7:ULONG inOutputBufferLength}, ${8:PULONG outLengthReturned}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet FltEnlistInTransaction
	FltEnlistInTransaction(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT inTransactionContext}, ${4:NOTIFICATION_MASK inNotificationMask}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltEnumerateFilterInformation
	FltEnumerateFilterInformation(${1:ULONG inIndex}, ${2:FILTER_INFORMATION_CLASS inInformationClass}, ${3:PVOID outBuffer}, ${4:ULONG inBufferSize}, ${5:PULONG outBytesReturned}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltEnumerateFilters
	FltEnumerateFilters(${1:PFLT_FILTER *outFilterList}, ${2:ULONG inFilterListSize}, ${3:PULONG outNumberFiltersReturned}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltEnumerateInstanceInformationByFilter
	FltEnumerateInstanceInformationByFilter(${1:PFLT_FILTER inFilter}, ${2:ULONG inIndex}, ${3:INSTANCE_INFORMATION_CLASS inInformationClass}, ${4:PVOID outBuffer}, ${5:ULONG inBufferSize}, ${6:PULONG outBytesReturned}); ${7:// NTSTATUS #APC_LEVEL}
snippet FltEnumerateInstanceInformationByVolume
	FltEnumerateInstanceInformationByVolume(${1:PFLT_VOLUME inVolume}, ${2:ULONG inIndex}, ${3:INSTANCE_INFORMATION_CLASS inInformationClass}, ${4:PVOID outBuffer}, ${5:ULONG inBufferSize}, ${6:PULONG outBytesReturned}); ${7:// NTSTATUS #APC_LEVEL}
snippet FltEnumerateInstances
	FltEnumerateInstances(${1:PFLT_VOLUME inVolume}, ${2:PFLT_FILTER inFilter}, ${3:PFLT_INSTANCE out*InstanceList}, ${4:ULONG inInstanceListSize}, ${5:PULONG outNumberInstancesReturned}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltEnumerateVolumeInformation
	FltEnumerateVolumeInformation(${1:PFLT_FILTER inFilter}, ${2:ULONG inIndex}, ${3:FILTER_VOLUME_INFORMATION_CLASS inInformationClass}, ${4:PVOID outBuffer}, ${5:ULONG inBufferSize}, ${6:PULONG outBytesReturned}); ${7:// NTSTATUS #APC_LEVEL}
snippet FltEnumerateVolumes
	FltEnumerateVolumes(${1:PFLT_FILTER inFilter}, ${2:PFLT_VOLUME out*VolumeList}, ${3:ULONG inVolumeListSize}, ${4:PULONG outNumberVolumesReturned}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltFindExtraCreateParameter
	FltFindExtraCreateParameter(${1:PFLT_FILTER inFilter}, ${2:PECP_LIST inEcpList}, ${3:LPCGUID inEcpType}, ${4:PVOID *EcpContext}, ${5:ULONG out*EcpContextSize}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltFlushBuffers
	FltFlushBuffers(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet FltFreeCallbackData
	FltFreeCallbackData(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltFreeDeferredIoWorkItem
	FltFreeDeferredIoWorkItem(${1:PFLT_DEFERRED_IO_WORKITEM inFltWorkItem}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltFreeExtraCreateParameter
	FltFreeExtraCreateParameter(${1:PFLT_FILTER inFilter}, ${2:PVOID inEcpContext}); ${3:// VOID #APC_LEVEL}
snippet FltFreeExtraCreateParameterList
	FltFreeExtraCreateParameterList(${1:PFLT_FILTER inFilter}, ${2:PECP_LIST inEcpList}); ${3:// VOID #APC_LEVEL}
snippet FltFreeFileLock
	FltFreeFileLock(${1:PFILE_LOCK inFileLock}); ${2:// VOID #APC_LEVEL}
snippet FltFreeGenericWorkItem
	FltFreeGenericWorkItem(${1:PFLT_GENERIC_WORKITEM inFltWorkItem}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltFreePoolAlignedWithTag
	FltFreePoolAlignedWithTag(${1:PFLT_INSTANCE inInstance}, ${2:PVOID inBuffer}, ${3:ULONG inTag}); ${4:// VOID #DISPATCH_LEVEL}
snippet FltFreeSecurityDescriptor
	FltFreeSecurityDescriptor(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}); ${2:// VOID #APC_LEVEL}
snippet FltFsControlFile
	FltFsControlFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:ULONG inFsControlCode}, ${4:PVOID inInputBuffer}, ${5:ULONG inInputBufferLength}, ${6:PVOID outOutputBuffer}, ${7:ULONG inOutputBufferLength}, ${8:PULONG outLengthReturned}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet FltGetBottomInstance
	FltGetBottomInstance(${1:PFLT_VOLUME inVolume}, ${2:PFLT_INSTANCE *Instance}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetContexts
	FltGetContexts(${1:PCFLT_RELATED_OBJECTS inFltObjects}, ${2:FLT_CONTEXT_TYPE inDesiredContexts}, ${3:PFLT_RELATED_CONTEXTS outContexts}); ${4:// VOID #APC_LEVEL}
snippet FltGetDestinationFileNameInformation
	FltGetDestinationFileNameInformation(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:HANDLE inRootDirectory}, ${4:PWSTR FileName}, ${5:ULONG inFileNameLength}, ${6:FLT_FILE_NAME_OPTIONS inNameOptions}, ${7:PFLT_FILE_NAME_INFORMATION *RetFileNameInformation}); ${8:// NTSTATUS #APC_LEVEL}
snippet FltGetDeviceObject
	FltGetDeviceObject(${1:PFLT_VOLUME inVolume}, ${2:PDEVICE_OBJECT *DeviceObject}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet FltGetDiskDeviceObject
	FltGetDiskDeviceObject(${1:PFLT_VOLUME inVolume}, ${2:PDEVICE_OBJECT *DiskDeviceObject}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet FltGetEcpListFromCallbackData
	FltGetEcpListFromCallbackData(${1:PFLT_FILTER inFilter}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:PECP_LIST *EcpList}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetFileContext
	FltGetFileContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_CONTEXT *Context}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetFileNameInformation
	FltGetFileNameInformation(${1:PFLT_CALLBACK_DATA inCallbackData}, ${2:FLT_FILE_NAME_OPTIONS inNameOptions}, ${3:PFLT_FILE_NAME_INFORMATION *FileNameInformation}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetFileNameInformationUnsafe
	FltGetFileNameInformationUnsafe(${1:PFILE_OBJECT inFileObject}, ${2:PFLT_INSTANCE inInstance}, ${3:FLT_FILE_NAME_OPTIONS inNameOptions}, ${4:PFLT_FILE_NAME_INFORMATION *FileNameInformation}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltGetFileSystemType
	FltGetFileSystemType(${1:PVOID inFltObject}, ${2:PFLT_FILESYSTEM_TYPE outFileSystemType}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetFilterFromInstance
	FltGetFilterFromInstance(${1:PFLT_INSTANCE inInstance}, ${2:PFLT_FILTER *RetFilter}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetFilterFromName
	FltGetFilterFromName(${1:PCUNICODE_STRING inFilterName}, ${2:PFLT_FILTER *RetFilter}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetFilterInformation
	FltGetFilterInformation(${1:PFLT_FILTER inFilter}, ${2:FILTER_INFORMATION_CLASS inInformationClass}, ${3:PVOID outBuffer}, ${4:ULONG inBufferSize}, ${5:PULONG outBytesReturned}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltGetInstanceContext
	FltGetInstanceContext(${1:PFLT_INSTANCE inInstance}, ${2:PFLT_CONTEXT *Context}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetInstanceInformation
	FltGetInstanceInformation(${1:PFLT_INSTANCE inInstance}, ${2:INSTANCE_INFORMATION_CLASS inInformationClass}, ${3:PVOID outBuffer}, ${4:ULONG inBufferSize}, ${5:PULONG outBytesReturned}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltGetIoPriorityHint
	FltGetIoPriorityHint(${1:PFLT_CALLBACK_DATA inData}); ${2:// IO_PRIORITY_HINT #DISPATCH_LEVEL}
snippet FltGetIoPriorityHintFromCallbackData
	FltGetIoPriorityHintFromCallbackData(${1:PFLT_CALLBACK_DATA inData}); ${2:// IO_PRIORITY_HINT #DISPATCH_LEVEL}
snippet FltGetIoPriorityHintFromFileObject
	FltGetIoPriorityHintFromFileObject(${1:PFILE_OBJECT inFileObject}); ${2:// IO_PRIORITY_HINT #DISPATCH_LEVEL}
snippet FltGetIoPriorityHintFromThread
	FltGetIoPriorityHintFromThread(${1:PETHREAD inThread}); ${2:// IO_PRIORITY_HINT #DISPATCH_LEVEL}
snippet FltGetLowerInstance
	FltGetLowerInstance(${1:PFLT_INSTANCE inCurrentInstance}, ${2:PFLT_INSTANCE *LowerInstance}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetNewSystemBufferAddress
	FltGetNewSystemBufferAddress(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// PVOID #DPC_LEVEL}
snippet FltGetNextExtraCreateParameter
	FltGetNextExtraCreateParameter(${1:PFLT_FILTER inFilter}, ${2:PECP_LIST inEcpList}, ${3:PVOID inCurrentEcpContext}, ${4:LPGUID outNextEcpType}, ${5:PVOID *NextEcpContext}, ${6:ULONG out*NextEcpContextSize}); ${7:// NTSTATUS #APC_LEVEL}
snippet FltGetRequestorProcess
	FltGetRequestorProcess(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// PEPROCESS #DISPATCH_LEVEL}
snippet FltGetRequestorProcessId
	FltGetRequestorProcessId(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// ULONG #DISPATCH_LEVEL}
snippet FltGetRequestorProcessIdEx
	FltGetRequestorProcessIdEx(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// HANDLE #DISPATCH_LEVEL}
snippet FltGetRequestorSessionId
	FltGetRequestorSessionId(${1:PFLT_CALLBACK_DATA inCallbackData}, ${2:PULONG outSessionId }); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetRoutineAddress
	FltGetRoutineAddress(${1:PCSTR inFltMgrRoutineName}); ${2:// PVOID #APC_LEVEL}
snippet FltGetStreamContext
	FltGetStreamContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_CONTEXT *Context}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetStreamHandleContext
	FltGetStreamHandleContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_CONTEXT *Context}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetTopInstance
	FltGetTopInstance(${1:PFLT_VOLUME inVolume}, ${2:PFLT_INSTANCE *Instance}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetTransactionContext
	FltGetTransactionContext(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT *Context}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetTunneledName
	FltGetTunneledName(${1:PFLT_CALLBACK_DATA inCallbackData}, ${2:PFLT_FILE_NAME_INFORMATION inFileNameInformation}, ${3:PFLT_FILE_NAME_INFORMATION *RetTunneledFileNameInformation}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetUpperInstance
	FltGetUpperInstance(${1:PFLT_INSTANCE inCurrentInstance}, ${2:PFLT_INSTANCE *UpperInstance}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeContext
	FltGetVolumeContext(${1:PFLT_FILTER inFilter}, ${2:PFLT_VOLUME inVolume}, ${3:PFLT_CONTEXT *Context}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeFromDeviceObject
	FltGetVolumeFromDeviceObject(${1:PFLT_FILTER inFilter}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PFLT_VOLUME *RetVolume}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeFromFileObject
	FltGetVolumeFromFileObject(${1:PFLT_FILTER inFilter}, ${2:PFILE_OBJECT inFileObject}, ${3:PFLT_VOLUME *RetVolume}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeFromInstance
	FltGetVolumeFromInstance(${1:PFLT_INSTANCE inInstance}, ${2:PFLT_VOLUME *RetVolume}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeFromName
	FltGetVolumeFromName(${1:PFLT_FILTER inFilter}, ${2:PCUNICODE_STRING inVolumeName}, ${3:PFLT_VOLUME *RetVolume}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet FltGetVolumeGuidName
	FltGetVolumeGuidName(${1:PFLT_VOLUME inVolume}, ${2:PUNICODE_STRING outVolumeGuidName}, ${3:PULONG outBufferSizeNeeded}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet FltGetVolumeInformation
	FltGetVolumeInformation(${1:PFLT_VOLUME inVolume}, ${2:FILTER_VOLUME_INFORMATION_CLASS inInformationClass}, ${3:PVOID outBuffer}, ${4:ULONG inBufferSize}, ${5:PULONG outBytesReturned}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeInstanceFromName
	FltGetVolumeInstanceFromName(${1:PFLT_FILTER inFilter}, ${2:PFLT_VOLUME inVolume}, ${3:PCUNICODE_STRING inInstanceName}, ${4:PFLT_INSTANCE *RetInstance}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeName
	FltGetVolumeName(${1:PFLT_VOLUME inVolume}, ${2:PUNICODE_STRING VolumeName}, ${3:PULONG outBufferSizeNeeded}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltGetVolumeProperties
	FltGetVolumeProperties(${1:PFLT_VOLUME inVolume}, ${2:PFLT_VOLUME_PROPERTIES outVolumeProperties}, ${3:ULONG inVolumePropertiesLength}, ${4:PULONG outLengthReturned}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltInitExtraCreateParameterLookasideList
	FltInitExtraCreateParameterLookasideList(${1:PFLT_FILTER inFilter}, ${2:PVOID ioLookaside}, ${3:FSRTL_ECP_LOOKASIDE_FLAGS inFlags}, ${4:SIZE_T inSize}, ${5:ULONG inTag}); ${6:// VOID #APC_LEVEL}
snippet FltInitializeOplock
	FltInitializeOplock(${1:POPLOCK outOplock}); ${2:// VOID #APC_LEVEL}
snippet FltInitializePushLock
	FltInitializePushLock(${1:PEX_PUSH_LOCK outPushLock}); ${2:// VOID #APC_LEVEL}
snippet FltInsertExtraCreateParameter
	FltInsertExtraCreateParameter(${1:PFLT_FILTER inFilter}, ${2:PECP_LIST ioEcpList}, ${3:PVOID ioEcpContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltIs32bitProcess
	FltIs32bitProcess(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet FltIsDirectory
	FltIsDirectory(${1:PFILE_OBJECT inFileObject}, ${2:PFLT_INSTANCE inInstance}, ${3:PBOOLEAN outIsDirectory}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltIsEcpAcknowledged
	FltIsEcpAcknowledged(${1:PFLT_FILTER inFilter}, ${2:PVOID inEcpContext}); ${3:// BOOLEAN #APC_LEVEL}
snippet FltIsEcpFromUserMode
	FltIsEcpFromUserMode(${1:PFLT_FILTER inFilter}, ${2:PVOID inEcpContext}); ${3:// BOOLEAN #APC_LEVEL}
snippet FltIsFltMgrVolumeDeviceObject
	FltIsFltMgrVolumeDeviceObject(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltIsIoRedirectionAllowed
	FltIsIoRedirectionAllowed(${1:PFLT_INSTANCE inSourceInstance}, ${2:PFLT_INSTANCE inTargetInstance}, ${3:PBOOLEAN outRedirectionAllowed }); ${4:// NTSTATUS #DISPATCH_LEVEL}
snippet FltIsIoRedirectionAllowedForOperation
	FltIsIoRedirectionAllowedForOperation(${1:PFLT_CALLBACK_DATA inData}, ${2:PFLT_INSTANCE inTargetInstance}, ${3:PBOOLEAN outRedirectionAllowedThisIo}, ${4:PBOOLEAN outRedirectionAllowedAllIo }); ${5:// NTSTATUS #DISPATCH_LEVEL}
snippet FltIsVolumeSnapshot
	FltIsVolumeSnapshot(${1:PVOID inFltObject}, ${2:PBOOLEAN outIsSnapshotVolume}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet FltIsVolumeWritable
	FltIsVolumeWritable(${1:PVOID inFltObject}, ${2:PBOOLEAN outIsWritable}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet FltLoadFilter
	FltLoadFilter(${1:PCUNICODE_STRING inFilterName}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet FltLockUserBuffer
	FltLockUserBuffer(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// NTSTATUS #APC_LEVEL}
snippet FltNotifyFilterChangeDirectory
	FltNotifyFilterChangeDirectory(${1:PNOTIFY_SYNC ioNotifySync}, ${2:PLIST_ENTRY ioNotifyList}, ${3:PVOID inFsContext}, ${4:PSTRING inFullDirectoryName}, ${5:BOOLEAN inWatchTree}, ${6:BOOLEAN inIgnoreBuffer}, ${7:ULONG inCompletionFilter}, ${8:PFLT_CALLBACK_DATA inNotifyCallbackData}, ${9:PCHECK_FOR_TRAVERSE_ACCESS inTraverseCallback}, ${10:PSECURITY_SUBJECT_CONTEXT inSubjectContext}, ${11:PFILTER_REPORT_CHANGE inFilterCallback}); ${12:// VOID #APC_LEVEL}
snippet FltObjectDereference
	FltObjectDereference(${1:PVOID ioFltObject}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltObjectReference
	FltObjectReference(${1:PVOID ioFltObject}); ${2:// NTSTATUS #DISPATCH_LEVEL}
snippet FltOpenVolume
	FltOpenVolume(${1:PFLT_INSTANCE inInstance}, ${2:PHANDLE outVolumeHandle}, ${3:PFILE_OBJECT *VolumeFileObject}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet FltOplockBreakH
	FltOplockBreakH(${1:POPLOCK inOplock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:ULONG inFlags}, ${4:PVOID inContext}, ${5:PFLTOPLOCK_WAIT_COMPLETE_ROUTINE inWaitCompletionRoutine}, ${6:PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE inPrePostCallbackDataRoutine}); ${7:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltOplockBreakToNone
	FltOplockBreakToNone(${1:POPLOCK inOplock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:PVOID inContext}, ${4:PFLTOPLOCK_WAIT_COMPLETE_ROUTINE inWaitCompletionRoutine}, ${5:PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE inPrePostCallbackDataRoutine}); ${6:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltOplockBreakToNoneEx
	FltOplockBreakToNoneEx(${1:POPLOCK inOplock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:ULONG inFlags}, ${4:PVOID inContext}, ${5:PFLTOPLOCK_WAIT_COMPLETE_ROUTINE inWaitCompletionRoutine}, ${6:PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE inPrePostCallbackDataRoutine}); ${7:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltOplockFsctrl
	FltOplockFsctrl(${1:POPLOCK inOplock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:ULONG inOpenCount}); ${4:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltOplockFsctrlEx
	FltOplockFsctrlEx(${1:POPLOCK inOplock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:ULONG inOpenCount}, ${4:ULONG inFlags}); ${5:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltOplockIsFastIoPossible
	FltOplockIsFastIoPossible(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltOplockIsSharedRequest
	FltOplockIsSharedRequest(${1:PFLT_CALLBACK_DATA inCallbackData}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltParseFileName
	FltParseFileName(${1:PCUNICODE_STRING inFileName}, ${2:PUNICODE_STRING Extension}, ${3:PUNICODE_STRING Stream}, ${4:PUNICODE_STRING FinalComponent}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltParseFileNameInformation
	FltParseFileNameInformation(${1:PFLT_FILE_NAME_INFORMATION ioFileNameInformation}); ${2:// NTSTATUS #APC_LEVEL}
snippet FltPerformAsynchronousIo
	FltPerformAsynchronousIo(${1:PFLT_CALLBACK_DATA ioCallbackData}, ${2:PFLT_COMPLETED_ASYNC_IO_CALLBACK inCallbackRoutine}, ${3:PVOID inCallbackContext}); ${4:// NTSTATUS # PASSIVE_LEVEL}
snippet FltPerformSynchronousIo
	FltPerformSynchronousIo(${1:PFLT_CALLBACK_DATA ioCallbackData}); ${2:// VOID # PASSIVE_LEVEL}
snippet FltPrePrepareComplete
	FltPrePrepareComplete(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT inTransactionContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltPrepareComplete
	FltPrepareComplete(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT inTransactionContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltProcessFileLock
	FltProcessFileLock(${1:PFILE_LOCK inFileLock}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:PVOID inContext}); ${4:// FLT_PREOP_CALLBACK_STATUS #APC_LEVEL}
snippet FltPurgeFileNameInformationCache
	FltPurgeFileNameInformationCache(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}); ${3:// NTSTATUS #APC_LEVEL}
snippet FltQueryDirectoryFile
	FltQueryDirectoryFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PVOID FileInformation}, ${4:ULONG inLength}, ${5:FILE_INFORMATION_CLASS inFileInformationClass}, ${6:BOOLEAN inReturnSingleEntry}, ${7:PUNICODE_STRING inFileName}, ${8:BOOLEAN inRestartScan}, ${9:PULONG outLengthReturned}); ${10:// NTSTATUS #PASSIVE_LEVEL}
snippet FltQueryEaFile
	FltQueryEaFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PVOID ReturnedEaData}, ${4:ULONG inLength}, ${5:BOOLEAN inReturnSingleEntry}, ${6:PVOID inEaList}, ${7:ULONG inEaListLength}, ${8:PULONG inEaIndex}, ${9:BOOLEAN inRestartScan}, ${10:PULONG outLengthReturned}); ${11:// NTSTATUS #PASSIVE_LEVEL}
snippet FltQueryInformationFile
	FltQueryInformationFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PVOID FileInformation}, ${4:ULONG inLength}, ${5:FILE_INFORMATION_CLASS inFileInformationClass}, ${6:PULONG outLengthReturned}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet FltQuerySecurityObject
	FltQuerySecurityObject(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:SECURITY_INFORMATION inSecurityInformation}, ${4:PSECURITY_DESCRIPTOR ioSecurityDescriptor}, ${5:ULONG inLength}, ${6:PULONG outLengthNeeded}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet FltQueryVolumeInformation
	FltQueryVolumeInformation(${1:PFLT_INSTANCE inInstance}, ${2:PIO_STATUS_BLOCK outIosb}, ${3:PVOID FsInformation}, ${4:ULONG inLength}, ${5:FS_INFORMATION_CLASS inFsInformationClass}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet FltQueryVolumeInformationFile
	FltQueryVolumeInformationFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PVOID FsInformation}, ${4:ULONG inLength}, ${5:FS_INFORMATION_CLASS inFsInformationClass}, ${6:PULONG outLengthReturned}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet FltQueueDeferredIoWorkItem
	FltQueueDeferredIoWorkItem(${1:PFLT_DEFERRED_IO_WORKITEM inFltWorkItem}, ${2:PFLT_CALLBACK_DATA inData}, ${3:PFLT_DEFERRED_IO_WORKITEM_ROUTINE inWorkerRoutine}, ${4:WORK_QUEUE_TYPE inQueueType}, ${5:PVOID inContext}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet FltQueueGenericWorkItem
	FltQueueGenericWorkItem(${1:PFLT_GENERIC_WORKITEM inFltWorkItem}, ${2:PVOID inFltObject}, ${3:PFLT_GENERIC_WORKITEM_ROUTINE inWorkerRoutine}, ${4:WORK_QUEUE_TYPE inQueueType}, ${5:PVOID inContext}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet FltReadFile
	FltReadFile(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PLARGE_INTEGER inByteOffset}, ${4:ULONG inLength}, ${5:PVOID Buffer}, ${6:FLT_IO_OPERATION_FLAGS inFlags}, ${7:PULONG outBytesRead}, ${8:PFLT_COMPLETED_ASYNC_IO_CALLBACK inCallbackRoutine}, ${9:PVOID inCallbackContext}); ${10:// NTSTATUS # APC_LEVEL}
snippet FltReadFile
	FltReadFile(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PLARGE_INTEGER inByteOffset}, ${4:ULONG inLength}, ${5:PVOID Buffer}, ${6:FLT_IO_OPERATION_FLAGS inFlags}, ${7:PULONG outBytesRead}, ${8:PFLT_COMPLETED_ASYNC_IO_CALLBACK inCallbackRoutine}, ${9:PVOID inCallbackContext}); ${10:// NTSTATUS #PASSIVE_LEVEL}
snippet FltReferenceContext
	FltReferenceContext(${1:PFLT_CONTEXT inContext}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltReferenceFileNameInformation
	FltReferenceFileNameInformation(${1:PFLT_FILE_NAME_INFORMATION inFileNameInformation}); ${2:// VOID #APC_LEVEL}
snippet FltRegisterFilter
	FltRegisterFilter(${1:PDRIVER_OBJECT inDriver}, ${2:CONST inFLT_REGISTRATION *Registration}, ${3:PFLT_FILTER *RetFilter}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltReissueSynchronousIo
	FltReissueSynchronousIo(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFLT_CALLBACK_DATA inCallbackData}); ${3:// VOID # APC_LEVEL}
snippet FltReissueSynchronousIo
	FltReissueSynchronousIo(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFLT_CALLBACK_DATA inCallbackData}); ${3:// VOID #PASSIVE_LEVEL}
snippet FltReleaseContext
	FltReleaseContext(${1:PFLT_CONTEXT inContext}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltReleaseContexts
	FltReleaseContexts(${1:PFLT_RELATED_CONTEXTS inContexts}); ${2:// VOID #APC_LEVEL}
snippet FltReleaseFileNameInformation
	FltReleaseFileNameInformation(${1:PFLT_FILE_NAME_INFORMATION inFileNameInformation}); ${2:// VOID #APC_LEVEL}
snippet FltReleasePushLock
	FltReleasePushLock(${1:PEX_PUSH_LOCK ioPushLock}); ${2:// VOID #APC_LEVEL}
snippet FltReleaseResource
	FltReleaseResource(${1:PERESOURCE ioResource}); ${2:// VOID #DISPATCH_LEVEL}
snippet FltRemoveExtraCreateParameter
	FltRemoveExtraCreateParameter(${1:PFLT_FILTER inFilter}, ${2:PECP_LIST ioEcpList}, ${3:LPCGUID inEcpType}, ${4:PVOID *EcpContext}, ${5:ULONG out*EcpContextSize}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltRequestOperationStatusCallback
	FltRequestOperationStatusCallback(${1:PFLT_CALLBACK_DATA inData}, ${2:PFLT_GET_OPERATION_STATUS_CALLBACK inCallbackRoutine}, ${3:PVOID inRequesterContext}); ${4:// NTSTATUS #DISPATCH_LEVEL}
snippet FltRetrieveIoPriorityInfo
	FltRetrieveIoPriorityInfo(${1:PFLT_CALLBACK_DATA inData}, ${2:PFILE_OBJECT inFileObject}, ${3:PETHREAD inThread}, ${4:PIO_PRIORITY_INFO ioPriorityInfo}); ${5:// NTSTATUS #DISPATCH_LEVEL}
snippet FltReuseCallbackData
	FltReuseCallbackData(${1:PFLT_CALLBACK_DATA ioCallbackData}); ${2:// VOID #APC_LEVEL}
snippet FltRollbackComplete
	FltRollbackComplete(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT inTransactionContext}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet FltRollbackEnlistment
	FltRollbackEnlistment(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:PFLT_CONTEXT inTransactionContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltSendMessage
	FltSendMessage(${1:PFLT_FILTER inFilter}, ${2:PFLT_PORT *ClientPort}, ${3:PVOID SenderBuffer}, ${4:ULONG inSenderBufferLength}, ${5:PVOID outReplyBuffer}, ${6:PULONG ReplyLength}, ${7:PLARGE_INTEGER inTimeout}); ${8:// NTSTATUS #APC_LEVEL}
snippet FltSetCancelCompletion
	FltSetCancelCompletion(${1:PFLT_CALLBACK_DATA inCallbackData}, ${2:PFLT_COMPLETE_CANCELED_CALLBACK inCanceledCallback}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet FltSetEaFile
	FltSetEaFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PVOID EaBuffer}, ${4:ULONG inLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet FltSetEcpListIntoCallbackData
	FltSetEcpListIntoCallbackData(${1:PFLT_FILTER inFilter}, ${2:PFLT_CALLBACK_DATA inCallbackData}, ${3:PECP_LIST inEcpList}); ${4:// NTSTATUS #APC_LEVEL}
snippet FltSetFileContext
	FltSetFileContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:FLT_SET_CONTEXT_OPERATION inOperation}, ${4:PFLT_CONTEXT inNewContext}, ${5:PFLT_CONTEXT *OldContext}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltSetInformationFile
	FltSetInformationFile(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PVOID FileInformation}, ${4:ULONG inLength}, ${5:FILE_INFORMATION_CLASS inFileInformationClass}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet FltSetInstanceContext
	FltSetInstanceContext(${1:PFLT_INSTANCE inInstance}, ${2:FLT_SET_CONTEXT_OPERATION inOperation}, ${3:PFLT_CONTEXT inNewContext}, ${4:PFLT_CONTEXT *OldContext}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltSetIoPriorityHintIntoCallbackData
	FltSetIoPriorityHintIntoCallbackData(${1:PFLT_CALLBACK_DATA inData}, ${2:IO_PRIORITY_HINT inPriorityHint}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet FltSetIoPriorityHintIntoFileObject
	FltSetIoPriorityHintIntoFileObject(${1:PFILE_OBJECT inFileObject}, ${2:IO_PRIORITY_HINT inPriorityHint}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet FltSetIoPriorityHintIntoThread
	FltSetIoPriorityHintIntoThread(${1:PETHREAD inThread}, ${2:IO_PRIORITY_HINT inPriorityHint}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet FltSetSecurityObject
	FltSetSecurityObject(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:SECURITY_INFORMATION inSecurityInformation}, ${4:PSECURITY_DESCRIPTOR inSecurityDescriptor}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet FltSetStreamContext
	FltSetStreamContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:FLT_SET_CONTEXT_OPERATION inOperation}, ${4:PFLT_CONTEXT inNewContext}, ${5:PFLT_CONTEXT *OldContext}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltSetStreamHandleContext
	FltSetStreamHandleContext(${1:PFLT_INSTANCE inInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:FLT_SET_CONTEXT_OPERATION inOperation}, ${4:PFLT_CONTEXT inNewContext}, ${5:PFLT_CONTEXT *OldContext}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltSetTransactionContext
	FltSetTransactionContext(${1:PFLT_INSTANCE inInstance}, ${2:PKTRANSACTION inTransaction}, ${3:FLT_SET_CONTEXT_OPERATION inOperation}, ${4:PFLT_CONTEXT inNewContext}, ${5:PFLT_CONTEXT *OldContext}); ${6:// NTSTATUS #APC_LEVEL}
snippet FltSetVolumeContext
	FltSetVolumeContext(${1:PFLT_VOLUME inVolume}, ${2:FLT_SET_CONTEXT_OPERATION inOperation}, ${3:PFLT_CONTEXT inNewContext}, ${4:PFLT_CONTEXT *OldContext}); ${5:// NTSTATUS #APC_LEVEL}
snippet FltSetVolumeInformation
	FltSetVolumeInformation(${1:PFLT_INSTANCE inInstance}, ${2:PIO_STATUS_BLOCK outIosb}, ${3:PVOID FsInformation}, ${4:ULONG inLength}, ${5:FS_INFORMATION_CLASS inFsInformationClass}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet FltStartFiltering
	FltStartFiltering(${1:PFLT_FILTER inFilter}); ${2:// NTSTATUS #APC_LEVEL}
snippet FltSupportsFileContexts
	FltSupportsFileContexts(${1:PFILE_OBJECT inFileObject}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltSupportsFileContextsEx
	FltSupportsFileContextsEx(${1:PFILE_OBJECT inFileObject}, ${2:PFLT_INSTANCE inInstance}); ${3:// BOOLEAN #APC_LEVEL}
snippet FltSupportsStreamContexts
	FltSupportsStreamContexts(${1:PFILE_OBJECT inFileObject}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltSupportsStreamHandleContexts
	FltSupportsStreamHandleContexts(${1:PFILE_OBJECT inFileObject}); ${2:// BOOLEAN #APC_LEVEL}
snippet FltTagFile
	FltTagFile(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:ULONG inFileTag}, ${4:inGUID *Guid}, ${5:PVOID DataBuffer}, ${6:USHORT inDataBufferLength}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet FltUninitializeOplock
	FltUninitializeOplock(${1:POPLOCK inOplock}); ${2:// VOID #APC_LEVEL}
snippet FltUnloadFilter
	FltUnloadFilter(${1:PCUNICODE_STRING inFilterName}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet FltUnregisterFilter
	FltUnregisterFilter(${1:PFLT_FILTER inFilter}); ${2:// VOID #APC_LEVEL}
snippet FltUntagFile
	FltUntagFile(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:ULONG inFileTag}, ${4:inGUID *Guid}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet FltWriteFile
	FltWriteFile(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PLARGE_INTEGER inByteOffset}, ${4:ULONG inLength}, ${5:PVOID Buffer}, ${6:FLT_IO_OPERATION_FLAGS inFlags}, ${7:PULONG outBytesWritten}, ${8:PFLT_COMPLETED_ASYNC_IO_CALLBACK inCallbackRoutine}, ${9:PVOID inCallbackContext}); ${10:// NTSTATUS # APC_LEVEL}
snippet FltWriteFile
	FltWriteFile(${1:PFLT_INSTANCE inInitiatingInstance}, ${2:PFILE_OBJECT inFileObject}, ${3:PLARGE_INTEGER inByteOffset}, ${4:ULONG inLength}, ${5:PVOID Buffer}, ${6:FLT_IO_OPERATION_FLAGS inFlags}, ${7:PULONG outBytesWritten}, ${8:PFLT_COMPLETED_ASYNC_IO_CALLBACK inCallbackRoutine}, ${9:PVOID inCallbackContext}); ${10:// NTSTATUS #PASSIVE_LEVEL}
snippet FreeIprBuff
	FreeIprBuff(${1:inIPRcvBuf *pRcvBuf}); ${2:// ) FreeIprBuff #DISPATCH_LEVEL}
snippet FsRtlAcknowledgeEcp
	FsRtlAcknowledgeEcp(${1:PVOID inEcpContext}); ${2:// VOID #APC_LEVEL}
snippet FsRtlAcquireFileExclusive
	FsRtlAcquireFileExclusive(${1:PFILE_OBJECT inFileObject}); ${2:// VOID #PASSIVE_LEVEL}
snippet FsRtlAddBaseMcbEntry
	FsRtlAddBaseMcbEntry(${1:PBASE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:LONGLONG inLbn}, ${4:LONGLONG inSectorCount}); ${5:// BOOLEAN #APC_LEVEL}
snippet FsRtlAddBaseMcbEntryEx
	FsRtlAddBaseMcbEntryEx(${1:PBASE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:LONGLONG inLbn}, ${4:LONGLONG inSectorCount}); ${5:// NTSTATUS #APC_LEVEL}
snippet FsRtlAddLargeMcbEntry
	FsRtlAddLargeMcbEntry(${1:PLARGE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:LONGLONG inLbn}, ${4:LONGLONG inSectorCount}); ${5:// BOOLEAN #APC_LEVEL}
snippet FsRtlAddMcbEntry
	FsRtlAddMcbEntry(${1:PMCB inMcb}, ${2:VBN inVbn}, ${3:LBN inLbn}, ${4:ULONG inSectorCount}); ${5:// BOOLEAN #APC_LEVEL}
snippet FsRtlAddToTunnelCache
	FsRtlAddToTunnelCache(${1:inTUNNEL *Cache}, ${2:ULONGLONG inDirectoryKey}, ${3:inUNICODE_STRING *ShortName}, ${4:inUNICODE_STRING *LongName}, ${5:BOOLEAN inKeyByShortName}, ${6:ULONG inDataLength}, ${7:VOID *Data}); ${8:// VOID #APC_LEVEL}
snippet FsRtlAllocateExtraCreateParameter
	FsRtlAllocateExtraCreateParameter(${1:LPCGUID inEcpType}, ${2:ULONG inSizeOfContext}, ${3:FSRTL_ALLOCATE_ECP_FLAGS inFlags}, ${4:PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK inCleanupCallback}, ${5:ULONG inPoolTag}, ${6:PVOID *EcpContext}); ${7:// NTSTATUS #APC_LEVEL}
snippet FsRtlAllocateExtraCreateParameterFromLookasideList
	FsRtlAllocateExtraCreateParameterFromLookasideList(${1:LPCGUID inEcpType}, ${2:ULONG inSizeOfContext}, ${3:FSRTL_ALLOCATE_ECP_FLAGS inFlags}, ${4:PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK inCleanupCallback}, ${5:PVOID ioLookasideList}, ${6:PVOID *EcpContext}); ${7:// NTSTATUS #APC_LEVEL}
snippet FsRtlAllocateExtraCreateParameterList
	FsRtlAllocateExtraCreateParameterList(${1:FSRTL_ALLOCATE_ECPLIST_FLAGS inFlags}, ${2:PECP_LIST *EcpList}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlAllocateFileLock
	FsRtlAllocateFileLock(${1:PCOMPLETE_LOCK_IRP_ROUTINE inCompleteLockIrpRoutine}, ${2:PUNLOCK_ROUTINE inUnlockRoutine}); ${3:// PFILE_LOCK #APC_LEVEL}
snippet FsRtlAllocateResource
	FsRtlAllocateResource(${1:VOID}); ${2:// The #APC_LEVEL}
snippet FsRtlAreNamesEqual
	FsRtlAreNamesEqual(${1:PCUNICODE_STRING inConstantNameA}, ${2:PCUNICODE_STRING inConstantNameB}, ${3:BOOLEAN inIgnoreCase}, ${4:PCWCH inUpcaseTable}); ${5:// BOOLEAN #PASSIVE_LEVEL}
snippet FsRtlAreThereCurrentOrInProgressFileLocks
	FsRtlAreThereCurrentOrInProgressFileLocks(${1:PFILE_LOCK inFileLock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlAreVolumeStartupApplicationsComplete
	FsRtlAreVolumeStartupApplicationsComplete(${1:VOID}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlBalanceReads
	FsRtlBalanceReads(${1:PDEVICE_OBJECT inTargetDevice}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet FsRtlCancellableWaitForMultipleObjects
	FsRtlCancellableWaitForMultipleObjects(${1:ULONG inCount}, ${2:PVOID ObjectArray[]}, ${3:WAIT_TYPE inWaitType}, ${4:PLARGE_INTEGER inTimeout}, ${5:PKWAIT_BLOCK inWaitBlockArray}, ${6:PIRP inIrp}); ${7:// NTSTATUS # APC_LEVEL}
snippet FsRtlCancellableWaitForSingleObject
	FsRtlCancellableWaitForSingleObject(${1:PVOID inObject}, ${2:PLARGE_INTEGER inTimeout}, ${3:PIRP inIrp}); ${4:// NTSTATUS # APC_LEVEL}
snippet FsRtlChangeBackingFileObject
	FsRtlChangeBackingFileObject(${1:PFILE_OBJECT inCurrentFileObject}, ${2:PFILE_OBJECT inNewFileObject}, ${3:FSRTL_CHANGE_BACKING_TYPE inChangeBackingType}, ${4:ULONG inFlags #reserved}, ${5:must be zero}); ${6:// NTSTATUS //PASSIVE_LEVEL}
snippet FsRtlCheckLockForReadAccess
	FsRtlCheckLockForReadAccess(${1:PFILE_LOCK inFileLock}, ${2:PIRP inIrp}); ${3:// BOOLEAN #APC_LEVEL}
snippet FsRtlCheckLockForWriteAccess
	FsRtlCheckLockForWriteAccess(${1:PFILE_LOCK inFileLock}, ${2:PIRP inIrp}); ${3:// BOOLEAN #APC_LEVEL}
snippet FsRtlCheckOplock
	FsRtlCheckOplock(${1:POPLOCK inOplock}, ${2:PIRP inIrp}, ${3:PVOID inContext}, ${4:POPLOCK_WAIT_COMPLETE_ROUTINE inCompletionRoutine}, ${5:POPLOCK_FS_PREPOST_IRP inPostIrpRoutine}); ${6:// NTSTATUS #APC_LEVEL}
snippet FsRtlCheckOplockEx
	FsRtlCheckOplockEx(${1:POPLOCK inOplock}, ${2:PIRP inIrp}, ${3:ULONG inFlags}, ${4:PVOID inContext}, ${5:POPLOCK_WAIT_COMPLETE_ROUTINE inCompletionRoutine}, ${6:POPLOCK_FS_PREPOST_IRP inPostIrpRoutine}); ${7:// NTSTATUS #APC_LEVEL}
snippet FsRtlCopyRead
	FsRtlCopyRead(${1:PFILE_OBJECT inFileObject}, ${2:PLARGE_INTEGER inFileOffset}, ${3:ULONG inLength}, ${4:BOOLEAN inWait}, ${5:ULONG inLockKey}, ${6:PVOID Buffer}, ${7:PIO_STATUS_BLOCK outIoStatus}, ${8:PDEVICE_OBJECT inDeviceObject}); ${9:// BOOLEAN #PASSIVE_LEVEL}
snippet FsRtlCopyWrite
	FsRtlCopyWrite(${1:PFILE_OBJECT inFileObject}, ${2:PLARGE_INTEGER inFileOffset}, ${3:ULONG inLength}, ${4:BOOLEAN inWait}, ${5:ULONG inLockKey}, ${6:PVOID Buffer}, ${7:PIO_STATUS_BLOCK outIoStatus}, ${8:PDEVICE_OBJECT inDeviceObject}); ${9:// BOOLEAN #PASSIVE_LEVEL}
snippet FsRtlCreateSectionForDataScan
	FsRtlCreateSectionForDataScan(${1:PHANDLE outSectionHandle}, ${2:PVOID *SectionObject}, ${3:PLARGE_INTEGER outSectionFileSize}, ${4:PFILE_OBJECT inFileObject}, ${5:ACCESS_MASK inDesiredAccess}, ${6:POBJECT_ATTRIBUTES inObjectAttributes}, ${7:PLARGE_INTEGER inMaximumSize}, ${8:ULONG inSectionPageProtection}, ${9:ULONG inAllocationAttributes}, ${10:ULONG inFlags}); ${11:// NTSTATUS #APC_LEVEL}
snippet FsRtlCurrentBatchOplock
	FsRtlCurrentBatchOplock(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlCurrentOplock
	FsRtlCurrentOplock(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlCurrentOplockH
	FsRtlCurrentOplockH(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlDeleteExtraCreateParameterLookasideList
	FsRtlDeleteExtraCreateParameterLookasideList(${1:PVOID ioLookaside}, ${2:FSRTL_ECP_LOOKASIDE_FLAGS inFlags}); ${3:// VOID # APC_LEVEL}
snippet FsRtlDeleteKeyFromTunnelCache
	FsRtlDeleteKeyFromTunnelCache(${1:inTUNNEL *Cache}, ${2:ULONGLONG inDirectoryKey}); ${3:// VOID #APC_LEVEL}
snippet FsRtlDeleteTunnelCache
	FsRtlDeleteTunnelCache(${1:inTUNNEL *Cache}); ${2:// VOID #APC_LEVEL}
snippet FsRtlDeregisterUncProvider
	FsRtlDeregisterUncProvider(${1:HANDLE inHandle}); ${2:// VOID #PASSIVE_LEVEL}
snippet FsRtlDissectDbcs
	FsRtlDissectDbcs(${1:ANSI_STRING inPath}, ${2:PANSI_STRING outFirstName}, ${3:PANSI_STRING outRemainingName}); ${4:// VOID #APC_LEVEL}
snippet FsRtlDissectName
	FsRtlDissectName(${1:UNICODE_STRING inPath}, ${2:PUNICODE_STRING outFirstName}, ${3:PUNICODE_STRING outRemainingName}); ${4:// VOID #PASSIVE_LEVEL}
snippet FsRtlDoesDbcsContainWildCards
	FsRtlDoesDbcsContainWildCards(${1:PANSI_STRING inName}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlDoesNameContainWildCards
	FsRtlDoesNameContainWildCards(${1:PUNICODE_STRING inName}); ${2:// BOOLEAN #PASSIVE_LEVEL}
snippet FsRtlFastCheckLockForRead
	FsRtlFastCheckLockForRead(${1:PFILE_LOCK inFileLock}, ${2:PLARGE_INTEGER inStartingByte}, ${3:PLARGE_INTEGER inLength}, ${4:ULONG inKey}, ${5:PFILE_OBJECT inFileObject}, ${6:PVOID inProcessId}); ${7:// BOOLEAN #APC_LEVEL}
snippet FsRtlFastCheckLockForWrite
	FsRtlFastCheckLockForWrite(${1:PFILE_LOCK inFileLock}, ${2:PLARGE_INTEGER inStartingByte}, ${3:PLARGE_INTEGER inLength}, ${4:ULONG inKey}, ${5:PVOID inFileObject}, ${6:PVOID inProcessId}); ${7:// BOOLEAN #APC_LEVEL}
snippet FsRtlFastUnlockAll
	FsRtlFastUnlockAll(${1:PFILE_LOCK inFileLock}, ${2:PFILE_OBJECT inFileObject}, ${3:PEPROCESS inProcessId}, ${4:PVOID inContext}); ${5:// NTSTATUS #APC_LEVEL}
snippet FsRtlFastUnlockAllByKey
	FsRtlFastUnlockAllByKey(${1:PFILE_LOCK inFileLock}, ${2:PFILE_OBJECT inFileObject}, ${3:PEPROCESS inProcessId}, ${4:ULONG inKey}, ${5:PVOID inContext}); ${6:// NTSTATUS #APC_LEVEL}
snippet FsRtlFastUnlockSingle
	FsRtlFastUnlockSingle(${1:PFILE_LOCK inFileLock}, ${2:PFILE_OBJECT inFileObject}, ${3:LARGE_INTEGER inUNALIGNED *FileOffset}, ${4:PLARGE_INTEGER inLength}, ${5:PEPROCESS inProcessId}, ${6:ULONG inKey}, ${7:PVOID inContext}, ${8:BOOLEAN inAlreadySynchronized}); ${9:// NTSTATUS #APC_LEVEL}
snippet FsRtlFindExtraCreateParameter
	FsRtlFindExtraCreateParameter(${1:PECP_LIST inEcpList}, ${2:LPCGUID inEcpType}, ${3:PVOID *EcpContext}, ${4:ULONG out*EcpContextSize}); ${5:// NTSTATUS #APC_LEVEL}
snippet FsRtlFindInTunnelCache
	FsRtlFindInTunnelCache(${1:inTUNNEL *Cache}, ${2:ULONGLONG inDirectoryKey}, ${3:inUNICODE_STRING *Name}, ${4:UNICODE_STRING out*ShortName}, ${5:UNICODE_STRING out*LongName}, ${6:ioULONG *DataLength}, ${7:VOID *Data}); ${8:// BOOLEAN #APC_LEVEL}
snippet FsRtlFreeExtraCreateParameter
	FsRtlFreeExtraCreateParameter(${1:PVOID inEcpContext}); ${2:// VOID #APC_LEVEL}
snippet FsRtlFreeExtraCreateParameterList
	FsRtlFreeExtraCreateParameterList(${1:PECP_LIST inEcpList}); ${2:// VOID #APC_LEVEL}
snippet FsRtlFreeFileLock
	FsRtlFreeFileLock(${1:PFILE_LOCK inFileLock}); ${2:// VOID #APC_LEVEL}
snippet FsRtlGetEcpListFromIrp
	FsRtlGetEcpListFromIrp(${1:PIRP inIrp}, ${2:PECP_LIST *EcpList}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlGetFileSize
	FsRtlGetFileSize(${1:PFILE_OBJECT inFileObject}, ${2:PLARGE_INTEGER outFileSize}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet FsRtlGetNextBaseMcbEntry
	FsRtlGetNextBaseMcbEntry(${1:PBASE_MCB inMcb}, ${2:ULONG inRunIndex}, ${3:PLONGLONG outVbn}, ${4:PLONGLONG outLbn}, ${5:PLONGLONG outSectorCount}); ${6:// BOOLEAN #APC_LEVEL}
snippet FsRtlGetNextExtraCreateParameter
	FsRtlGetNextExtraCreateParameter(${1:PECP_LIST inEcpList}, ${2:PVOID inCurrentEcpContext}, ${3:LPGUID outNextEcpType}, ${4:PVOID *NextEcpContext}, ${5:ULONG out*NextEcpContextSize}); ${6:// NTSTATUS #APC_LEVEL}
snippet FsRtlGetNextFileLock
	FsRtlGetNextFileLock(${1:PFILE_LOCK inFileLock}, ${2:BOOLEAN inRestart}); ${3:// PFILE_LOCK_INFO #APC_LEVEL}
snippet FsRtlGetNextLargeMcbEntry
	FsRtlGetNextLargeMcbEntry(${1:PLARGE_MCB inMcb}, ${2:ULONG inRunIndex}, ${3:PLONGLONG outVbn}, ${4:PLONGLONG outLbn}, ${5:PLONGLONG outSectorCount}); ${6:// BOOLEAN #APC_LEVEL}
snippet FsRtlGetNextMcbEntry
	FsRtlGetNextMcbEntry(${1:PMCB inMcb}, ${2:ULONG inRunIndex}, ${3:PVBN outVbn}, ${4:PLBN outLbn}, ${5:PULONG outSectorCount}); ${6:// BOOLEAN #APC_LEVEL}
snippet FsRtlInitExtraCreateParameterLookasideList
	FsRtlInitExtraCreateParameterLookasideList(${1:PVOID ioLookaside}, ${2:FSRTL_ECP_LOOKASIDE_FLAGS inFlags}, ${3:SIZE_T inSize}, ${4:ULONG inTag}); ${5:// VOID # APC_LEVEL}
snippet FsRtlInitializeBaseMcb
	FsRtlInitializeBaseMcb(${1:PBASE_MCB inMcb}, ${2:POOL_TYPE inPoolType}); ${3:// VOID #APC_LEVEL}
snippet FsRtlInitializeBaseMcbEx
	FsRtlInitializeBaseMcbEx(${1:PBASE_MCB inMcb}, ${2:POOL_TYPE inPoolType}, ${3:USHORT inFlags}); ${4:// BOOLEAN #APC_LEVEL}
snippet FsRtlInitializeFileLock
	FsRtlInitializeFileLock(${1:PFILE_LOCK inFileLock}, ${2:PCOMPLETE_LOCK_IRP_ROUTINE inCompleteLockIrpRoutine}, ${3:PUNLOCK_ROUTINE inUnlockRoutine}); ${4:// VOID #APC_LEVEL}
snippet FsRtlInitializeLargeMcb
	FsRtlInitializeLargeMcb(${1:PLARGE_MCB inMcb}, ${2:POOL_TYPE inPoolType}); ${3:// VOID #APC_LEVEL}
snippet FsRtlInitializeMcb
	FsRtlInitializeMcb(${1:PMCB inMcb}, ${2:POOL_TYPE inPoolType}); ${3:// VOID #APC_LEVEL}
snippet FsRtlInitializeOplock
	FsRtlInitializeOplock(${1:POPLOCK ioOplock}); ${2:// VOID #APC_LEVEL}
snippet FsRtlInitializeTunnelCache
	FsRtlInitializeTunnelCache(${1:inTUNNEL *Cache}); ${2:// VOID #APC_LEVEL}
snippet FsRtlInsertExtraCreateParameter
	FsRtlInsertExtraCreateParameter(${1:PECP_LIST ioEcpList}, ${2:PVOID ioEcpContext}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlInsertPerFileContext
	FsRtlInsertPerFileContext(${1:PVOID* inPerFileContextPointer}, ${2:PFSRTL_PER_FILE_CONTEXT inPtr}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlInsertPerFileObjectContext
	FsRtlInsertPerFileObjectContext(${1:PFILE_OBJECT inFileObject}, ${2:PFSRTL_PER_FILEOBJECT_CONTEXT inPtr}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlInsertPerStreamContext
	FsRtlInsertPerStreamContext(${1:PFSRTL_ADVANCED_FCB_HEADER inPerStreamContext}, ${2:PFSRTL_PER_STREAM_CONTEXT inPtr}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlIsDbcsInExpression
	FsRtlIsDbcsInExpression(${1:PANSI_STRING inExpression}, ${2:PANSI_STRING inName}); ${3:// BOOLEAN #APC_LEVEL}
snippet FsRtlIsEcpAcknowledged
	FsRtlIsEcpAcknowledged(${1:PVOID inEcpContext}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlIsEcpFromUserMode
	FsRtlIsEcpFromUserMode(${1:PVOID inEcpContext}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlIsFatDbcsLegal
	FsRtlIsFatDbcsLegal(${1:ANSI_STRING inDbcsName}, ${2:BOOLEAN inWildCardsPermissible}, ${3:BOOLEAN inPathNamePermissible}, ${4:BOOLEAN inLeadingBackslashPermissible}); ${5:// BOOLEAN #APC_LEVEL}
snippet FsRtlIsHpfsDbcsLegal
	FsRtlIsHpfsDbcsLegal(${1:ANSI_STRING inDbcsName}, ${2:BOOLEAN inWildCardsPermissible}, ${3:BOOLEAN inPathNamePermissible}, ${4:BOOLEAN inLeadingBackslashPermissible}); ${5:// BOOLEAN #APC_LEVEL}
snippet FsRtlIsNameInExpression
	FsRtlIsNameInExpression(${1:PUNICODE_STRING inExpression}, ${2:PUNICODE_STRING inName}, ${3:BOOLEAN inIgnoreCase}, ${4:PWCH inUpcaseTable}); ${5:// BOOLEAN #PASSIVE_LEVEL}
snippet FsRtlIsPagingFile
	FsRtlIsPagingFile(${1:PFILE_OBJECT inFileObject}); ${2:// LOGICAL #APC_LEVEL}
snippet FsRtlLogCcFlushError
	FsRtlLogCcFlushError(${1:PUNICODE_STRING inFileName}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PSECTION_OBJECT_POINTERS inSectionObjectPointer}, ${4:NTSTATUS inFlushError}, ${5:ULONG inFlags}); ${6:// NTSTATUS #APC_LEVEL}
snippet FsRtlLookupBaseMcbEntry
	FsRtlLookupBaseMcbEntry(${1:PBASE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:PLONGLONG outLbn}, ${4:PLONGLONG outSectorCountFromLbn}, ${5:PLONGLONG outStartingLbn}, ${6:PLONGLONG outSectorCountFromStartingLbn}, ${7:PULONG outIndex}); ${8:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupLargeMcbEntry
	FsRtlLookupLargeMcbEntry(${1:PLARGE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:PLONGLONG outLbn}, ${4:PLONGLONG outSectorCountFromLbn}, ${5:PLONGLONG outStartingLbn}, ${6:PLONGLONG outSectorCountFromStartingLbn}, ${7:PULONG outIndex}); ${8:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupLastBaseMcbEntry
	FsRtlLookupLastBaseMcbEntry(${1:PBASE_MCB inMcb}, ${2:PLONGLONG outVbn}, ${3:PLONGLONG outLbn}); ${4:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupLastBaseMcbEntryAndIndex
	FsRtlLookupLastBaseMcbEntryAndIndex(${1:PBASE_MCB inOpaqueMcb}, ${2:PLONGLONG ioLargeVbn}, ${3:PLONGLONG ioLargeLbn}, ${4:PULONG ioIndex}); ${5:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupLastLargeMcbEntry
	FsRtlLookupLastLargeMcbEntry(${1:PLARGE_MCB inMcb}, ${2:PLONGLONG outVbn}, ${3:PLONGLONG outLbn}); ${4:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupLastLargeMcbEntryAndIndex
	FsRtlLookupLastLargeMcbEntryAndIndex(${1:PLARGE_MCB inOpaqueMcb}, ${2:PLONGLONG outLargeVbn}, ${3:PLONGLONG outLargeLbn}, ${4:PULONG outIndex}); ${5:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupLastMcbEntry
	FsRtlLookupLastMcbEntry(${1:PMCB inMcb}, ${2:PVBN outVbn}, ${3:PLBN outLbn}); ${4:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupMcbEntry
	FsRtlLookupMcbEntry(${1:PMCB inMcb}, ${2:VBN inVbn}, ${3:PLBN outLbn}, ${4:PULONG outSectorCount}, ${5:PULONG outIndex}); ${6:// BOOLEAN #APC_LEVEL}
snippet FsRtlLookupPerFileContext
	FsRtlLookupPerFileContext(${1:PVOID* inPerFileContextPointer}, ${2:PVOID inOwnerId}, ${3:PVOID inInstanceId}); ${4:// PFSRTL_PER_FILE_CONTEXT #APC_LEVEL}
snippet FsRtlLookupPerFileObjectContext
	FsRtlLookupPerFileObjectContext(${1:PFILE_OBJECT inFileObject}, ${2:PVOID inOwnerId}, ${3:PVOID inInstanceId}); ${4:// PFSRTL_PER_FILEOBJECT_CONTEXT #APC_LEVEL}
snippet FsRtlLookupPerStreamContextInternal
	FsRtlLookupPerStreamContextInternal(${1:PFSRTL_ADVANCED_FCB_HEADER inStreamContext}, ${2:PVOID inOwnerId}, ${3:PVOID inInstanceId}); ${4:// PFSRTL_PER_STREAM_CONTEXT #APC_LEVEL}
snippet FsRtlMdlReadCompleteDev
	FsRtlMdlReadCompleteDev(${1:PFILE_OBJECT inFileObject}, ${2:PMDL inMdlChain}, ${3:PDEVICE_OBJECT inDeviceObject}); ${4:// BOOLEAN #PASSIVE_LEVEL}
snippet FsRtlMdlReadDev
	FsRtlMdlReadDev(${1:PFILE_OBJECT inFileObject}, ${2:PLARGE_INTEGER inFileOffset}, ${3:ULONG inLength}, ${4:ULONG inLockKey}, ${5:PMDL *MdlChain}, ${6:PIO_STATUS_BLOCK outIoStatus}, ${7:PDEVICE_OBJECT inDeviceObject}); ${8:// BOOLEAN #APC_LEVEL}
snippet FsRtlMdlWriteCompleteDev
	FsRtlMdlWriteCompleteDev(${1:PFILE_OBJECT inFileObject}, ${2:PLARGE_INTEGER inFileOffset}, ${3:PMDL inMdlChain}, ${4:PDEVICE_OBJECT inDeviceObject}); ${5:// BOOLEAN #PASSIVE_LEVEL}
snippet FsRtlMupGetProviderIdFromName
	FsRtlMupGetProviderIdFromName(${1:PUNICODE_STRING inpProviderName}, ${2:PULONG32 outpProviderId}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlMupGetProviderInfoFromFileObject
	FsRtlMupGetProviderInfoFromFileObject(${1:PFILE_OBJECT inpFileObject}, ${2:ULONG inLevel}, ${3:PVOID pBuffer}, ${4:PULONG iopBufferSize}); ${5:// NTSTATUS #APC_LEVEL}
snippet FsRtlNotifyCleanup
	FsRtlNotifyCleanup(${1:PNOTIFY_SYNC inNotifySync}, ${2:PLIST_ENTRY inNotifyList}, ${3:PVOID inFsContext}); ${4:// VOID #APC_LEVEL}
snippet FsRtlNotifyCleanupAll
	FsRtlNotifyCleanupAll(${1:PNOTIFY_SYNC inNotifySync}:, ${2:PLIST_ENTRY inNotifyList}); ${3:// VOID #APC_LEVEL}
snippet FsRtlNotifyFilterChangeDirectory
	FsRtlNotifyFilterChangeDirectory(${1:PNOTIFY_SYNC inNotifySync}, ${2:PLIST_ENTRY inNotifyList}, ${3:PVOID inFsContext}, ${4:PSTRING inFullDirectoryName}, ${5:BOOLEAN inWatchTree}, ${6:BOOLEAN inIgnoreBuffer}, ${7:ULONG inCompletionFilter}, ${8:PIRP inNotifyIrp}, ${9:PCHECK_FOR_TRAVERSE_ACCESS inTraverseCallback}, ${10:PSECURITY_SUBJECT_CONTEXT inSubjectContext}, ${11:PFILTER_REPORT_CHANGE inFilterCallback}); ${12:// VOID #PASSIVE_LEVEL}
snippet FsRtlNotifyFilterReportChange
	FsRtlNotifyFilterReportChange(${1:PNOTIFY_SYNC inNotifySync}, ${2:PLIST_ENTRY inNotifyList}, ${3:PSTRING inFullTargetName}, ${4:USHORT inTargetNameOffset}, ${5:PSTRING inStreamName}, ${6:PSTRING inNormalizedParentName}, ${7:ULONG inFilterMatch}, ${8:ULONG inAction}, ${9:PVOID inTargetContext}, ${10:PVOID inFilterContext}); ${11:// VOID #PASSIVE_LEVEL}
snippet FsRtlNotifyFullChangeDirectory
	FsRtlNotifyFullChangeDirectory(${1:PNOTIFY_SYNC inNotifySync}, ${2:PLIST_ENTRY inNotifyList}, ${3:PVOID inFsContext}, ${4:PSTRING inFullDirectoryName}, ${5:BOOLEAN inWatchTree}, ${6:BOOLEAN inIgnoreBuffer}, ${7:ULONG inCompletionFilter}, ${8:PIRP inNotifyIrp}, ${9:PCHECK_FOR_TRAVERSE_ACCESS inTraverseCallback}, ${10:PSECURITY_SUBJECT_CONTEXT inSubjectContext}); ${11:// VOID #PASSIVE_LEVEL}
snippet FsRtlNotifyFullReportChange
	FsRtlNotifyFullReportChange(${1:PNOTIFY_SYNC inNotifySync}, ${2:PLIST_ENTRY inNotifyList}, ${3:PSTRING inFullTargetName}, ${4:USHORT inTargetNameOffset}, ${5:PSTRING inStreamName}, ${6:PSTRING inNormalizedParentName}, ${7:ULONG inFilterMatch}, ${8:ULONG inAction}, ${9:PVOID inTargetContext}); ${10:// VOID #PASSIVE_LEVEL}
snippet FsRtlNotifyInitializeSync
	FsRtlNotifyInitializeSync(${1:inPNOTIFY_SYNC *NotifySync}); ${2:// VOID #APC_LEVEL}
snippet FsRtlNotifyUninitializeSync
	FsRtlNotifyUninitializeSync(${1:inPNOTIFY_SYNC *NotifySync}); ${2:// VOID #APC_LEVEL}
snippet FsRtlNotifyVolumeEvent
	FsRtlNotifyVolumeEvent(${1:PFILE_OBJECT inFileObject}, ${2:ULONG inEventCode}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlNotifyVolumeEventEx
	FsRtlNotifyVolumeEventEx(${1:PFILE_OBJECT inFileObject}, ${2:ULONG inEventCode}, ${3:PTARGET_DEVICE_CUSTOM_NOTIFICATION inEvent}); ${4:// NTSTATUS #DISPATCH_LEVEL}
snippet FsRtlNumberOfRunsInBaseMcb
	FsRtlNumberOfRunsInBaseMcb(${1:PBASE_MCB inMcb}); ${2:// ULONG #APC_LEVEL}
snippet FsRtlNumberOfRunsInLargeMcb
	FsRtlNumberOfRunsInLargeMcb(${1:PLARGE_MCB inMcb}); ${2:// ULONG #APC_LEVEL}
snippet FsRtlNumberOfRunsInMcb
	FsRtlNumberOfRunsInMcb(${1:PMCB inMcb}); ${2:// ULONG #APC_LEVEL}
snippet FsRtlOplockBreakH
	FsRtlOplockBreakH(${1:POPLOCK inOplock}, ${2:PIRP inIrp}, ${3:ULONG inFlags}, ${4:PVOID inContext}, ${5:POPLOCK_WAIT_COMPLETE_ROUTINE inCompletionRoutine}, ${6:POPLOCK_FS_PREPOST_IRP inPostIrpRoutine}); ${7:// NTSTATUS #APC_LEVEL}
snippet FsRtlOplockBreakToNone
	FsRtlOplockBreakToNone(${1:POPLOCK ioOplock}, ${2:PIO_STACK_LOCATION inIrpSp}, ${3:PIRP inIrp}, ${4:PVOID inContext}, ${5:POPLOCK_WAIT_COMPLETE_ROUTINE inCompletionRoutine}, ${6:POPLOCK_FS_PREPOST_IRP inPostIrpRoutine}); ${7:// NTSTATUS #APC_LEVEL}
snippet FsRtlOplockBreakToNoneEx
	FsRtlOplockBreakToNoneEx(${1:POPLOCK ioOplock}, ${2:PIRP inIrp}, ${3:ULONG inFlags}, ${4:PVOID inContext}, ${5:POPLOCK_WAIT_COMPLETE_ROUTINE inCompletionRoutine}, ${6:POPLOCK_FS_PREPOST_IRP inPostIrpRoutine}); ${7:// NTSTATUS #APC_LEVEL}
snippet FsRtlOplockFsctrl
	FsRtlOplockFsctrl(${1:POPLOCK inOplock}, ${2:PIRP inIrp}, ${3:ULONG inOpenCount}); ${4:// NTSTATUS #APC_LEVEL}
snippet FsRtlOplockFsctrlEx
	FsRtlOplockFsctrlEx(${1:POPLOCK inOplock}, ${2:PIRP inIrp}, ${3:ULONG inOpenCount}, ${4:ULONG inFlags}); ${5:// NTSTATUS #APC_LEVEL}
snippet FsRtlOplockIsFastIoPossible
	FsRtlOplockIsFastIoPossible(${1:POPLOCK inOplock}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlOplockIsSharedRequest
	FsRtlOplockIsSharedRequest(${1:PIRP inIrp}); ${2:// BOOLEAN #APC_LEVEL}
snippet FsRtlOplockKeysEqual
	FsRtlOplockKeysEqual(${1:PFILE_OBJECT inFo1}, ${2:PFILE_OBJECT inFo2}); ${3:// BOOLEAN #APC_LEVEL}
snippet FsRtlPostPagingFileStackOverflow
	FsRtlPostPagingFileStackOverflow(${1:PVOID inContext}, ${2:PKEVENT inEvent}, ${3:PFSRTL_STACK_OVERFLOW_ROUTINE inStackOverflowRoutine}); ${4:// VOID #DISPATCH_LEVEL}
snippet FsRtlPostStackOverflow
	FsRtlPostStackOverflow(${1:PVOID inContext}, ${2:PKEVENT inEvent}, ${3:PFSRTL_STACK_OVERFLOW_ROUTINE inStackOverflowRoutine}); ${4:// VOID #DISPATCH_LEVEL}
snippet FsRtlPrepareMdlWriteDev
	FsRtlPrepareMdlWriteDev(${1:PFILE_OBJECT inFileObject}, ${2:PLARGE_INTEGER inFileOffset}, ${3:ULONG inLength}, ${4:ULONG inLockKey}, ${5:PMDL *MdlChain}, ${6:PIO_STATUS_BLOCK outIoStatus}, ${7:PDEVICE_OBJECT inDeviceObject}); ${8:// BOOLEAN #APC_LEVEL}
snippet FsRtlPrivateLock
	FsRtlPrivateLock(${1:PFILE_LOCK inFileLock}, ${2:PFILE_OBJECT inFileObject}, ${3:PLARGE_INTEGER inFileOffset}, ${4:PLARGE_INTEGER inLength}, ${5:PEPROCESS inProcessId}, ${6:ULONG inKey}, ${7:BOOLEAN inFailImmediately}, ${8:BOOLEAN inExclusiveLock}, ${9:PIO_STATUS_BLOCK outIosb}, ${10:PIRP inIrp}, ${11:PVOID inContext}, ${12:BOOLEAN inAlreadySynchronized}); ${13:// BOOLEAN #APC_LEVEL}
snippet FsRtlProcessFileLock
	FsRtlProcessFileLock(${1:PFILE_LOCK inFileLock}, ${2:PIRP inIrp}, ${3:PVOID inContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet FsRtlRegisterUncProvider
	FsRtlRegisterUncProvider(${1:PHANDLE outMupHandle}, ${2:PUNICODE_STRING inRedirectorDeviceName}, ${3:BOOLEAN inMailslotsSupported}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet FsRtlRegisterUncProviderEx
	FsRtlRegisterUncProviderEx(${1:PHANDLE outMupHandle}, ${2:PUNICODE_STRING inRedirDevName}, ${3:PDEVICE_OBJECT inDeviceObject}, ${4:ULONG inFlags}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet FsRtlReleaseFile
	FsRtlReleaseFile(${1:PFILE_OBJECT inFileObject}); ${2:// VOID #APC_LEVEL}
snippet FsRtlRemoveBaseMcbEntry
	FsRtlRemoveBaseMcbEntry(${1:PBASE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:LONGLONG inSectorCount}); ${4:// BOOLEAN #APC_LEVEL}
snippet FsRtlRemoveDotsFromPath
	FsRtlRemoveDotsFromPath(${1: PWSTR OriginalString}, ${2:USHORT inPathLength}, ${3:USHORT out*NewLength}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet FsRtlRemoveExtraCreateParameter
	FsRtlRemoveExtraCreateParameter(${1:PECP_LIST ioEcpList}, ${2:LPCGUID inEcpType}, ${3:PVOID *EcpContext}, ${4:ULONG out*EcpContextSize}); ${5:// NTSTATUS #APC_LEVEL}
snippet FsRtlRemoveLargeMcbEntry
	FsRtlRemoveLargeMcbEntry(${1:PLARGE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:LONGLONG inSectorCount}); ${4:// VOID #APC_LEVEL}
snippet FsRtlRemoveMcbEntry
	FsRtlRemoveMcbEntry(${1:PMCB inMcb}, ${2:VBN inVbn}, ${3:ULONG inSectorCount}); ${4:// VOID #APC_LEVEL}
snippet FsRtlRemovePerFileContext
	FsRtlRemovePerFileContext(${1:PVOID* inPerFileContextPointer}, ${2:PVOID inOwnerId}, ${3:PVOID inInstanceId}); ${4:// PFSRTL_PER_FILE_CONTEXT #APC_LEVEL}
snippet FsRtlRemovePerFileObjectContext
	FsRtlRemovePerFileObjectContext(${1:PFILE_OBJECT inFileObject}, ${2:PVOID inOwnerId}, ${3:PVOID inInstanceId}); ${4:// PFSRTL_PER_FILEOBJECT_CONTEXT #APC_LEVEL}
snippet FsRtlRemovePerStreamContext
	FsRtlRemovePerStreamContext(${1:PFSRTL_ADVANCED_FCB_HEADER inStreamContext}, ${2:PVOID inOwnerId}, ${3:PVOID inInstanceId}); ${4:// PFSRTL_PER_STREAM_CONTEXT #APC_LEVEL}
snippet FsRtlResetBaseMcb
	FsRtlResetBaseMcb(${1:PBASE_MCB inMcb}); ${2:// VOID #APC_LEVEL}
snippet FsRtlResetLargeMcb
	FsRtlResetLargeMcb(${1:PLARGE_MCB inMcb}, ${2:BOOLEAN inSelfSynchronized}); ${3:// VOID #APC_LEVEL}
snippet FsRtlSetEcpListIntoIrp
	FsRtlSetEcpListIntoIrp(${1:PIRP ioIrp}, ${2:PECP_LIST inEcpList}); ${3:// NTSTATUS #APC_LEVEL}
snippet FsRtlSplitBaseMcb
	FsRtlSplitBaseMcb(${1:PBASE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:LONGLONG inAmount}); ${4:// BOOLEAN #APC_LEVEL}
snippet FsRtlSplitLargeMcb
	FsRtlSplitLargeMcb(${1:PLARGE_MCB inMcb}, ${2:LONGLONG inVbn}, ${3:LONGLONG inAmount}); ${4:// BOOLEAN #APC_LEVEL}
snippet FsRtlTeardownPerFileContexts
	FsRtlTeardownPerFileContexts(${1:PVOID* inPerFileContextPointer}); ${2:// VOID #APC_LEVEL}
snippet FsRtlTeardownPerStreamContexts
	FsRtlTeardownPerStreamContexts(${1:PFSRTL_ADVANCED_FCB_HEADER inAdvancedHeader}); ${2:// VOID #APC_LEVEL}
snippet FsRtlTruncateBaseMcb
	FsRtlTruncateBaseMcb(${1:PBASE_MCB inMcb}, ${2:LONGLONG inVbn}); ${3:// VOID #APC_LEVEL}
snippet FsRtlTruncateLargeMcb
	FsRtlTruncateLargeMcb(${1:PLARGE_MCB inMcb}, ${2:LONGLONG inVbn}); ${3:// VOID #APC_LEVEL}
snippet FsRtlTruncateMcb
	FsRtlTruncateMcb(${1:PMCB inMcb}, ${2:VBN inVbn}); ${3:// VOID #APC_LEVEL}
snippet FsRtlUninitializeBaseMcb
	FsRtlUninitializeBaseMcb(${1:PBASE_MCB inMcb}); ${2:// VOID #APC_LEVEL}
snippet FsRtlUninitializeFileLock
	FsRtlUninitializeFileLock(${1:PFILE_LOCK inFileLock}); ${2:// VOID #APC_LEVEL}
snippet FsRtlUninitializeLargeMcb
	FsRtlUninitializeLargeMcb(${1:PLARGE_MCB inMcb}); ${2:// VOID #APC_LEVEL}
snippet FsRtlUninitializeMcb
	FsRtlUninitializeMcb(${1:PMCB inMcb}); ${2:// VOID #APC_LEVEL}
snippet FsRtlUninitializeOplock
	FsRtlUninitializeOplock(${1:POPLOCK ioOplock}); ${2:// VOID #APC_LEVEL}
snippet FsRtlValidateReparsePointBuffer
	FsRtlValidateReparsePointBuffer(${1:ULONG inBufferLength}, ${2:PREPARSE_DATA_BUFFER ReparseBuffer}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet HalExamineMBR
	HalExamineMBR(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inSectorSize}, ${3:ULONG inMBRTypeIdentifier}, ${4:PVOID out*Buffer}); ${5:// FASTCALL #PASSIVE_LEVEL}
snippet HalGetAdapter
	HalGetAdapter(${1:PDEVICE_DESCRIPTION inDeviceDescription}, ${2:PULONG outNumberOfMapRegisters}); ${3:// PADAPTER_OBJECT #PASSIVE_LEVEL}
snippet HalGetInterruptVector
	HalGetInterruptVector(${1:INTERFACE_TYPE inInterfaceType}, ${2:ULONG inBusNumber}, ${3:ULONG inBusInterruptLevel}, ${4:ULONG inBusInterruptVector}, ${5:PKIRQL outIrql}, ${6:PKAFFINITY outAffinity}); ${7:// ULONG #PASSIVE_LEVEL}
snippet HidRegisterMinidriver
	HidRegisterMinidriver(${1:PHID_MINIDRIVER_REGISTRATION inMinidriverRegistration}); ${2:// NTSTATUS #APC_LEVEL}
snippet IPAllocBuff
	IPAllocBuff(${1:ioIPRcvBuf *pRcvBuf}, ${2:UINT inSize}); ${3:// ) IPAllocBuff #DISPATCH_LEVEL}
snippet IPFreeBuff
	IPFreeBuff(${1:inIPRcvBuf *pRcvBuf}); ${2:// ) IPFreeBuff #DISPATCH_LEVEL}
snippet IPPacketFirewallPtrType
	IPPacketFirewallPtrType(${1:VOID io**pData}, ${2:UINT inRecvInterfaceIndex}, ${3:ioUINT *pSendInterfaceIndex}, ${4:ioUCHAR *pDestinationType}, ${5:VOID *pContext}, ${6:UINT inContextLength}, ${7:IPRcvBuf out**ppRcvBuf}); ${8:// FORWARD_ACTION #DISPATCH_LEVEL}
snippet IPv6DisableFirewallHook
	IPv6DisableFirewallHook(${1:IPv6FirewallDeregistrationCompleteProc inCompletionRoutine}); ${2:// ) IPv6DisableFirewallHook #DISPATCH_LEVEL}
snippet IPv6EnableFirewallHook
	IPv6EnableFirewallHook(${1:IPv6FirewallHookProc inFirewallHookFunction}); ${2:// ) IPv6EnableFirewallHook #DISPATCH_LEVEL}
snippet IPv6FirewallHookProcType
	IPv6FirewallHookProcType(${1:const inIPv6Addr *SourceAddress}, ${2:const inIPv6Addr *DestinationAddress}, ${3:uint inPayloadLength}, ${4:uchar inHeaderType}, ${5:const inuchar *HeaderData}, ${6:const invoid *PacketContext}, ${7:uint inDataLength}, ${8:uint inInterfaceIndex}, ${9:IPv6Direction inDirection}, ${10:BOOLEAN inIsLoopBack}); ${11:// IPv6Action #DISPATCH_LEVEL}
snippet IPv6GetBestRouteInfo
	IPv6GetBestRouteInfo(${1:const inIPv6Addr *Addr}, ${2:ulong inScopeId}, ${3:ulong inIndex}, ${4:IP6RouteEntry out*Ire}); ${5:// ) IPv6GetBestRouteInfo #DISPATCH_LEVEL}
snippet IPv6ObtainPacketData
	IPv6ObtainPacketData(${1:const invoid *PacketContext}, ${2:uint inDataLength}, ${3:uint inAlignment}); ${4:// ) IPv6ObtainPacketData #DISPATCH_LEVEL}
snippet IoAcquireCancelSpinLock
	IoAcquireCancelSpinLock(${1:PKIRQL outIrql}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoAcquireRemoveLockEx
	IoAcquireRemoveLockEx(${1:PIO_REMOVE_LOCK inRemoveLock}, ${2:PVOID inTag}, ${3:# Optional PCSTR inFile}, ${4:ULONG inLine}, ${5:ULONG inRemlockSize ${6:// are we checked or free}); // NTSTATUS //DISPATCH_LEVEL}
snippet IoAllocateAdapterChannel
	IoAllocateAdapterChannel(${1:PADAPTER_OBJECT inAdapterObject}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:ULONG inNumberOfMapRegisters}, ${4:PDRIVER_CONTROL inExecutionRoutine}, ${5:PVOID inContext}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet IoAllocateController
	IoAllocateController(${1:PCONTROLLER_OBJECT inControllerObject}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PDRIVER_CONTROL inExecutionRoutine}, ${4:PVOID inContext}); ${5:// VOID #DISPATCH_LEVEL}
snippet IoAllocateDriverObjectExtension
	IoAllocateDriverObjectExtension(${1:PDRIVER_OBJECT inDriverObject}, ${2:PVOID inClientIdentificationAddress}, ${3:ULONG inDriverObjectExtensionSize}, ${4:# When successful}, ${5:this always allocates already-aliased memory. PVOID *DriverObjectExtension}); ${6:// ) VOID //DISPATCH_LEVEL}
snippet IoAllocateErrorLogEntry
	IoAllocateErrorLogEntry(${1:PVOID inIoObject}, ${2:UCHAR inEntrySize}); ${3:// PVOID #DISPATCH_LEVEL}
snippet IoAllocateIrp
	IoAllocateIrp(${1:CCHAR inStackSize}, ${2:BOOLEAN inChargeQuota}); ${3:// PIRP #DISPATCH_LEVEL}
snippet IoAllocateMdl
	IoAllocateMdl(${1:PVOID inVirtualAddress}, ${2:ULONG inLength}, ${3:BOOLEAN inSecondaryBuffer}, ${4:BOOLEAN inChargeQuota}, ${5:PIRP Irp}); ${6:// PMDL #DISPATCH_LEVEL}
snippet IoAllocateWorkItem
	IoAllocateWorkItem(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// PIO_WORKITEM #DISPATCH_LEVEL}
snippet IoAttachDevice
	IoAttachDevice(${1:PDEVICE_OBJECT inSourceDevice}, ${2:PUNICODE_STRING inTargetDevice}, ${3:PDEVICE_OBJECT out*AttachedDevice}); ${4:// ) PIO_WORKITEM #APC_LEVEL}
snippet IoAttachDeviceToDeviceStack
	IoAttachDeviceToDeviceStack(${1:PDEVICE_OBJECT inSourceDevice}, ${2:PDEVICE_OBJECT inTargetDevice}); ${3:// DISPATCH_LEVEL #DISPATCH_LEVEL}
snippet IoBuildAsynchronousFsdRequest
	IoBuildAsynchronousFsdRequest(${1:ULONG inMajorFunction}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PVOID Buffer}, ${4:ULONG inLength}, ${5:PLARGE_INTEGER inStartingOffset}, ${6:PIO_STATUS_BLOCK inIoStatusBlock}); ${7:// PIRP #DISPATCH_LEVEL}
snippet IoBuildDeviceIoControlRequest
	IoBuildDeviceIoControlRequest(${1:ULONG inIoControlCode}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PVOID inInputBuffer}, ${4:ULONG inInputBufferLength}, ${5:PVOID outOutputBuffer}, ${6:ULONG inOutputBufferLength}, ${7:BOOLEAN inInternalDeviceIoControl}, ${8:PKEVENT inEvent}, ${9:PIO_STATUS_BLOCK outIoStatusBlock}); ${10:// PIRP #PASSIVE_LEVEL}
snippet IoBuildPartialMdl
	IoBuildPartialMdl(${1:PMDL inSourceMdl}, ${2:PMDL ioTargetMdl}, ${3:PVOID inVirtualAddress}, ${4:ULONG inLength}); ${5:// VOID #DISPATCH_LEVEL}
snippet IoBuildSynchronousFsdRequest
	IoBuildSynchronousFsdRequest(${1:ULONG inMajorFunction}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PVOID Buffer}, ${4:ULONG inLength}, ${5:PLARGE_INTEGER inStartingOffset}, ${6:PKEVENT inEvent}, ${7:PIO_STATUS_BLOCK outIoStatusBlock}); ${8:// PIRP #PASSIVE_LEVEL}
snippet IoCancelIrp
	IoCancelIrp(${1:PIRP inIrp}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet IoCheckShareAccess
	IoCheckShareAccess(${1:ACCESS_MASK inDesiredAccess}, ${2:ULONG inDesiredShareAccess}, ${3:PFILE_OBJECT ioFileObject}, ${4:PSHARE_ACCESS ioShareAccess}, ${5:BOOLEAN inUpdate}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet IoConnectInterrupt
	IoConnectInterrupt(${1:PKINTERRUPT out*InterruptObject}, ${2:PKSERVICE_ROUTINE inServiceRoutine}, ${3:PVOID inServiceContext}, ${4:PKSPIN_LOCK inSpinLock}, ${5:ULONG inVector}, ${6:KIRQL inIrql}, ${7:KIRQL inSynchronizeIrql}, ${8:KINTERRUPT_MODE inInterruptMode}, ${9:BOOLEAN inShareVector}, ${10:KAFFINITY inProcessorEnableMask}, ${11:BOOLEAN inFloatingSave}); ${12:// NTSTATUS #PASSIVE_LEVEL}
snippet IoCreateController
	IoCreateController(${1:ULONG inSize}); ${2:// PCONTROLLER_OBJECT #PASSIVE_LEVEL}
snippet IoCreateDevice
	IoCreateDevice(${1:PDRIVER_OBJECT inDriverObject}, ${2:ULONG inDeviceExtensionSize}, ${3:PUNICODE_STRING inDeviceName}, ${4:DEVICE_TYPE inDeviceType}, ${5:ULONG inDeviceCharacteristics}, ${6:BOOLEAN inExclusive}, ${7:PDEVICE_OBJECT out*DeviceObject}); ${8:// ) PCONTROLLER_OBJECT #APC_LEVEL}
snippet IoCreateFile
	IoCreateFile(${1:PHANDLE outFileHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PIO_STATUS_BLOCK outIoStatusBlock}, ${5:PLARGE_INTEGER inAllocationSize}, ${6:ULONG inFileAttributes}, ${7:ULONG inShareAccess}, ${8:ULONG inDisposition}, ${9:ULONG inCreateOptions}, ${10:PVOID inEaBuffer}, ${11:ULONG inEaLength}, ${12:CREATE_FILE_TYPE inCreateFileType}, ${13:PVOID inInternalParameters}, ${14:ULONG inOptions}); ${15:// NTSTATUS #PASSIVE_LEVEL}
snippet IoCreateNotificationEvent
	IoCreateNotificationEvent(${1:PUNICODE_STRING inEventName}, ${2:PHANDLE outEventHandle}); ${3:// PKEVENT #PASSIVE_LEVEL}
snippet IoCreateSymbolicLink
	IoCreateSymbolicLink(${1:PUNICODE_STRING inSymbolicLinkName}, ${2:PUNICODE_STRING inDeviceName}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet IoCreateSynchronizationEvent
	IoCreateSynchronizationEvent(${1:PUNICODE_STRING inEventName}, ${2:PHANDLE outEventHandle}); ${3:// PKEVENT #PASSIVE_LEVEL}
snippet IoCreateUnprotectedSymbolicLink
	IoCreateUnprotectedSymbolicLink(${1:PUNICODE_STRING inSymbolicLinkName}, ${2:PUNICODE_STRING inDeviceName}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet IoDeleteController
	IoDeleteController(${1:PCONTROLLER_OBJECT inControllerObject}); ${2:// VOID #PASSIVE_LEVEL}
snippet IoDeleteDevice
	IoDeleteDevice(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// VOID #APC_LEVEL}
snippet IoDeleteSymbolicLink
	IoDeleteSymbolicLink(${1:PUNICODE_STRING inSymbolicLinkName}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet IoDetachDevice
	IoDetachDevice(${1:PDEVICE_OBJECT ioTargetDevice}); ${2:// VOID #PASSIVE_LEVEL}
snippet IoDisconnectInterrupt
	IoDisconnectInterrupt(${1:PKINTERRUPT inInterruptObject}); ${2:// VOID #PASSIVE_LEVEL}
snippet IoFreeController
	IoFreeController(${1:PCONTROLLER_OBJECT inControllerObject}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoFreeIrp
	IoFreeIrp(${1:PIRP inIrp}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoFreeMdl
	IoFreeMdl(${1:PMDL Mdl}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoGetAttachedDeviceReference
	IoGetAttachedDeviceReference(${1:# wdm PDEVICE_OBJECT inDeviceObject ${2:// wdm}); // )               IoGetAttachedDeviceReference //DISPATCH_LEVEL}
snippet IoGetAttachedDeviceReference
	IoGetAttachedDeviceReference(${1:PDEVICE_OBJECT inDeviceObject }); ${2:// )               IoGetAttachedDeviceReference #DISPATCH_LEVEL}
snippet IoGetDeviceInterfaceAlias
	IoGetDeviceInterfaceAlias(${1:PUNICODE_STRING inSymbolicLinkName}, ${2:CONST inGUID *AliasInterfaceClassGuid}, ${3:PUNICODE_STRING outAliasSymbolicLinkName}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet IoGetDeviceInterfaces
	IoGetDeviceInterfaces(${1:CONST inGUID *InterfaceClassGuid}, ${2:PDEVICE_OBJECT inPhysicalDeviceObject}, ${3:ULONG inFlags}, ${4:-> NTSTATUS #PASSIVE_LEVEL
snippet IoGetDeviceNumaNode
	IoGetDeviceNumaNode(${1:PDEVICE_OBJECT inPdo}}, ${2:PUSHORT outNodeNumber}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet IoGetDeviceObjectPointer
	IoGetDeviceObjectPointer(${1:PUNICODE_STRING inObjectName}, ${2:ACCESS_MASK inDesiredAccess}, ${3:PFILE_OBJECT out*FileObject}, ${4:PDEVICE_OBJECT out*DeviceObject}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet IoGetDeviceProperty
	IoGetDeviceProperty(${1:PDEVICE_OBJECT inDeviceObject}, ${2:DEVICE_REGISTRY_PROPERTY inDeviceProperty}, ${3:ULONG inBufferLength}, ${4:PVOID outPropertyBuffer}, ${5:PULONG outResultLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet IoGetDevicePropertyData
	IoGetDevicePropertyData(${1:PDEVICE_OBJECT inPdo}, ${2:CONST inDEVPROPKEY *PropertyKey}, ${3:LCID inLcid}, ${4:ULONG Flags}, ${5:ULONG inSize}, ${6:PVOID outData}, ${7:PULONG outRequiredSize}, ${8:PDEVPROPTYPE outType}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet IoGetDeviceToVerify
	IoGetDeviceToVerify(${1:PETHREAD inThread}); ${2:// PDEVICE_OBJECT #PASSIVE_LEVEL}
snippet IoGetDmaAdapter
	IoGetDmaAdapter(${1:PDEVICE_OBJECT inPhysicalDeviceObject}, ${2:# required for PnP drivers struct in_DEVICE_DESCRIPTION *DeviceDescription}, ${3:PULONG outNumberOfMapRegisters}); ${4:// (" //PASSIVE_LEVEL}
snippet IoGetDriverObjectExtension
	IoGetDriverObjectExtension(${1:PDRIVER_OBJECT inDriverObject}, ${2:PVOID inClientIdentificationAddress}); ${3:// PVOID #DISPATCH_LEVEL}
snippet IoGetFileObjectGenericMapping
	IoGetFileObjectGenericMapping(${1:VOID}); ${2:// PGENERIC_MAPPING #PASSIVE_LEVEL}
snippet IoGetInitialStack
	IoGetInitialStack(${1:VOID}); ${2:// PVOID #APC_LEVEL}
snippet IoGetRemainingStackSize
	IoGetRemainingStackSize(${1:VOID}); ${2:// ULONG_PTR #APC_LEVEL}
snippet IoGetStackLimits
	IoGetStackLimits(${1:PULONG_PTR outLowLimit}, ${2:PULONG_PTR outHighLimit}); ${3:// VOID #APC_LEVEL}
snippet IoInitializeIrp
	IoInitializeIrp(${1:PIRP ioIrp}, ${2:USHORT inPacketSize}, ${3:CCHAR inStackSize}); ${4:// VOID #DISPATCH_LEVEL}
snippet IoInitializeRemoveLockEx
	IoInitializeRemoveLockEx(${1:PIO_REMOVE_LOCK inLock}, ${2:ULONG inAllocateTag}, ${3:# Used only on checked kernels ULONG inMaxLockedMinutes}, ${4:${5:// Used only on checked kernels ULONG inHighWatermark}, ${5:// Used only on checked kernels ULONG inRemlockSize // are we checked or free}); // VOID //PASSIVE_LEVEL}
snippet IoInitializeTimer
	IoInitializeTimer(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIO_TIMER_ROUTINE inTimerRoutine}, ${3:PVOID inContext}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet IoInvalidateDeviceRelations
	IoInvalidateDeviceRelations(${1:PDEVICE_OBJECT inDeviceObject}, ${2:DEVICE_RELATION_TYPE inType}); ${3:// VOID #DISPATCH_LEVEL}
snippet IoInvalidateDeviceState
	IoInvalidateDeviceState(${1:PDEVICE_OBJECT inPhysicalDeviceObject}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoIs32bitProcess
	IoIs32bitProcess(${1:PIRP inIrp}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet IoIsWdmVersionAvailable
	IoIsWdmVersionAvailable(${1:UCHAR MajorVersion}, ${2:UCHAR inMinorVersion}); ${3:// BOOLEAN #PASSIVE_LEVEL}
snippet IoMakeAssociatedIrp
	IoMakeAssociatedIrp(${1:PIRP inIrp}, ${2:CCHAR inStackSize}); ${3:// PIRP #DISPATCH_LEVEL}
snippet IoOpenDeviceInterfaceRegistryKey
	IoOpenDeviceInterfaceRegistryKey(${1:PUNICODE_STRING inSymbolicLinkName}, ${2:ACCESS_MASK inDesiredAccess}, ${3:PHANDLE outDeviceInterfaceKey}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet IoOpenDeviceRegistryKey
	IoOpenDeviceRegistryKey(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inDevInstKeyType}, ${3:ACCESS_MASK inDesiredAccess}, ${4:PHANDLE outDevInstRegKey}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet IoQueueWorkItem
	IoQueueWorkItem(${1:PIO_WORKITEM inIoWorkItem}, ${2:PIO_WORKITEM_ROUTINE inWorkerRoutine}, ${3:WORK_QUEUE_TYPE inQueueType}, ${4:PVOID inContext}); ${5:// Use #DISPATCH_LEVEL}
snippet IoQueueWorkItemEx
	IoQueueWorkItemEx(${1:PIO_WORKITEM inIoWorkItem}, ${2:PIO_WORKITEM_ROUTINE_EX inWorkerRoutine}, ${3:WORK_QUEUE_TYPE inQueueType}, ${4:PVOID inContext}); ${5:// VOID #DISPATCH_LEVEL}
snippet IoRaiseHardError
	IoRaiseHardError(${1:PIRP inIrp}, ${2:PVPB inVpb}, ${3:PDEVICE_OBJECT inRealDeviceObject}); ${4:// VOID #APC_LEVEL}
snippet IoRaiseInformationalHardError
	IoRaiseInformationalHardError(${1:NTSTATUS inErrorStatus}, ${2:PUNICODE_STRING inString}, ${3:PKTHREAD inThread}); ${4:// BOOLEAN #APC_LEVEL}
snippet IoReadPartitionTable
	IoReadPartitionTable(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inSectorSize}, ${3:BOOLEAN inReturnRecognizedPartitions}, ${4:struct out_DRIVE_LAYOUT_INFORMATION **PartitionBuffer}); ${5:// FASTCALL #PASSIVE_LEVEL}
snippet IoReadPartitionTableEx
	IoReadPartitionTableEx(${1:PDEVICE_OBJECT inDeviceObject}, ${2:struct out_DRIVE_LAYOUT_INFORMATION_EX** DriveLayout}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet IoRegisterBootDriverReinitialization
	IoRegisterBootDriverReinitialization(${1:PDRIVER_OBJECT inDriverObject}, ${2:PDRIVER_REINITIALIZE inDriverReinitializationRoutine}, ${3:PVOID inContext}); ${4:// VOID #PASSIVE_LEVEL}
snippet IoRegisterDeviceInterface
	IoRegisterDeviceInterface(${1:PDEVICE_OBJECT inPhysicalDeviceObject}, ${2:CONST inGUID *InterfaceClassGuid}, ${3:PUNICODE_STRING inReferenceString}, ${4:PUNICODE_STRING outSymbolicLinkName}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet IoRegisterDriverReinitialization
	IoRegisterDriverReinitialization(${1:PDRIVER_OBJECT inDriverObject}, ${2:PDRIVER_REINITIALIZE inDriverReinitializationRoutine}, ${3:PVOID inContext}); ${4:// VOID #PASSIVE_LEVEL}
snippet IoRegisterFileSystem
	IoRegisterFileSystem(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// VOID #APC_LEVEL}
snippet IoRegisterLastChanceShutdownNotification
	IoRegisterLastChanceShutdownNotification(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet IoRegisterPlugPlayNotification
	IoRegisterPlugPlayNotification(${1:IO_NOTIFICATION_EVENT_CATEGORY inEventCategory}, ${2:ULONG inEventCategoryFlags}, ${3:PVOID inEventCategoryData}, ${4:PDRIVER_OBJECT inDriverObject}, ${5:PDRIVER_NOTIFICATION_CALLBACK_ROUTINE inCallbackRoutine}, ${6:PVOID Context}, ${7:-> NTSTATUS #PASSIVE_LEVEL
snippet IoRegisterShutdownNotification
	IoRegisterShutdownNotification(${1:PDEVICE_OBJECT inDeviceObject}}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet IoReleaseCancelSpinLock
	IoReleaseCancelSpinLock(${1:KIRQL inIrql}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoReleaseRemoveLockAndWaitEx
	IoReleaseRemoveLockAndWaitEx(${1:PIO_REMOVE_LOCK inRemoveLock}, ${2:PVOID inTag}, ${3:ULONG inRemlockSize # are we checked or free}); ${4:// VOID //PASSIVE_LEVEL}
snippet IoRemoveShareAccess
	IoRemoveShareAccess(${1:PFILE_OBJECT inFileObject}, ${2:PSHARE_ACCESS ioShareAccess}); ${3:// VOID #PASSIVE_LEVEL}
snippet IoReplacePartitionUnit
	IoReplacePartitionUnit(${1:PDEVICE_OBJECT inTargetPdo}, ${2:PDEVICE_OBJECT inSparePdo}, ${3:ULONG inFlags}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet IoReportDetectedDevice
	IoReportDetectedDevice(${1:PDRIVER_OBJECT inDriverObject}, ${2:INTERFACE_TYPE inLegacyBusType}, ${3:ULONG inBusNumber}, ${4:ULONG inSlotNumber}, ${5:PCM_RESOURCE_LIST inResourceList}, ${6:PIO_RESOURCE_REQUIREMENTS_LIST inResourceRequirements}, ${7:BOOLEAN inResourceAssigned}, ${8:PDEVICE_OBJECT *DeviceObject}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet IoReportTargetDeviceChange
	IoReportTargetDeviceChange(${1:PDEVICE_OBJECT inPhysicalDeviceObject}, ${2:PVOID inNotificationStructure # always begins with a PLUGPLAY_NOTIFICATION_HEADER}); ${3:// NTSTATUS //PASSIVE_LEVEL}
snippet IoReportTargetDeviceChangeAsynchronous
	IoReportTargetDeviceChangeAsynchronous(${1:PDEVICE_OBJECT inPhysicalDeviceObject}, ${2:PVOID inNotificationStructure}, ${3:# always begins with a PLUGPLAY_NOTIFICATION_HEADER PDEVICE_CHANGE_COMPLETE_CALLBACK inCallback}, ${4:PVOID Context}); ${5:// NTSTATUS //DISPATCH_LEVEL}
snippet IoRequestDeviceEject
	IoRequestDeviceEject(${1:PDEVICE_OBJECT inPhysicalDeviceObject}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoRequestDeviceEjectEx
	IoRequestDeviceEjectEx(${1:PDEVICE_OBJECT inPhysicalDeviceObject}, ${2:PIO_DEVICE_EJECT_CALLBACK inCallback}, ${3:PVOID inContext}, ${4:PDRIVER_OBJECT inDriverObject}); ${5:// NTSTATUS #DISPATCH_LEVEL}
snippet IoReuseIrp
	IoReuseIrp(${1:PIRP ioIrp}, ${2:NTSTATUS inIostatus}); ${3:// VOID #DISPATCH_LEVEL}
snippet IoSetCompletionRoutine
	IoSetCompletionRoutine(${1:PIRP inIrp}, ${2:PIO_COMPLETION_ROUTINE inCompletionRoutine}, ${3:PVOID inContext}, ${4:BOOLEAN inInvokeOnSuccess}, ${5:BOOLEAN inInvokeOnError}, ${6:BOOLEAN inInvokeOnCancel}); ${7:// VOID #DISPATCH_LEVEL}
snippet IoSetCompletionRoutineEx
	IoSetCompletionRoutineEx(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP inIrp}, ${3:PIO_COMPLETION_ROUTINE inCompletionRoutine}, ${4:PVOID inContext}, ${5:BOOLEAN inInvokeOnSuccess}, ${6:BOOLEAN inInvokeOnError}, ${7:BOOLEAN inInvokeOnCancel}); ${8:// NTSTATUS #DISPATCH_LEVEL}
snippet IoSetDeviceInterfaceState
	IoSetDeviceInterfaceState(${1:PUNICODE_STRING inSymbolicLinkName}, ${2:BOOLEAN inEnable}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet IoSetDevicePropertyData
	IoSetDevicePropertyData(${1:PDEVICE_OBJECT inPdo}, ${2:CONST inDEVPROPKEY *PropertyKey}, ${3:LCID inLcid}, ${4:ULONG inFlags}, ${5:DEVPROPTYPE inType}, ${6:ULONG inSize}, ${7:PVOID inData}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet IoSetHardErrorOrVerifyDevice
	IoSetHardErrorOrVerifyDevice(${1:PIRP inIrp}, ${2:PDEVICE_OBJECT inDeviceObject}); ${3:// VOID #DISPATCH_LEVEL}
snippet IoSetPartitionInformation
	IoSetPartitionInformation(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inSectorSize}, ${3:ULONG inPartitionNumber}, ${4:ULONG inPartitionType}); ${5:// FASTCALL #PASSIVE_LEVEL}
snippet IoSetPartitionInformationEx
	IoSetPartitionInformationEx(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inPartitionNumber}, ${3:struct in_SET_PARTITION_INFORMATION_EX* PartitionInfo}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet IoSetThreadHardErrorMode
	IoSetThreadHardErrorMode(${1:BOOLEAN inEnableHardErrors}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet IoStartNextPacket
	IoStartNextPacket(${1:PDEVICE_OBJECT inDeviceObject}, ${2:BOOLEAN inCancelable}); ${3:// VOID #DISPATCH_LEVEL}
snippet IoStartNextPacketByKey
	IoStartNextPacketByKey(${1:PDEVICE_OBJECT inDeviceObject}, ${2:BOOLEAN inCancelable}, ${3:ULONG inKey}); ${4:// VOID #DISPATCH_LEVEL}
snippet IoStartPacket
	IoStartPacket(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP inIrp}, ${3:PULONG inKey}, ${4:PDRIVER_CANCEL inCancelFunction}); ${5:// VOID #DISPATCH_LEVEL}
snippet IoStartTimer
	IoStartTimer(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoStopTimer
	IoStopTimer(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// VOID #DISPATCH_LEVEL}
snippet IoUnregisterPlugPlayNotification
	IoUnregisterPlugPlayNotification(${1:PVOID inNotificationEntry}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet IoUnregisterPlugPlayNotificationEx
	IoUnregisterPlugPlayNotificationEx(${1:PVOID inNotificationEntry}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet IoUnregisterShutdownNotification
	IoUnregisterShutdownNotification(${1:PDEVICE_OBJECT inDeviceObject}); ${2:// VOID #PASSIVE_LEVEL}
snippet IoUpdateShareAccess
	IoUpdateShareAccess(${1:PFILE_OBJECT inFileObject}, ${2:PSHARE_ACCESS ioShareAccess}); ${3:// VOID #PASSIVE_LEVEL}
snippet IoWMIAllocateInstanceIds
	IoWMIAllocateInstanceIds(${1:inGUID *Guid}, ${2:ULONG inInstanceCount}, ${3:ULONG out*FirstInstanceId}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet IoWMIRegistrationControl
	IoWMIRegistrationControl(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inAction}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet IoWMIWriteEvent
	IoWMIWriteEvent(${1:PVOID ioWnodeEventItem}); ${2:// ) NTSTATUS #APC_LEVEL}
snippet IoWriteErrorLogEntry
	IoWriteErrorLogEntry(${1:# wdm PVOID inElEntry ${2:// wdm}); // wdm //DISPATCH_LEVEL}
snippet IoWriteErrorLogEntry
	IoWriteErrorLogEntry(${1:PVOID inElEntry }); ${2:// wdm #DISPATCH_LEVEL}
snippet IoWritePartitionTable
	IoWritePartitionTable(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inSectorSize}, ${3:ULONG inSectorsPerTrack}, ${4:ULONG inNumberOfHeads}, ${5:struct in_DRIVE_LAYOUT_INFORMATION *PartitionBuffer}); ${6:// FASTCALL #PASSIVE_LEVEL}
snippet IoWritePartitionTableEx
	IoWritePartitionTableEx(${1:PDEVICE_OBJECT inDeviceObject}, ${2:struct _DRIVE_LAYOUT_INFORMATION_EX* DriveLayout}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet IofCallDriver
	IofCallDriver(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP ioIrp}); ${3:// FASTCALL #DISPATCH_LEVEL}
snippet IofCompleteRequest
	IofCompleteRequest(${1:PIRP inIrp}, ${2:CCHAR inPriorityBoost}); ${3:// FASTCALL #DISPATCH_LEVEL}
snippet KDEFERRED_ROUTINE
	KDEFERRED_ROUTINE(${1:struct in_KDPC *Dpc}, ${2:PVOID inDeferredContext}, ${3:PVOID inSystemArgument1}, ${4:PVOID inSystemArgument2}); ${5:// VOID #DISPATCH_LEVEL}
snippet KKERNEL_ROUTINE
	KKERNEL_ROUTINE(${1:struct in_KAPC *Apc}, ${2:PKNORMAL_ROUTINE *NormalRoutine}, ${3:PVOID *NormalContext}, ${4:PVOID *SystemArgument1}, ${5:PVOID *SystemArgument2}); ${6:// VOID #APC_LEVEL}
snippet KNORMAL_ROUTINE
	KNORMAL_ROUTINE(${1:PVOID inNormalContext}, ${2:PVOID inSystemArgument1}, ${3:PVOID inSystemArgument2}); ${4:// VOID #PASSIVE_LEVEL}
snippet KRUNDOWN_ROUTINE
	KRUNDOWN_ROUTINE(${1:struct in_KAPC *Apc}); ${2:// VOID #PASSIVE_LEVEL}
snippet KeAcquireGuardedMutex
	KeAcquireGuardedMutex(${1:PKGUARDED_MUTEX ioMutex}); ${2:// FASTCALL #APC_LEVEL}
snippet KeAcquireGuardedMutexUnsafe
	KeAcquireGuardedMutexUnsafe(${1:PKGUARDED_MUTEX ioFastMutex}); ${2:// FASTCALL #APC_LEVEL}
snippet KeAcquireInStackQueuedSpinLock
	KeAcquireInStackQueuedSpinLock(${1:PKSPIN_LOCK ioSpinLock}, ${2:PKLOCK_QUEUE_HANDLE outLockHandle}); ${3:// FASTCALL #DISPATCH_LEVEL}
snippet KeAcquireInStackQueuedSpinLockForDpc
	KeAcquireInStackQueuedSpinLockForDpc(${1:PKSPIN_LOCK ioSpinLock}, ${2:PKLOCK_QUEUE_HANDLE outLockHandle}); ${3:// FASTCALL #DISPATCH_LEVEL}
snippet KeAcquireInterruptSpinLock
	KeAcquireInterruptSpinLock(${1:PKINTERRUPT ioInterrupt}); ${2:// KIRQL #HIGH_LEVEL}
snippet KeAcquireSpinLockForDpc
	KeAcquireSpinLockForDpc(${1:PKSPIN_LOCK ioSpinLock}); ${2:// FASTCALL #DISPATCH_LEVEL}
snippet KeAcquireSpinLockRaiseToDpc
	KeAcquireSpinLockRaiseToDpc(${1:PKSPIN_LOCK ioSpinLock}); ${2:// KIRQL #DISPATCH_LEVEL}
snippet KeAreAllApcsDisabled
	KeAreAllApcsDisabled(${1:VOID}); ${2:// BOOLEAN #APC_LEVEL}
snippet KeAreApcsDisabled
	KeAreApcsDisabled(${1:VOID}); ${2:// BOOLEAN #APC_LEVEL}
snippet KeAttachProcess
	KeAttachProcess(${1:PRKPROCESS ioProcess}); ${2:// VOID #APC_LEVEL}
snippet KeCancelTimer
	KeCancelTimer(${1:ioPKTIMER}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet KeClearEvent
	KeClearEvent(${1:PRKEVENT ioEvent}); ${2:// VOID #DISPATCH_LEVEL}
snippet KeDelayExecutionThread
	KeDelayExecutionThread(${1:KPROCESSOR_MODE inWaitMode}, ${2:BOOLEAN inAlertable}, ${3:PLARGE_INTEGER inInterval}); ${4:// NTSTATUS #APC_LEVEL}
snippet KeDeregisterNmiCallback
	KeDeregisterNmiCallback(${1:PVOID inHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet KeDeregisterProcessorChangeCallback
	KeDeregisterProcessorChangeCallback(${1:PVOID inCallbackHandle}); ${2:// VOID #APC_LEVEL}
snippet KeDetachProcess
	KeDetachProcess(${1:VOID}); ${2:// VOID #APC_LEVEL}
snippet KeEnterCriticalRegion
	KeEnterCriticalRegion(${1:VOID}); ${2:// VOID #APC_LEVEL}
snippet KeEnterGuardedRegion
	KeEnterGuardedRegion(${1:VOID}); ${2:// VOID #APC_LEVEL}
snippet KeExpandKernelStackAndCallout
	KeExpandKernelStackAndCallout(${1:PEXPAND_STACK_CALLOUT inCallout}, ${2:PVOID inParameter}, ${3:SIZE_T inSize}); ${4:// NTSTATUS #DISPATCH_LEVEL}
snippet KeFlushIoBuffers
	KeFlushIoBuffers(${1:PMDL inMdl}, ${2:BOOLEAN inReadOperation}, ${3:BOOLEAN inDmaOperation}); ${4:// VOID #DISPATCH_LEVEL}
snippet KeFlushQueuedDpcs
	KeFlushQueuedDpcs(${1:VOID}); ${2:// VOID #APC_LEVEL}
snippet KeGetCurrentIrql
	KeGetCurrentIrql(${1:VOID}); ${2:// KIRQL #HIGH_LEVEL}
snippet KeInitializeDeviceQueue
	KeInitializeDeviceQueue(${1:PKDEVICE_QUEUE outDeviceQueue}); ${2:// VOID #DISPATCH_LEVEL}
snippet KeInitializeGuardedMutex
	KeInitializeGuardedMutex(${1:PKGUARDED_MUTEX outMutex}); ${2:// FASTCALL #APC_LEVEL}
snippet KeInitializeSemaphore
	KeInitializeSemaphore(${1:PRKSEMAPHORE outSemaphore}, ${2:LONG inCount}, ${3:LONG inLimit}); ${4:// VOID #PASSIVE_LEVEL}
snippet KeInitializeTimer
	KeInitializeTimer(${1:PKTIMER outTimer}); ${2:// VOID #DISPATCH_LEVEL}
snippet KeInitializeTimerEx
	KeInitializeTimerEx(${1:PKTIMER outTimer}, ${2:TIMER_TYPE inType}); ${3:// VOID #DISPATCH_LEVEL}
snippet KeInsertHeadQueue
	KeInsertHeadQueue(${1:PRKQUEUE ioQueue}, ${2:PLIST_ENTRY ioEntry}); ${3:// LONG #DISPATCH_LEVEL}
snippet KeInsertQueue
	KeInsertQueue(${1:PRKQUEUE ioQueue}, ${2:PLIST_ENTRY ioEntry}); ${3:// LONG #DISPATCH_LEVEL}
snippet KeInvalidateAllCaches
	KeInvalidateAllCaches(${1:VOID}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet KeInvalidateRangeAllCaches
	KeInvalidateRangeAllCaches(${1:PVOID inBaseAddress}, ${2:ULONG inLength}); ${3:// FASTCALL #DISPATCH_LEVEL}
snippet KeIpiGenericCall
	KeIpiGenericCall(${1:PKIPI_BROADCAST_WORKER inBroadcastFunction}, ${2:ULONG_PTR inContext}); ${3:// ULONG_PTR #IPI_LEVEL}
snippet KeLeaveCriticalRegion
	KeLeaveCriticalRegion(${1:VOID}); ${2:// VOID #APC_LEVEL}
snippet KeLeaveGuardedRegion
	KeLeaveGuardedRegion(${1:VOID}); ${2:// VOID #APC_LEVEL}
snippet KeLowerIrql
	KeLowerIrql(${1:KIRQL inNewIrql}); ${2:// VOID #HIGH_LEVEL}
snippet KePulseEvent
	KePulseEvent(${1:PRKEVENT ioEvent}, ${2:KPRIORITY inIncrement}, ${3:BOOLEAN inWait}); ${4:// LONG #DISPATCH_LEVEL}
snippet KeQueryHardwareCounterConfiguration
	KeQueryHardwareCounterConfiguration(${1:PHARDWARE_COUNTER CounterArray}, ${2:ULONG inMaximumCount}, ${3:PULONG outCount}); ${4:// NTSTATUS #APC_LEVEL}
snippet KeQueryLogicalProcessorRelationship
	KeQueryLogicalProcessorRelationship(${1:PPROCESSOR_NUMBER inProcessorNumber}, ${2:LOGICAL_PROCESSOR_RELATIONSHIP inRelationshipType}, ${3:PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX outInformation}, ${4:PULONG ioLength}); ${5:// NTSTATUS #DISPATCH_LEVEL}
snippet KeQueryOwnerMutant
	KeQueryOwnerMutant(${1:PKMUTANT inMutant}, ${2:PCLIENT_ID outClientId}); ${3:// VOID #DISPATCH_LEVEL}
snippet KeQueryPriorityThread
	KeQueryPriorityThread(${1:PKTHREAD inThread}); ${2:// KPRIORITY #PASSIVE_LEVEL}
snippet KeQueryRuntimeThread
	KeQueryRuntimeThread(${1:PKTHREAD inThread}, ${2:PULONG outUserTime}); ${3:// ULONG #PASSIVE_LEVEL}
snippet KeQueryTotalCycleTimeProcess
	KeQueryTotalCycleTimeProcess(${1:PKPROCESS ioProcess}, ${2:PULONG64 outCycleTimeStamp}); ${3:// ULONG64 #DISPATCH_LEVEL}
snippet KeQueryTotalCycleTimeThread
	KeQueryTotalCycleTimeThread(${1:PKTHREAD ioThread}, ${2:PULONG64 outCycleTimeStamp}); ${3:// ULONG64 #APC_LEVEL}
snippet KeRaiseIrql
	KeRaiseIrql(${1:KIRQL inNewIrql}, ${2:PKIRQL outOldIrql}); ${3:// VOID #HIGH_LEVEL}
snippet KeRaiseIrqlToDpcLevel
	KeRaiseIrqlToDpcLevel(${1:VOID}); ${2:// KIRQL #DISPATCH_LEVEL}
snippet KeRaiseIrqlToDpcLevel
	KeRaiseIrqlToDpcLevel(${1:VOID}); ${2:// KIRQL #DISPATCH_LEVEL}
snippet KeReadStateEvent
	KeReadStateEvent(${1:PRKEVENT inEvent}); ${2:// LONG #DISPATCH_LEVEL}
snippet KeReadStateMutant
	KeReadStateMutant(${1:PRKMUTANT inMutant}); ${2:// LONG #DISPATCH_LEVEL}
snippet KeReadStateMutex
	KeReadStateMutex(${1:PRKMUTEX inMutex}); ${2:// LONG #DISPATCH_LEVEL}
snippet KeReadStateQueue
	KeReadStateQueue(${1:PRKQUEUE inQueue}); ${2:// LONG #DISPATCH_LEVEL}
snippet KeReadStateSemaphore
	KeReadStateSemaphore(${1:PRKSEMAPHORE inSemaphore}); ${2:// LONG #DISPATCH_LEVEL}
snippet KeReadStateTimer
	KeReadStateTimer(${1:PKTIMER inTimer}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet KeRegisterNmiCallback
	KeRegisterNmiCallback(${1:PNMI_CALLBACK inCallbackRoutine}, ${2:PVOID inContext}); ${3:// PVOID #APC_LEVEL}
snippet KeRegisterProcessorChangeCallback
	KeRegisterProcessorChangeCallback(${1:PPROCESSOR_CALLBACK_FUNCTION inCallbackFunction}, ${2:PVOID inCallbackContext}, ${3:ULONG inFlags}); ${4:// PVOID #APC_LEVEL}
snippet KeReleaseGuardedMutex
	KeReleaseGuardedMutex(${1:PKGUARDED_MUTEX ioMutex}); ${2:// FASTCALL #APC_LEVEL}
snippet KeReleaseGuardedMutexUnsafe
	KeReleaseGuardedMutexUnsafe(${1:ioPKGUARDED_MUTEX ioFastMutex}); ${2:// FASTCALL #APC_LEVEL}
snippet KeReleaseMutant
	KeReleaseMutant(${1:PRKMUTANT ioMutant}, ${2:KPRIORITY inIncrement}, ${3:BOOLEAN inAbandoned}, ${4:BOOLEAN inWait}); ${5:// LONG # APC_LEVEL}
snippet KeReleaseMutex
	KeReleaseMutex(${1:PRKMUTEX ioMutex}, ${2:BOOLEAN inWait}); ${3:// LONG # APC_LEVEL}
snippet KeReleaseSemaphore
	KeReleaseSemaphore(${1:PRKSEMAPHORE ioSemaphore}, ${2:KPRIORITY inIncrement}, ${3:LONG inAdjustment}, ${4:BOOLEAN inWait}); ${5:// LONG # APC_LEVEL}
snippet KeRemoveEntryDeviceQueue
	KeRemoveEntryDeviceQueue(${1:PKDEVICE_QUEUE ioDeviceQueue}, ${2:PKDEVICE_QUEUE_ENTRY ioDeviceQueueEntry}); ${3:// BOOLEAN #DISPATCH_LEVEL}
snippet KeRemoveQueue
	KeRemoveQueue(${1:PRKQUEUE ioQueue}, ${2:KPROCESSOR_MODE inWaitMode}, ${3:PLARGE_INTEGER inTimeout}); ${4:// PLIST_ENTRY # DISPATCH_LEVEL}
snippet KeRemoveQueueDpc
	KeRemoveQueueDpc(${1:PRKDPC ioDpc}); ${2:// BOOLEAN #HIGH_LEVEL}
snippet KeRemoveQueueEx
	KeRemoveQueueEx(${1:PKQUEUE ioQueue}, ${2:KPROCESSOR_MODE inWaitMode}, ${3:BOOLEAN inAlertable}, ${4:PLARGE_INTEGER inTimeout}, ${5:PLIST_ENTRY *EntryArray}, ${6:ULONG inCount}); ${7:// ULONG # DISPATCH_LEVEL}
snippet KeResetEvent
	KeResetEvent(${1:PRKEVENT ioEvent}); ${2:// LONG #DISPATCH_LEVEL}
snippet KeRevertToUserAffinityThread
	KeRevertToUserAffinityThread(${1:VOID}); ${2:// VOID #APC_LEVEL}
snippet KeRevertToUserAffinityThreadEx
	KeRevertToUserAffinityThreadEx(${1:KAFFINITY inAffinity}); ${2:// VOID #APC_LEVEL}
snippet KeRevertToUserGroupAffinityThread
	KeRevertToUserGroupAffinityThread(${1:PGROUP_AFFINITY inPreviousAffinity}); ${2:// VOID #APC_LEVEL}
snippet KeRundownQueue
	KeRundownQueue(${1:PRKQUEUE ioQueue}); ${2:// PLIST_ENTRY #DISPATCH_LEVEL}
snippet KeSaveExtendedProcessorState
	KeSaveExtendedProcessorState(${1:ULONG64 inMask}, ${2:PXSTATE_SAVE outXStateSave}); ${3:// ) PLIST_ENTRY #DISPATCH_LEVEL}
snippet KeSaveFloatingPointState
	KeSaveFloatingPointState(${1:PKFLOATING_SAVE outFloatSave}); ${2:// DISPATCH_LEVEL #DISPATCH_LEVEL}
snippet KeSetBasePriorityThread
	KeSetBasePriorityThread(${1:PKTHREAD ioThread}, ${2:LONG inIncrement}); ${3:// LONG #DISPATCH_LEVEL}
snippet KeSetCoalescableTimer
	KeSetCoalescableTimer(${1:PKTIMER ioTimer}, ${2:LARGE_INTEGER inDueTime}, ${3:ULONG inPeriod}, ${4:ULONG inTolerableDelay}, ${5:PKDPC inDpc}); ${6:// BOOLEAN #DISPATCH_LEVEL}
snippet KeSetEvent
	KeSetEvent(${1:PRKEVENT ioEvent}, ${2:KPRIORITY inIncrement}, ${3:BOOLEAN inWait}); ${4:// LONG # APC_LEVEL}
snippet KeSetHardwareCounterConfiguration
	KeSetHardwareCounterConfiguration(${1:HARDWARE_COUNTER CounterArray}, ${2:ULONG inCount}); ${3:// NTSTATUS #APC_LEVEL}
snippet KeSetIdealProcessorThread
	KeSetIdealProcessorThread(${1:PKTHREAD ioThread}, ${2:UCHAR inProcessor}); ${3:// UCHAR #DISPATCH_LEVEL}
snippet KeSetKernelStackSwapEnable
	KeSetKernelStackSwapEnable(${1:BOOLEAN inEnable}); ${2:// BOOLEAN #APC_LEVEL}
snippet KeSetPriorityThread
	KeSetPriorityThread(${1:PKTHREAD ioThread}, ${2:KPRIORITY inPriority}); ${3:// KPRIORITY #DISPATCH_LEVEL}
snippet KeSetSystemAffinityThread
	KeSetSystemAffinityThread(${1:KAFFINITY inAffinity}); ${2:// VOID #APC_LEVEL}
snippet KeSetSystemAffinityThreadEx
	KeSetSystemAffinityThreadEx(${1:KAFFINITY inAffinity}); ${2:// KAFFINITY #APC_LEVEL}
snippet KeSetSystemGroupAffinityThread
	KeSetSystemGroupAffinityThread(${1:PGROUP_AFFINITY inAffinity}, ${2:PGROUP_AFFINITY outPreviousAffinity}); ${3:// VOID #APC_LEVEL}
snippet KeSetTimer
	KeSetTimer(${1:PKTIMER ioTimer}, ${2:LARGE_INTEGER inDueTime}, ${3:PKDPC inDpc}); ${4:// BOOLEAN #DISPATCH_LEVEL}
snippet KeSetTimerEx
	KeSetTimerEx(${1:PKTIMER ioTimer}, ${2:LARGE_INTEGER inDueTime}, ${3:LONG inPeriod}, ${4:PKDPC inDpc}); ${5:// BOOLEAN #DISPATCH_LEVEL}
snippet KeStackAttachProcess
	KeStackAttachProcess(${1:PRKPROCESS ioPROCESS}, ${2:PRKAPC_STATE outApcState}); ${3:// VOID #APC_LEVEL}
snippet KeSynchronizeExecution
	KeSynchronizeExecution(${1:PKINTERRUPT ioInterrupt}, ${2:PKSYNCHRONIZE_ROUTINE inSynchronizeRoutine}, ${3:PVOID inSynchronizeContext}); ${4:// BOOLEAN #HIGH_LEVEL}
snippet KeTryToAcquireGuardedMutex
	KeTryToAcquireGuardedMutex(${1:PKGUARDED_MUTEX ioMutex}); ${2:// ) BOOLEAN #APC_LEVEL}
snippet KeUnstackDetachProcess
	KeUnstackDetachProcess(${1:PRKAPC_STATE inApcState}); ${2:// VOID #APC_LEVEL}
snippet KeWaitForMultipleObjects
	KeWaitForMultipleObjects(${1:ULONG inCount}, ${2:PVOID Object[]}, ${3:WAIT_TYPE inWaitType}, ${4:KWAIT_REASON inWaitReason}, ${5:KPROCESSOR_MODE inWaitMode}, ${6:BOOLEAN inAlertable}, ${7:PLARGE_INTEGER inTimeout}, ${8:PKWAIT_BLOCK outWaitBlockArray}); ${9:// NTSTATUS # DISPATCH_LEVEL}
snippet KeWaitForSingleObject
	KeWaitForSingleObject(${1:PVOID inObject}, ${2:KWAIT_REASON inWaitReason}, ${3:KPROCESSOR_MODE inWaitMode}, ${4:BOOLEAN inAlertable}, ${5:PLARGE_INTEGER inTimeout}); ${6:// NTSTATUS # DISPATCH_LEVEL}
snippet KfAcquireSpinLock
	KfAcquireSpinLock(${1:PKSPIN_LOCK ioSpinLock}); ${2:// FASTCALL #DISPATCH_LEVEL}
snippet KfLowerIrql
	KfLowerIrql(${1:KIRQL inNewIrql}); ${2:// FASTCALL #HIGH_LEVEL}
snippet KfRaiseIrql
	KfRaiseIrql(${1:KIRQL inNewIrql}); ${2:// FASTCALL #HIGH_LEVEL}
snippet KsCreateBusEnumObject
	KsCreateBusEnumObject(${1:PWSTR inBusIdentifier}, ${2:PDEVICE_OBJECT inBusDeviceObject}, ${3:PDEVICE_OBJECT inPhysicalDeviceObject}, ${4:PDEVICE_OBJECT inPnpDeviceObject}, ${5:REFGUID inInterfaceGuid}, ${6:PWSTR inServiceRelativePath}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet KsGetBusEnumParentFDOFromChildPDO
	KsGetBusEnumParentFDOFromChildPDO(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PDEVICE_OBJECT out*FunctionalDeviceObject}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet KsGetBusEnumPnpDeviceObject
	KsGetBusEnumPnpDeviceObject(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PDEVICE_OBJECT out*PnpDeviceObject}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet KsInstallBusEnumInterface
	KsInstallBusEnumInterface(${1:PIRP inIrp}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet KsIsBusEnumChildDevice
	KsIsBusEnumChildDevice(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PBOOLEAN outChildDevice}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet KsRemoveBusEnumInterface
	KsRemoveBusEnumInterface(${1:PIRP inIrp}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet KsServiceBusEnumCreateRequest
	KsServiceBusEnumCreateRequest(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP ioIrp}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet KsServiceBusEnumPnpRequest
	KsServiceBusEnumPnpRequest(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP ioIrp}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiDefaultClockAddMarkEvent
	KsiDefaultClockAddMarkEvent(${1:PIRP inIrp}, ${2:PKSEVENT_TIME_INTERVAL inEventTime}, ${3:PKSEVENT_ENTRY inEventEntry}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiPropertyDefaultClockGetCorrelatedPhysicalTime
	KsiPropertyDefaultClockGetCorrelatedPhysicalTime(${1:PIRP inIrp}, ${2:PKSPROPERTY inProperty}, ${3:PKSCORRELATED_TIME outTime}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiPropertyDefaultClockGetCorrelatedTime
	KsiPropertyDefaultClockGetCorrelatedTime(${1:PIRP inIrp}, ${2:PKSPROPERTY inProperty}, ${3:PKSCORRELATED_TIME outTime}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiPropertyDefaultClockGetFunctionTable
	KsiPropertyDefaultClockGetFunctionTable(${1:PIRP inIrp}, ${2:PKSPROPERTY inProperty}, ${3:PKSCLOCK_FUNCTIONTABLE outFunctionTable}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiPropertyDefaultClockGetPhysicalTime
	KsiPropertyDefaultClockGetPhysicalTime(${1:PIRP inIrp}, ${2:PKSPROPERTY inProperty}, ${3:PLONGLONG outTime}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiPropertyDefaultClockGetResolution
	KsiPropertyDefaultClockGetResolution(${1:PIRP inIrp}, ${2:PKSPROPERTY inProperty}, ${3:PKSRESOLUTION outResolution}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiPropertyDefaultClockGetState
	KsiPropertyDefaultClockGetState(${1:PIRP inIrp}, ${2:PKSPROPERTY inProperty}, ${3:PKSSTATE outState}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiPropertyDefaultClockGetTime
	KsiPropertyDefaultClockGetTime(${1:PIRP inIrp}, ${2:PKSPROPERTY inProperty}, ${3:PLONGLONG outTime}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet KsiQueryObjectCreateItemsPresent
	KsiQueryObjectCreateItemsPresent(${1:KSDEVICE_HEADER inHeader}); ${2:// BOOLEAN #PASSIVE_LEVEL}
snippet LookupRouteInformation
	LookupRouteInformation(${1:VOID* inRouteLookupData}, ${2:VOIDout* RouteEntry OPTIONAL}, ${3:IPROUTEINFOCLASS inRouteInfoClass OPTIONAL}, ${4:VOIDout* RouteInformation OPTIONAL}, ${5:UINTout* RouteInfoLength OPTIONAL}); ${6:// ) LookupRouteInformation #DISPATCH_LEVEL}
snippet LsaLogonUser
	LsaLogonUser(${1:HANDLE inLsaHandle}, ${2:PLSA_STRING inOriginName}, ${3:SECURITY_LOGON_TYPE inLogonType}, ${4:ULONG inAuthenticationPackage}, ${5:PVOID AuthenticationInformation}, ${6:ULONG inAuthenticationInformationLength}, ${7:PTOKEN_GROUPS inLocalGroups}, ${8:PTOKEN_SOURCE inSourceContext}, ${9:PVOID out*ProfileBuffer}, ${10:PULONG outProfileBufferLength}, ${11:PLUID outLogonId}, ${12:PHANDLE outToken}, ${13:PQUOTA_LIMITS outQuotas}, ${14:PNTSTATUS outSubStatus}); ${15:// NTSTATUS #PASSIVE_LEVEL}
snippet LsaRegisterLogonProcess
	LsaRegisterLogonProcess(${1:PLSA_STRING inLogonProcessName}, ${2:PHANDLE outLsaHandle}, ${3:PLSA_OPERATIONAL_MODE outSecurityMode}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet MmAddPhysicalMemory
	MmAddPhysicalMemory(${1:PPHYSICAL_ADDRESS inStartAddress}, ${2:PLARGE_INTEGER ioNumberOfBytes}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet MmAddVerifierThunks
	MmAddVerifierThunks(${1:PVOID ThunkBuffer}, ${2:ULONG inThunkBufferSize}); ${3:// NTSTATUS #APC_LEVEL}
snippet MmAdvanceMdl
	MmAdvanceMdl(${1:PMDLX ioMdl}, ${2:ULONG inNumberOfBytes}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet MmAllocateContiguousMemory
	MmAllocateContiguousMemory(${1:SIZE_T inNumberOfBytes}, ${2:PHYSICAL_ADDRESS inHighestAcceptableAddress}); ${3:// PVOID #DISPATCH_LEVEL}
snippet MmAllocateContiguousMemorySpecifyCache
	MmAllocateContiguousMemorySpecifyCache(${1:SIZE_T inNumberOfBytes}, ${2:PHYSICAL_ADDRESS inLowestAcceptableAddress}, ${3:PHYSICAL_ADDRESS inHighestAcceptableAddress}, ${4:PHYSICAL_ADDRESS inBoundaryAddressMultiple}, ${5:MEMORY_CACHING_TYPE inCacheType}); ${6:// PVOID #DISPATCH_LEVEL}
snippet MmAllocateContiguousMemorySpecifyCacheNode
	MmAllocateContiguousMemorySpecifyCacheNode(${1:SIZE_T inNumberOfBytes}, ${2:PHYSICAL_ADDRESS inLowestAcceptableAddress}, ${3:PHYSICAL_ADDRESS inHighestAcceptableAddress}, ${4:PHYSICAL_ADDRESS inBoundaryAddressMultiple}, ${5:MEMORY_CACHING_TYPE inCacheType}, ${6:NODE_REQUIREMENT inPreferredNode}); ${7:// PVOID #DISPATCH_LEVEL}
snippet MmAllocateMappingAddress
	MmAllocateMappingAddress(${1:SIZE_T inNumberOfBytes}, ${2:ULONG inPoolTag}); ${3:// PVOID #APC_LEVEL}
snippet MmAllocateNonCachedMemory
	MmAllocateNonCachedMemory(${1:SIZE_T inNumberOfBytes}); ${2:// PVOID #APC_LEVEL}
snippet MmAllocatePagesForMdl
	MmAllocatePagesForMdl(${1:PHYSICAL_ADDRESS inLowAddress}, ${2:PHYSICAL_ADDRESS inHighAddress}, ${3:PHYSICAL_ADDRESS inSkipBytes}, ${4:SIZE_T inTotalBytes}); ${5:// PMDL #DISPATCH_LEVEL}
snippet MmAllocatePagesForMdlEx
	MmAllocatePagesForMdlEx(${1:PHYSICAL_ADDRESS inLowAddress}, ${2:PHYSICAL_ADDRESS inHighAddress}, ${3:PHYSICAL_ADDRESS inSkipBytes}, ${4:SIZE_T inTotalBytes}, ${5:MEMORY_CACHING_TYPE inCacheType}, ${6:ULONG inFlags}); ${7:// PMDL #DISPATCH_LEVEL}
snippet MmBuildMdlForNonPagedPool
	MmBuildMdlForNonPagedPool(${1:PMDLX ioMemoryDescriptorList}); ${2:// VOID #DISPATCH_LEVEL}
snippet MmCanFileBeTruncated
	MmCanFileBeTruncated(${1:PSECTION_OBJECT_POINTERS inSectionPointer}, ${2:PLARGE_INTEGER inNewFileSize}); ${3:// BOOLEAN #APC_LEVEL}
snippet MmCreateMirror
	MmCreateMirror(${1:VOID}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet MmDoesFileHaveUserWritableReferences
	MmDoesFileHaveUserWritableReferences(${1:PSECTION_OBJECT_POINTERS inSectionPointer}); ${2:// ULONG #APC_LEVEL}
snippet MmFlushImageSection
	MmFlushImageSection(${1:PSECTION_OBJECT_POINTERS inSectionObjectPointer}, ${2:MMFLUSH_TYPE inFlushType}); ${3:// BOOLEAN #APC_LEVEL}
snippet MmForceSectionClosed
	MmForceSectionClosed(${1:PSECTION_OBJECT_POINTERS inSectionObjectPointer}, ${2:BOOLEAN inDelayClose}); ${3:// BOOLEAN #APC_LEVEL}
snippet MmFreeContiguousMemory
	MmFreeContiguousMemory(${1:PVOID inBaseAddress}); ${2:// VOID #DISPATCH_LEVEL}
snippet MmFreeContiguousMemorySpecifyCache
	MmFreeContiguousMemorySpecifyCache(${1:PVOID BaseAddress}, ${2:SIZE_T inNumberOfBytes}, ${3:MEMORY_CACHING_TYPE inCacheType}); ${4:// VOID #DISPATCH_LEVEL}
snippet MmFreeMappingAddress
	MmFreeMappingAddress(${1:PVOID inBaseAddress}, ${2:ULONG inPoolTag}); ${3:// VOID #APC_LEVEL}
snippet MmFreeNonCachedMemory
	MmFreeNonCachedMemory(${1:PVOID BaseAddress}, ${2:SIZE_T inNumberOfBytes}); ${3:// VOID #APC_LEVEL}
snippet MmFreePagesFromMdl
	MmFreePagesFromMdl(${1:PMDLX inMemoryDescriptorList}); ${2:// VOID #DISPATCH_LEVEL}
snippet MmGetPhysicalMemoryRanges
	MmGetPhysicalMemoryRanges(${1:VOID}); ${2:// PPHYSICAL_MEMORY_RANGE #PASSIVE_LEVEL}
snippet MmGetSystemRoutineAddress
	MmGetSystemRoutineAddress(${1:PUNICODE_STRING inSystemRoutineName}); ${2:// PVOID #PASSIVE_LEVEL}
snippet MmIsAddressValid
	MmIsAddressValid(${1:PVOID inVirtualAddress}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet MmIsDriverVerifyingByAddress
	MmIsDriverVerifyingByAddress(${1:PVOID inAddressWithinSection}); ${2:// LOGICAL #APC_LEVEL}
snippet MmIsIoSpaceActive
	MmIsIoSpaceActive(${1:PHYSICAL_ADDRESS inStartAddress}, ${2:SIZE_T inNumberOfBytes}); ${3:// LOGICAL #DISPATCH_LEVEL}
snippet MmIsVerifierEnabled
	MmIsVerifierEnabled(${1:PULONG outVerifierFlags}); ${2:// NTSTATUS #APC_LEVEL}
snippet MmLockPagableDataSection
	MmLockPagableDataSection(${1:PVOID inAddressWithinSection}); ${2:// PVOID #APC_LEVEL}
snippet MmLockPagableSectionByHandle
	MmLockPagableSectionByHandle(${1:PVOID inImageSectionHandle}); ${2:// VOID #APC_LEVEL}
snippet MmMapIoSpace
	MmMapIoSpace(${1:PHYSICAL_ADDRESS inPhysicalAddress}, ${2:SIZE_T inNumberOfBytes}, ${3:MEMORY_CACHING_TYPE inCacheType}); ${4:// PVOID #DISPATCH_LEVEL}
snippet MmMapLockedPages
	MmMapLockedPages(${1:PMDL inMemoryDescriptorList}, ${2:KPROCESSOR_MODE inAccessMode}); ${3:// PVOID # APC_LEVEL}
snippet MmMapLockedPagesSpecifyCache
	MmMapLockedPagesSpecifyCache(${1:PMDLX inMemoryDescriptorList}, ${2:KPROCESSOR_MODE inAccessMode}, ${3:MEMORY_CACHING_TYPE inCacheType}, ${4:PVOID inBaseAddress}, ${5:ULONG inBugCheckOnFailure}, ${6:MM_PAGE_PRIORITY inPriority}); ${7:// PVOID # APC_LEVEL}
snippet MmMapLockedPagesWithReservedMapping
	MmMapLockedPagesWithReservedMapping(${1:PVOID inMappingAddress}, ${2:ULONG inPoolTag}, ${3:PMDLX inMemoryDescriptorList}, ${4:MEMORY_CACHING_TYPE inCacheType}); ${5:// PVOID #DISPATCH_LEVEL}
snippet MmMapUserAddressesToPage
	MmMapUserAddressesToPage(${1:PVOID BaseAddress}, ${2:SIZE_T inNumberOfBytes}, ${3:PVOID inPageAddress}); ${4:// NTSTATUS #APC_LEVEL}
snippet MmMapVideoDisplay
	MmMapVideoDisplay(${1:PHYSICAL_ADDRESS inPhysicalAddress}, ${2:SIZE_T inNumberOfBytes}, ${3:MEMORY_CACHING_TYPE inCacheType}); ${4:// PVOID #APC_LEVEL}
snippet MmMapViewInSessionSpace
	MmMapViewInSessionSpace(${1:PVOID inSection}, ${2:PVOID *MappedBase}, ${3:PSIZE_T ioViewSize}); ${4:// NTSTATUS #APC_LEVEL}
snippet MmMapViewInSystemSpace
	MmMapViewInSystemSpace(${1:PVOID inSection}, ${2:PVOID *MappedBase}, ${3:PSIZE_T ioViewSize}); ${4:// NTSTATUS #APC_LEVEL}
snippet MmPageEntireDriver
	MmPageEntireDriver(${1:PVOID inAddressWithinSection}); ${2:// PVOID #APC_LEVEL}
snippet MmPrefetchPages
	MmPrefetchPages(${1:ULONG inNumberOfLists}, ${2:PREAD_LIST *ReadLists}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet MmProbeAndLockPages
	MmProbeAndLockPages(${1:PMDLX ioMemoryDescriptorList}, ${2:KPROCESSOR_MODE inAccessMode}, ${3:LOCK_OPERATION inOperation}); ${4:// VOID #DISPATCH_LEVEL}
snippet MmProbeAndLockProcessPages
	MmProbeAndLockProcessPages(${1:PMDL ioMemoryDescriptorList}, ${2:PEPROCESS inProcess}, ${3:KPROCESSOR_MODE inAccessMode}, ${4:LOCK_OPERATION inOperation}); ${5:// VOID #APC_LEVEL}
snippet MmProtectMdlSystemAddress
	MmProtectMdlSystemAddress(${1:PMDLX inMemoryDescriptorList}, ${2:ULONG inNewProtect}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet MmRemovePhysicalMemory
	MmRemovePhysicalMemory(${1:PPHYSICAL_ADDRESS inStartAddress}, ${2:PLARGE_INTEGER ioNumberOfBytes}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet MmResetDriverPaging
	MmResetDriverPaging(${1:PVOID inAddressWithinSection}); ${2:// VOID #APC_LEVEL}
snippet MmRotatePhysicalView
	MmRotatePhysicalView(${1:PVOID inVirtualAddress}, ${2:PSIZE_T ioNumberOfBytes}, ${3:PMDLX inNewMdl}, ${4:MM_ROTATE_DIRECTION inDirection}, ${5:PMM_ROTATE_COPY_CALLBACK_FUNCTION inCopyFunction}, ${6:PVOID inContext}); ${7:// NTSTATUS #APC_LEVEL}
snippet MmSecureVirtualMemory
	MmSecureVirtualMemory(${1:PVOID Address}, ${2:SIZE_T inSize}, ${3:ULONG inProbeMode}); ${4:// : MmSecureVirtualMemory #APC_LEVEL}
snippet MmSetAddressRangeModified
	MmSetAddressRangeModified(${1:PVOID Address}, ${2:SIZE_T inLength}); ${3:// BOOLEAN #APC_LEVEL}
snippet MmUnlockPagableImageSection
	MmUnlockPagableImageSection(${1:PVOID inImageSectionHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet MmUnlockPages
	MmUnlockPages(${1:PMDLX ioMemoryDescriptorList}); ${2:// VOID #DISPATCH_LEVEL}
snippet MmUnmapIoSpace
	MmUnmapIoSpace(${1:PVOID BaseAddress}, ${2:SIZE_T inNumberOfBytes}); ${3:// VOID #DISPATCH_LEVEL}
snippet MmUnmapLockedPages
	MmUnmapLockedPages(${1:PVOID inBaseAddress}, ${2:PMDL inMemoryDescriptorList}); ${3:// VOID #DISPATCH_LEVEL}
snippet MmUnmapReservedMapping
	MmUnmapReservedMapping(${1:PVOID inBaseAddress}, ${2:ULONG inPoolTag}, ${3:PMDLX inMemoryDescriptorList}); ${4:// VOID #DISPATCH_LEVEL}
snippet MmUnmapVideoDisplay
	MmUnmapVideoDisplay(${1:PVOID BaseAddress}, ${2:SIZE_T inNumberOfBytes}); ${3:// VOID #APC_LEVEL}
snippet MmUnmapViewInSessionSpace
	MmUnmapViewInSessionSpace(${1:PVOID inMappedBase}); ${2:// NTSTATUS #APC_LEVEL}
snippet MmUnmapViewInSystemSpace
	MmUnmapViewInSystemSpace(${1:PVOID inMappedBase}); ${2:// NTSTATUS #APC_LEVEL}
snippet MmUnsecureVirtualMemory
	MmUnsecureVirtualMemory(${1:HANDLE inSecureHandle}); ${2:// VOID #APC_LEVEL}
snippet NdisAcquireReadWriteLock
	NdisAcquireReadWriteLock(${1:PNDIS_RW_LOCK ioLock}, ${2:BOOLEAN infWrite},# ${3:TRUE -> Write}, ${4:FALSE -> Read -> VOID ${5://outDISPATCH_LEVEL}
snippet NdisAdjustNetBufferCurrentMdl
	NdisAdjustNetBufferCurrentMdl(${1:PNET_BUFFER inNetBuffer}}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisAdvanceNetBufferDataStart
	NdisAdvanceNetBufferDataStart(${1:PNET_BUFFER inNetBuffer}, ${2:ULONG inDataOffsetDelta}, ${3:BOOLEAN inFreeMdl}, ${4:NET_BUFFER_FREE_MDL_HANDLER inFreeMdlHandler}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisAdvanceNetBufferListDataStart
	NdisAdvanceNetBufferListDataStart(${1:PNET_BUFFER_LIST inNetBufferList}, ${2:ULONG inDataOffsetDelta}, ${3:BOOLEAN inFreeMdl}, ${4:NET_BUFFER_FREE_MDL_HANDLER inFreeMdlMdlHandler}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisAllocateBuffer
	NdisAllocateBuffer(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_BUFFER out* Buffer}, ${3:NDIS_HANDLE inPoolHandle}, ${4:PVOID VirtualAddress}, ${5:UINT inLength}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisAllocateBufferPool
	NdisAllocateBufferPool(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_HANDLE outPoolHandle}, ${3:UINT inNumberOfDescriptors}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisAllocateCloneNetBufferList
	NdisAllocateCloneNetBufferList(${1:PNET_BUFFER_LIST inOriginalNetBufferList}, ${2:NDIS_HANDLE inNetBufferListPoolHandle}, ${3:NDIS_HANDLE inNetBufferPoolHandle}, ${4:ULONG inAllocateCloneFlags}); ${5:// PNET_BUFFER_LIST #DISPATCH_LEVEL}
snippet NdisAllocateFragmentNetBufferList
	NdisAllocateFragmentNetBufferList(${1:PNET_BUFFER_LIST inOriginalNetBufferList}, ${2:NDIS_HANDLE inNetBufferListPool}, ${3:NDIS_HANDLE inNetBufferPool}, ${4:ULONG inStartOffset}, ${5:ULONG inMaximumLength}, ${6:ULONG inDataOffsetDelta}, ${7:ULONG inDataBackFill}, ${8:ULONG inAllocateFragmentFlags}); ${9:// PNET_BUFFER_LIST #DISPATCH_LEVEL}
snippet NdisAllocateIoWorkItem
	NdisAllocateIoWorkItem(${1:NDIS_HANDLE inNdisObjectHandle}); ${2:// NDIS_HANDLE #DISPATCH_LEVEL}
snippet NdisAllocateMdl
	NdisAllocateMdl(${1:NDIS_HANDLE inNdisHandle}, ${2:PVOID VirtualAddress}, ${3:UINT inLength}); ${4:// PMDL #DISPATCH_LEVEL}
snippet NdisAllocateMemory
	NdisAllocateMemory(${1:PVOID * VirtualAddress}, ${2:UINT inLength}, ${3:UINT inMemoryFlags}, ${4:NDIS_PHYSICAL_ADDRESS inHighestAcceptableAddress}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisAllocateMemoryWithTag
	NdisAllocateMemoryWithTag(${1:PVOID * VirtualAddress}, ${2:UINT inLength}, ${3:ULONG inTag}); ${4:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisAllocateMemoryWithTagPriority
	NdisAllocateMemoryWithTagPriority(${1:NDIS_HANDLE inNdisHandle}, ${2:UINT inLength}, ${3:ULONG inTag}, ${4:EX_POOL_PRIORITY inPriority}); ${5:// PVOID #DISPATCH_LEVEL}
snippet NdisAllocateNetBuffer
	NdisAllocateNetBuffer(${1:NDIS_HANDLE inPoolHandle}, ${2:PMDL inMdlChain}, ${3:ULONG inDataOffset}, ${4:SIZE_T inDataLength}); ${5:// PNET_BUFFER #DISPATCH_LEVEL}
snippet NdisAllocateNetBufferAndNetBufferList
	NdisAllocateNetBufferAndNetBufferList(${1:NDIS_HANDLE inPoolHandle}, ${2:USHORT inContextSize}, ${3:USHORT inContextBackFill}, ${4:PMDL inMdlChain}, ${5:ULONG inDataOffset}, ${6:SIZE_T inDataLength}); ${7:// PNET_BUFFER_LIST #DISPATCH_LEVEL}
snippet NdisAllocateNetBufferList
	NdisAllocateNetBufferList(${1:NDIS_HANDLE inPoolHandle}, ${2:USHORT inContextSize}, ${3:USHORT inContextBackFill}); ${4:// PNET_BUFFER_LIST #DISPATCH_LEVEL}
snippet NdisAllocateNetBufferListContext
	NdisAllocateNetBufferListContext(${1:PNET_BUFFER_LIST inNetBufferList}, ${2:USHORT inContextSize}, ${3:USHORT inContextBackFill}, ${4:ULONG inPoolTag}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisAllocateNetBufferListPool
	NdisAllocateNetBufferListPool(${1:NDIS_HANDLE inNdisHandle}, ${2:PNET_BUFFER_LIST_POOL_PARAMETERS inParameters}); ${3:// NDIS_HANDLE #DISPATCH_LEVEL}
snippet NdisAllocateNetBufferMdlAndData
	NdisAllocateNetBufferMdlAndData(${1:NDIS_HANDLE inPoolHandle}); ${2:// PNET_BUFFER #DISPATCH_LEVEL}
snippet NdisAllocateNetBufferPool
	NdisAllocateNetBufferPool(${1:NDIS_HANDLE inNdisHandle}, ${2:PNET_BUFFER_POOL_PARAMETERS inParameters}); ${3:// NDIS_HANDLE #DISPATCH_LEVEL}
snippet NdisAllocatePacket
	NdisAllocatePacket(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_PACKET out* Packet}, ${3:NDIS_HANDLE inPoolHandle}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisAllocatePacketPool
	NdisAllocatePacketPool(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_HANDLE outPoolHandle}, ${3:UINT inNumberOfDescriptors}, ${4:UINT inProtocolReservedLength}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisAllocatePacketPoolEx
	NdisAllocatePacketPoolEx(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_HANDLE outPoolHandle}, ${3:UINT inNumberOfDescriptors}, ${4:UINT inNumberOfOverflowDescriptors}, ${5:UINT inProtocolReservedLength}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisAllocateReassembledNetBufferList
	NdisAllocateReassembledNetBufferList(${1:PNET_BUFFER_LIST inFagmentNetBufferList}, ${2:NDIS_HANDLE inNetBufferAndNetBufferListPoolHandle}, ${3:ULONG inStartOffset}, ${4:ULONG inDataOffsetDelta}, ${5:ULONG inDataBackFill}, ${6:ULONG inAllocateReassembleFlags}); ${7:// PNET_BUFFER_LIST #DISPATCH_LEVEL}
snippet NdisAllocateTimerObject
	NdisAllocateTimerObject(${1:NDIS_HANDLE inNdisHandle}, ${2:PNDIS_TIMER_CHARACTERISTICS inTimerCharacteristics}, ${3:PNDIS_HANDLE outpTimerObject}); ${4:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCancelDirectOidRequest
	NdisCancelDirectOidRequest(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PVOID inRequestId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCancelOidRequest
	NdisCancelOidRequest(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PVOID inRequestId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCancelSendNetBufferLists
	NdisCancelSendNetBufferLists(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PVOID inCancelId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCancelSendPackets
	NdisCancelSendPackets(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PVOID inCancelId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCancelTimer
	NdisCancelTimer(${1:PNDIS_TIMER inTimer}, ${2:PBOOLEAN outTimerCancelled}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCancelTimerObject
	NdisCancelTimerObject(${1:NDIS_HANDLE inTimerObject}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet NdisClAddParty
	NdisClAddParty(${1:NDIS_HANDLE inNdisVcHandle}, ${2:NDIS_HANDLE inProtocolPartyContext}, ${3:PCO_CALL_PARAMETERS ioCallParameters}, ${4:PNDIS_HANDLE outNdisPartyHandle}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClCloseAddressFamily
	NdisClCloseAddressFamily(${1:NDIS_HANDLE inNdisAfHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClCloseCall
	NdisClCloseCall(${1:NDIS_HANDLE inNdisVcHandle}, ${2:NDIS_HANDLE inNdisPartyHandle}, ${3:PVOID inBuffer}, ${4:UINT inSize}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClDeregisterSap
	NdisClDeregisterSap(${1:NDIS_HANDLE inNdisSapHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClDropParty
	NdisClDropParty(${1:NDIS_HANDLE inNdisPartyHandle}, ${2:PVOID inBuffer}, ${3:UINT inSize}); ${4:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClGetProtocolVcContextFromTapiCallId
	NdisClGetProtocolVcContextFromTapiCallId(${1:UNICODE_STRING inTapiCallId}, ${2:PNDIS_HANDLE outProtocolVcContext}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClIncomingCallComplete
	NdisClIncomingCallComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:PCO_CALL_PARAMETERS inCallParameters}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisClMakeCall
	NdisClMakeCall(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PCO_CALL_PARAMETERS ioCallParameters}, ${3:NDIS_HANDLE inProtocolPartyContext}, ${4:PNDIS_HANDLE outNdisPartyHandle }); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClModifyCallQoS
	NdisClModifyCallQoS(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PCO_CALL_PARAMETERS inCallParameters}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisClNotifyCloseAddressFamilyComplete
	NdisClNotifyCloseAddressFamilyComplete(${1:NDIS_HANDLE inNdisAfHandle}, ${2:NDIS_STATUS inStatus}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisClRegisterSap
	NdisClRegisterSap(${1:NDIS_HANDLE inNdisAfHandle}, ${2:NDIS_HANDLE inProtocolSapContext}, ${3:PCO_SAP inSap}, ${4:PNDIS_HANDLE outNdisSapHandle}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCmActivateVc
	NdisCmActivateVc(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PCO_CALL_PARAMETERS ioCallParameters}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCmAddPartyComplete
	NdisCmAddPartyComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisPartyHandle}, ${3:NDIS_HANDLE inCallMgrPartyContext}, ${4:PCO_CALL_PARAMETERS inCallParameters}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisCmCloseAddressFamilyComplete
	NdisCmCloseAddressFamilyComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisAfHandle}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCmCloseCallComplete
	NdisCmCloseCallComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:NDIS_HANDLE inNdisPartyHandle}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisCmDeactivateVc
	NdisCmDeactivateVc(${1:NDIS_HANDLE inNdisVcHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCmDeregisterSapComplete
	NdisCmDeregisterSapComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisSapHandle}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCmDispatchCallConnected
	NdisCmDispatchCallConnected(${1:NDIS_HANDLE inNdisVcHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisCmDispatchIncomingCall
	NdisCmDispatchIncomingCall(${1:NDIS_HANDLE inNdisSapHandle}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:PCO_CALL_PARAMETERS inCallParameters}); ${4:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCmDispatchIncomingCallQoSChange
	NdisCmDispatchIncomingCallQoSChange(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PCO_CALL_PARAMETERS inCallParameters}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCmDispatchIncomingCloseCall
	NdisCmDispatchIncomingCloseCall(${1:NDIS_STATUS inCloseStatus}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:PVOID inBuffer}, ${4:UINT inSize}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisCmDispatchIncomingDropParty
	NdisCmDispatchIncomingDropParty(${1:NDIS_STATUS inDropStatus}, ${2:NDIS_HANDLE inNdisPartyHandle}, ${3:PVOID inBuffer}, ${4:UINT inSize}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisCmDropPartyComplete
	NdisCmDropPartyComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisPartyHandle}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCmMakeCallComplete
	NdisCmMakeCallComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:NDIS_HANDLE inNdisPartyHandle}, ${4:NDIS_HANDLE inCallMgrPartyContext}, ${5:PCO_CALL_PARAMETERS inCallParameters}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisCmModifyCallQoSComplete
	NdisCmModifyCallQoSComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:PCO_CALL_PARAMETERS inCallParameters}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisCmOpenAddressFamilyComplete
	NdisCmOpenAddressFamilyComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisAfHandle}, ${3:NDIS_HANDLE inCallMgrAfContext}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisCmRegisterSapComplete
	NdisCmRegisterSapComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisSapHandle}, ${3:NDIS_HANDLE inCallMgrSapContext}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisCoAssignInstanceName
	NdisCoAssignInstanceName(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PNDIS_STRING inBaseInstanceName}, ${3:PNDIS_STRING outVcInstanceName}); ${4:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCoCreateVc
	NdisCoCreateVc(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:NDIS_HANDLE inNdisAfHandle}, ${3:# For CM signalling VCs NDIS_HANDLE inProtocolVcContext}, ${4:PNDIS_HANDLE ioNdisVcHandle}); ${5:// NDIS_STATUS //DISPATCH_LEVEL}
snippet NdisCoDeleteVc
	NdisCoDeleteVc(${1:NDIS_HANDLE inNdisVcHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCoGetTapiCallId
	NdisCoGetTapiCallId(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PVAR_STRING ioTapiCallId}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCoOidRequest
	NdisCoOidRequest(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:NDIS_HANDLE inNdisAfHandle}, ${3:NDIS_HANDLE inNdisVcHandle}, ${4:NDIS_HANDLE inNdisPartyHandle}, ${5:PNDIS_OID_REQUEST ioOidRequest}); ${6:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCoOidRequestComplete
	NdisCoOidRequestComplete(${1:NDIS_HANDLE inNdisAfHandle}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:NDIS_HANDLE inNdisPartyHandle}, ${4:PNDIS_OID_REQUEST inOidRequest}, ${5:NDIS_STATUS inStatus}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisCoRequest
	NdisCoRequest(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:NDIS_HANDLE inNdisAfHandle}, ${3:NDIS_HANDLE inNdisVcHandle}, ${4:NDIS_HANDLE inNdisPartyHandle}, ${5:PNDIS_REQUEST ioNdisRequest}); ${6:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCoRequestComplete
	NdisCoRequestComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisAfHandle}, ${3:NDIS_HANDLE inNdisVcHandle}, ${4:NDIS_HANDLE inNdisPartyHandle}, ${5:PNDIS_REQUEST inNdisRequest}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisCoSendNetBufferLists
	NdisCoSendNetBufferLists(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PNET_BUFFER_LIST inNetBufferLists}, ${3:ULONG inSendFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisCoSendPackets
	NdisCoSendPackets(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PPNDIS_PACKET inPacketArray}, ${3:UINT inNumberOfPackets}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisCompleteBindAdapterEx
	NdisCompleteBindAdapterEx(${1:NDIS_HANDLE inBindAdapterContext}, ${2:NDIS_STATUS inStatus}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCompleteUnbindAdapterEx
	NdisCompleteUnbindAdapterEx(${1:NDIS_HANDLE inUnbindContext}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisCopyBuffer
	NdisCopyBuffer(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_BUFFER out* Buffer}, ${3:NDIS_HANDLE inPoolHandle}, ${4:PVOID inMemoryDescriptor}, ${5:UINT inOffset}, ${6:UINT inLength}); ${7:// VOID #DISPATCH_LEVEL}
snippet NdisCopyFromNetBufferToNetBuffer
	NdisCopyFromNetBufferToNetBuffer(${1:PNET_BUFFER inDestination}, ${2:ULONG inDestinationOffset}, ${3:ULONG inBytesToCopy}, ${4:PNET_BUFFER inSource}, ${5:ULONG inSourceOffset}, ${6:PULONG outBytesCopied}); ${7:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisCopyFromPacketToPacket
	NdisCopyFromPacketToPacket(${1:PNDIS_PACKET inDestination}, ${2:UINT inDestinationOffset}, ${3:UINT inBytesToCopy}, ${4:PNDIS_PACKET inSource}, ${5:UINT inSourceOffset}, ${6:PUINT outBytesCopied}); ${7:// VOID #DISPATCH_LEVEL}
snippet NdisCopyReceiveNetBufferListInfo
	NdisCopyReceiveNetBufferListInfo(${1:PNET_BUFFER_LIST inDestNetBufferList}, ${2:PNET_BUFFER_LIST inSrcNetBufferList}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisCopySendNetBufferListInfo
	NdisCopySendNetBufferListInfo(${1:PNET_BUFFER_LIST inDestNetBufferList}, ${2:PNET_BUFFER_LIST inSrcNetBufferList}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisDeregisterProtocol
	NdisDeregisterProtocol(${1:PNDIS_STATUS outStatus}, ${2:NDIS_HANDLE inNdisProtocolHandle}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisDirectOidRequest
	NdisDirectOidRequest(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisDprAllocatePacket
	NdisDprAllocatePacket(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_PACKETout* Packet}, ${3:NDIS_HANDLE inPoolHandle}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisDprAllocatePacketNonInterlocked
	NdisDprAllocatePacketNonInterlocked(${1:PNDIS_STATUS outStatus}, ${2:PNDIS_PACKET out* Packet}, ${3:NDIS_HANDLE inPoolHandle}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisDprFreePacket
	NdisDprFreePacket(${1:PNDIS_PACKET inPacket}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisDprFreePacketNonInterlocked
	NdisDprFreePacketNonInterlocked(${1:PNDIS_PACKET inPacket}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFCancelDirectOidRequest
	NdisFCancelDirectOidRequest(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PVOID inRequestId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisFCancelOidRequest
	NdisFCancelOidRequest(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PVOID inRequestId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisFCancelSendNetBufferLists
	NdisFCancelSendNetBufferLists(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PVOID inCancelId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisFDeregisterFilterDriver
	NdisFDeregisterFilterDriver(${1:NDIS_HANDLE inNdisFilterDriverHandle}); ${2:// VOID #PASSIVE_LEVEL}
snippet NdisFDevicePnPEventNotify
	NdisFDevicePnPEventNotify(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNET_DEVICE_PNP_EVENT inNetDevicePnPEvent}); ${3:// VOID #PASSIVE_LEVEL}
snippet NdisFDirectOidRequest
	NdisFDirectOidRequest(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisFDirectOidRequestComplete
	NdisFDirectOidRequestComplete(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}, ${3:NDIS_STATUS inStatus}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisFIndicateReceiveNetBufferLists
	NdisFIndicateReceiveNetBufferLists(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNET_BUFFER_LIST inNetBufferLists}, ${3:NDIS_PORT_NUMBER inPortNumber}, ${4:ULONG inNumberOfNetBufferLists}, ${5:ULONG inReceiveFlags}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisFIndicateStatus
	NdisFIndicateStatus(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNDIS_STATUS_INDICATION inStatusIndication}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisFNetPnPEvent
	NdisFNetPnPEvent(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNET_PNP_EVENT_NOTIFICATION inNetPnPEventNotification}); ${3:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisFOidRequest
	NdisFOidRequest(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisFOidRequestComplete
	NdisFOidRequestComplete(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}, ${3:NDIS_STATUS inStatus}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisFPauseComplete
	NdisFPauseComplete(${1:NDIS_HANDLE inNdisFilterHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFRegisterFilterDriver
	NdisFRegisterFilterDriver(${1:PDRIVER_OBJECT inDriverObject}, ${2:NDIS_HANDLE inFilterDriverContext}, ${3:PNDIS_FILTER_DRIVER_CHARACTERISTICS inFilterDriverCharacteristics}, ${4:PNDIS_HANDLE outNdisFilterDriverHandle}); ${5:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisFRestartComplete
	NdisFRestartComplete(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:NDIS_STATUS inStatus}); ${3:// VOID #PASSIVE_LEVEL}
snippet NdisFRestartFilter
	NdisFRestartFilter(${1:NDIS_HANDLE inNdisFilterHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisFReturnNetBufferLists
	NdisFReturnNetBufferLists(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNET_BUFFER_LIST inNetBufferLists}, ${3:ULONG inReturnFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisFSendNetBufferLists
	NdisFSendNetBufferLists(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNET_BUFFER_LIST inNetBufferList}, ${3:NDIS_PORT_NUMBER inPortNumber}, ${4:ULONG inSendFlags}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisFSendNetBufferListsComplete
	NdisFSendNetBufferListsComplete(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:PNET_BUFFER_LIST inNetBufferList}, ${3:ULONG inSendCompleteFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisFSetAttributes
	NdisFSetAttributes(${1:NDIS_HANDLE inNdisFilterHandle}, ${2:NDIS_HANDLE inFilterModuleContext}, ${3:PNDIS_FILTER_ATTRIBUTES inFilterAttributes}); ${4:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisFreeBufferPool
	NdisFreeBufferPool(${1:NDIS_HANDLE inPoolHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreeCloneNetBufferList
	NdisFreeCloneNetBufferList(${1:PNET_BUFFER_LIST inCloneNetBufferList}, ${2:ULONG inFreeCloneFlags}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisFreeFragmentNetBufferList
	NdisFreeFragmentNetBufferList(${1:PNET_BUFFER_LIST inFragmentNetBufferList}, ${2:ULONG inDataOffsetDelta}, ${3:ULONG inFreeFragmentFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisFreeIoWorkItem
	NdisFreeIoWorkItem(${1:NDIS_HANDLE inNdisIoWorkItemHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreeMdl
	NdisFreeMdl(${1:PMDL inMdl}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreeMemory
	NdisFreeMemory(${1:PVOID VirtualAddress}, ${2:UINT inLength}, ${3:UINT inMemoryFlags}); ${4:// VOID # PASSIVE_LEVEL}
snippet NdisFreeNetBuffer
	NdisFreeNetBuffer(${1:PNET_BUFFER inNetBuffer}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreeNetBufferList
	NdisFreeNetBufferList(${1:PNET_BUFFER_LIST inNetBufferList}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreeNetBufferListContext
	NdisFreeNetBufferListContext(${1:PNET_BUFFER_LIST inNetBufferList}, ${2:USHORT inContextSize}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisFreeNetBufferListPool
	NdisFreeNetBufferListPool(${1:NDIS_HANDLE inPoolHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreeNetBufferPool
	NdisFreeNetBufferPool(${1:NDIS_HANDLE inPoolHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreePacket
	NdisFreePacket(${1:PNDIS_PACKET inPacket}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreePacketPool
	NdisFreePacketPool(${1:NDIS_HANDLE inPoolHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisFreeReassembledNetBufferList
	NdisFreeReassembledNetBufferList(${1:PNET_BUFFER_LIST inReassembledNetBufferList}, ${2:ULONG inDataOffsetDelta}, ${3:ULONG inFreeReassembleFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisFreeTimerObject
	NdisFreeTimerObject(${1:NDIS_HANDLE inTimerObject}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisGeneratePartialCancelId
	NdisGeneratePartialCancelId(${1:VOID}); ${2:// UCHAR #DISPATCH_LEVEL}
snippet NdisGetCurrentProcessorCounts
	NdisGetCurrentProcessorCounts(${1:PULONG outpIdleCount}, ${2:PULONG outpKernelAndUser}, ${3:PULONG outpIndex}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisGetDataBuffer
	NdisGetDataBuffer(${1:PNET_BUFFER inNetBuffer}, ${2:ULONG inBytesNeeded}, ${3:PVOID inStorage}, ${4:UINT inAlignMultiple}, ${5:UINT inAlignOffset}); ${6:// PVOID #DISPATCH_LEVEL}
snippet NdisGetDriverHandle
	NdisGetDriverHandle(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PNDIS_HANDLE outNdisDriverHandle}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisGetNetBufferListProtocolId
	NdisGetNetBufferListProtocolId(${1:PNET_BUFFER_LIST inNetBufferList}); ${2:// UCHAR #DISPATCH_LEVEL}
snippet NdisGetPoolFromNetBuffer
	NdisGetPoolFromNetBuffer(${1:PNET_BUFFER inNetBuffer}); ${2:// NDIS_HANDLE #DISPATCH_LEVEL}
snippet NdisGetPoolFromNetBufferList
	NdisGetPoolFromNetBufferList(${1:PNET_BUFFER_LIST inNetBufferList}); ${2:// NDIS_HANDLE #DISPATCH_LEVEL}
snippet NdisGetPoolFromPacket
	NdisGetPoolFromPacket(${1:PNDIS_PACKET inPacket}); ${2:// NDIS_HANDLE #DISPATCH_LEVEL}
snippet NdisGetReceivedPacket
	NdisGetReceivedPacket(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:NDIS_HANDLE inMacContext}); ${3:// PNDIS_PACKET #DISPATCH_LEVEL}
snippet NdisGetSharedDataAlignment
	NdisGetSharedDataAlignment(${1:VOID}); ${2:// ULONG #DISPATCH_LEVEL}
snippet NdisGetVersion
	NdisGetVersion(${1:VOID}); ${2:// UINT #DISPATCH_LEVEL}
snippet NdisIMGetBindingContext
	NdisIMGetBindingContext(${1:NDIS_HANDLE inNdisBindingHandle}); ${2:// NDIS_HANDLE #APC_LEVEL}
snippet NdisIMGetCurrentPacketStack
	NdisIMGetCurrentPacketStack(${1:PNDIS_PACKET inPacket}, ${2:BOOLEAN out* StacksRemaining}); ${3:// PNDIS_PACKET_STACK #DISPATCH_LEVEL}
snippet NdisIMGetDeviceContext
	NdisIMGetDeviceContext(${1:NDIS_HANDLE inMiniportAdapterHandle}); ${2:// NDIS_HANDLE #DISPATCH_LEVEL}
snippet NdisIfAddIfStackEntry
	NdisIfAddIfStackEntry(${1:NET_IFINDEX inHigherLayerIfIndex}, ${2:NET_IFINDEX inLowerLayerIfIndex}); ${3:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisIfAllocateNetLuidIndex
	NdisIfAllocateNetLuidIndex(${1:NET_IFTYPE inifType}, ${2:PUINT32 outpNetLuidIndex}); ${3:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisIfDeleteIfStackEntry
	NdisIfDeleteIfStackEntry(${1:NET_IFINDEX inHigherLayerIfIndex}, ${2:NET_IFINDEX inLowerLayerIfIndex}); ${3:// VOID #PASSIVE_LEVEL}
snippet NdisIfDeregisterInterface
	NdisIfDeregisterInterface(${1:NET_IFINDEX inifIndex}); ${2:// VOID #PASSIVE_LEVEL}
snippet NdisIfDeregisterProvider
	NdisIfDeregisterProvider(${1:NDIS_HANDLE inNdisProviderHandle}); ${2:// VOID #PASSIVE_LEVEL}
snippet NdisIfFreeNetLuidIndex
	NdisIfFreeNetLuidIndex(${1:NET_IFTYPE inifType}, ${2:UINT32 inNetLuidIndex}); ${3:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisIfGetInterfaceIndexFromNetLuid
	NdisIfGetInterfaceIndexFromNetLuid(${1:NET_LUID inNetLuid}, ${2:PNET_IFINDEX outpIfIndex}); ${3:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisIfGetNetLuidFromInterfaceIndex
	NdisIfGetNetLuidFromInterfaceIndex(${1:NET_IFINDEX inifIndex}, ${2:PNET_LUID outpNetLuid}); ${3:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisIfQueryBindingIfIndex
	NdisIfQueryBindingIfIndex(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PNET_IFINDEX outpBoundIfIndex}, ${3:PNET_LUID outpBoundIfNetLuid}, ${4:PNET_IFINDEX outpLowestIfIndex}, ${5:PNET_LUID outpLowestIfNetLuid}); ${6:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisIfRegisterInterface
	NdisIfRegisterInterface(${1:NDIS_HANDLE inNdisProviderHandle}, ${2:NET_LUID inNetLuid}, ${3:NDIS_HANDLE inProviderIfContext}, ${4:PNET_IF_INFORMATION inpIfInfo}, ${5:PNET_IFINDEX outpfIndex}); ${6:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisIfRegisterProvider
	NdisIfRegisterProvider(${1:PNDIS_IF_PROVIDER_CHARACTERISTICS inProviderCharacteristics}, ${2:NDIS_HANDLE inIfProviderContext}, ${3:PNDIS_HANDLE outpNdisIfProviderHandle}); ${4:// NDIS_STATUS #PASSIVE_LEVEL}
snippet NdisInitializeEvent
	NdisInitializeEvent(${1:PNDIS_EVENT outEvent}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisInitializeReadWriteLock
	NdisInitializeReadWriteLock(${1:PNDIS_RW_LOCK outLock}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisInitializeTimer
	NdisInitializeTimer(${1:PNDIS_TIMER ioTimer}, ${2:PNDIS_TIMER_FUNCTION inTimerFunction}, ${3:PVOID inFunctionContext}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMAllocatePort
	NdisMAllocatePort(${1:NDIS_HANDLE inNdisMiniportHandle}, ${2:PNDIS_PORT_CHARACTERISTICS ioPortCharacteristics}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMAllocateSharedMemoryAsync
	NdisMAllocateSharedMemoryAsync(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:ULONG inLength}, ${3:BOOLEAN inCached}, ${4:PVOID inContext}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMCancelTimer
	NdisMCancelTimer(${1:PNDIS_MINIPORT_TIMER inTimer}, ${2:PBOOLEAN outTimerCancelled}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisMCmActivateVc
	NdisMCmActivateVc(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PCO_CALL_PARAMETERS inCallParameters}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMCmCreateVc
	NdisMCmCreateVc(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:NDIS_HANDLE inNdisAfHandle}, ${3:NDIS_HANDLE inMiniportVcContext}, ${4:PNDIS_HANDLE outNdisVcHandle}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMCmDeactivateVc
	NdisMCmDeactivateVc(${1:NDIS_HANDLE inNdisVcHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMCmDeleteVc
	NdisMCmDeleteVc(${1:NDIS_HANDLE inNdisVcHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMCmRequest
	NdisMCmRequest(${1:NDIS_HANDLE inNdisAfHandle}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:NDIS_HANDLE inNdisPartyHandle}, ${4:PNDIS_REQUEST ioNdisRequest}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMCoActivateVcComplete
	NdisMCoActivateVcComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:PCO_CALL_PARAMETERS inCallParameters}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMCoDeactivateVcComplete
	NdisMCoDeactivateVcComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisVcHandle}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisMCoIndicateReceivePacket
	NdisMCoIndicateReceivePacket(${1:NDIS_HANDLE inNdisVcHandle}, ${2:PPNDIS_PACKET inPacketArray}, ${3:UINT inNumberOfPackets}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMCoIndicateStatus
	NdisMCoIndicateStatus(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:NDIS_STATUS inGeneralStatus}, ${4:PVOID inStatusBuffer}, ${5:ULONG inStatusBufferSize}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisMCoReceiveComplete
	NdisMCoReceiveComplete(${1:NDIS_HANDLE inMiniportAdapterHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisMCoRequestComplete
	NdisMCoRequestComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inMiniportAdapterHandle}, ${3:PNDIS_REQUEST inRequest}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMCoSendComplete
	NdisMCoSendComplete(${1:NDIS_STATUS inStatus}, ${2:NDIS_HANDLE inNdisVcHandle}, ${3:PNDIS_PACKET inPacket}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMCompleteBufferPhysicalMapping
	NdisMCompleteBufferPhysicalMapping(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:PNDIS_BUFFER inBuffer}, ${3:ULONG inPhysicalMapRegister}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMDirectOidRequestComplete
	NdisMDirectOidRequestComplete(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}, ${3:NDIS_STATUS inStatus}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMFlushLog
	NdisMFlushLog(${1:NDIS_HANDLE inLogHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisMFreePort
	NdisMFreePort(${1:NDIS_HANDLE inNdisMiniportHandle}, ${2:NDIS_PORT_NUMBER inPortNumber}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMFreeSharedMemory
	NdisMFreeSharedMemory(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:ULONG inLength}, ${3:BOOLEAN inCached}, ${4:PVOID VirtualAddress}, ${5:NDIS_PHYSICAL_ADDRESS inPhysicalAddress}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisMGetBusData
	NdisMGetBusData(${1:NDIS_HANDLE inNdisMiniportHandle}, ${2:ULONG inWhichSpace}, ${3:ULONG inOffset}, ${4:PVOID Buffer}, ${5:ULONG inLength}); ${6:// ULONG #DISPATCH_LEVEL}
snippet NdisMIndicateReceiveNetBufferLists
	NdisMIndicateReceiveNetBufferLists(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:PNET_BUFFER_LIST inNetBufferList}, ${3:NDIS_PORT_NUMBER inPortNumber}, ${4:ULONG inNumberOfNetBufferLists}, ${5:ULONG inReceiveFlags}); ${6:// VOID #DISPATCH_LEVEL}
snippet NdisMIndicateStatus
	NdisMIndicateStatus(${1:NDIS_HANDLE inMiniportHandle}, ${2:NDIS_STATUS inGeneralStatus}, ${3:PVOID StatusBuffer}, ${4:UINT inStatusBufferSize}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisMIndicateStatusComplete
	NdisMIndicateStatusComplete(${1:NDIS_HANDLE inMiniportHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisMIndicateStatusEx
	NdisMIndicateStatusEx(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:PNDIS_STATUS_INDICATION inStatusIndication}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisMInitializeTimer
	NdisMInitializeTimer(${1:OUT inPNDIS_MINIPORT_TIMER Timer}, ${2:NDIS_HANDLE inMiniportAdapterHandle}, ${3:PNDIS_TIMER_FUNCTION inTimerFunction}, ${4:PVOID inFunctionContext}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisMOidRequestComplete
	NdisMOidRequestComplete(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}, ${3:NDIS_STATUS inStatus}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMPauseComplete
	NdisMPauseComplete(${1:NDIS_HANDLE inMiniportAdapterHandle}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisMPromoteMiniport
	NdisMPromoteMiniport(${1:NDIS_HANDLE inMiniportHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMQueueDpc
	NdisMQueueDpc(${1:NDIS_HANDLE inNdisInterruptHandle}, ${2:ULONG inMessageId}, ${3:ULONG inTargetProcessors}, ${4:PVOID inMiniportDpcContext}); ${5:// ULONG #DISPATCH_LEVEL}
snippet NdisMReadDmaCounter
	NdisMReadDmaCounter(${1:NDIS_HANDLE inMiniportDmaHandle}); ${2:// ULONG #DISPATCH_LEVEL}
snippet NdisMRemoveMiniport
	NdisMRemoveMiniport(${1:NDIS_HANDLE inMiniportHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMResetComplete
	NdisMResetComplete(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:NDIS_STATUS inStatus}, ${3:BOOLEAN inAddressingReset}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMSendNetBufferListsComplete
	NdisMSendNetBufferListsComplete(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:PNET_BUFFER_LIST inNetBufferList}, ${3:ULONG inSendCompleteFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisMSetPeriodicTimer
	NdisMSetPeriodicTimer(${1:PNDIS_MINIPORT_TIMER inTimer}, ${2:UINT inMillisecondPeriod}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisMSleep
	NdisMSleep(${1:ULONG inMicrosecondsToSleep}); ${2:// VOID #APC_LEVEL}
snippet NdisMStartBufferPhysicalMapping
	NdisMStartBufferPhysicalMapping(${1:NDIS_HANDLE inMiniportAdapterHandle}, ${2:PNDIS_BUFFER inBuffer}, ${3:ULONG inPhysicalMapRegister}, ${4:BOOLEAN inWriteToDevice}, ${5:PNDIS_PHYSICAL_ADDRESS_UNIT outPhysicalAddressArray}, ${6:PUINT outArraySize}); ${7:// VOID #DISPATCH_LEVEL}
snippet NdisMWriteLogData
	NdisMWriteLogData(${1:NDIS_HANDLE inLogHandle}, ${2:PVOID LogBuffer}, ${3:UINT inLogBufferSize}); ${4:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisMapFile
	NdisMapFile(${1:PNDIS_STATUS outStatus}, ${2:PVOID out* MappedBuffer}, ${3:NDIS_HANDLE inFileHandle}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisOidRequest
	NdisOidRequest(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PNDIS_OID_REQUEST inOidRequest}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisOpenConfigurationKeyByIndex
	NdisOpenConfigurationKeyByIndex(${1:PNDIS_STATUS outStatus}, ${2:NDIS_HANDLE inConfigurationHandle}, ${3:ULONG inIndex}, ${4:PNDIS_STRING outKeyName}, ${5:PNDIS_HANDLE outKeyHandle}); ${6:// VOID #APC_LEVEL}
snippet NdisOpenConfigurationKeyByName
	NdisOpenConfigurationKeyByName(${1:PNDIS_STATUS outStatus}, ${2:NDIS_HANDLE inConfigurationHandle}, ${3:PNDIS_STRING inSubKeyName}, ${4:PNDIS_HANDLE outSubKeyHandle}); ${5:// VOID #APC_LEVEL}
snippet NdisPacketPoolUsage
	NdisPacketPoolUsage(${1:NDIS_HANDLE inPoolHandle}); ${2:// UINT #DISPATCH_LEVEL}
snippet NdisPacketSize
	NdisPacketSize(${1:UINT inProtocolReservedSize}); ${2:// UINT #DISPATCH_LEVEL}
snippet NdisQueryAdapterInstanceName
	NdisQueryAdapterInstanceName(${1:PNDIS_STRING outpAdapterInstanceName}, ${2:NDIS_HANDLE inNdisBindingHandle}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisQueryNetBufferPhysicalCount
	NdisQueryNetBufferPhysicalCount(${1:PNET_BUFFER inNetBuffer}); ${2:// ULONG #DISPATCH_LEVEL}
snippet NdisQueryPendingIOCount
	NdisQueryPendingIOCount(${1:PVOID inNdisBindingHandle}, ${2:PULONG outIoCount}); ${3:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisQueueIoWorkItem
	NdisQueueIoWorkItem(${1:NDIS_HANDLE inNdisIoWorkItemHandle}, ${2:NDIS_IO_WORKITEM_ROUTINE inRoutine}, ${3:PVOID inWorkItemContext}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisReadPciSlotInformation
	NdisReadPciSlotInformation(${1:NDIS_HANDLE inNdisAdapterHandle}, ${2:ULONG inSlotNumber}, ${3:ULONG inOffset}, ${4:PVOID Buffer}, ${5:ULONG inLength}); ${6:// ULONG #DISPATCH_LEVEL}
snippet NdisReadPcmciaAttributeMemory
	NdisReadPcmciaAttributeMemory(${1:NDIS_HANDLE inNdisAdapterHandle}, ${2:ULONG inOffset}, ${3:PVOID Buffer}, ${4:ULONG inLength}); ${5:// ULONG #DISPATCH_LEVEL}
snippet NdisReleaseReadWriteLock
	NdisReleaseReadWriteLock(${1:PNDIS_RW_LOCK ioLock}, ${2:PLOCK_STATE inLockState }); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisRequest
	NdisRequest(${1:PNDIS_STATUS outStatus}, ${2:NDIS_HANDLE inNdisBindingHandle}, ${3:PNDIS_REQUEST inNdisRequest}); ${4:// PNDIS_REQUEST #DISPATCH_LEVEL}
snippet NdisReset
	NdisReset(${1:PNDIS_STATUS outStatus}, ${2:NDIS_HANDLE inNdisBindingHandle}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisResetEvent
	NdisResetEvent(${1:PNDIS_EVENT inEvent}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisRetreatNetBufferDataStart
	NdisRetreatNetBufferDataStart(${1:PNET_BUFFER inNetBuffer}, ${2:ULONG inDataOffsetDelta}, ${3:ULONG inDataBackFill}, ${4:NET_BUFFER_ALLOCATE_MDL_HANDLER inAllocateMdlHandler}); ${5:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisRetreatNetBufferListDataStart
	NdisRetreatNetBufferListDataStart(${1:PNET_BUFFER_LIST inNetBufferList}, ${2:ULONG inDataOffsetDelta}, ${3:ULONG inDataBackFill}, ${4:NET_BUFFER_ALLOCATE_MDL_HANDLER inAllocateMdlHandler}, ${5:NET_BUFFER_FREE_MDL_HANDLER inFreeMdlHandler}); ${6:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisReturnNetBufferLists
	NdisReturnNetBufferLists(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PNET_BUFFER_LIST inNetBufferLists}, ${3:ULONG inReturnFlags}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisReturnPackets
	NdisReturnPackets(${1:inPNDIS_PACKET * PacketsToReturn}, ${2:UINT inNumberOfPackets}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisScheduleWorkItem
	NdisScheduleWorkItem(${1:PNDIS_WORK_ITEM inWorkItem}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisSendNetBufferLists
	NdisSendNetBufferLists(${1:NDIS_HANDLE inNdisBindingHandle}, ${2:PNET_BUFFER_LIST inNetBufferLists}, ${3:NDIS_PORT_NUMBER inPortNumber}, ${4:ULONG inSendFlags}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisSetCoalescableTimerObject
	NdisSetCoalescableTimerObject(${1:NDIS_HANDLE inTimerObject}, ${2:LARGE_INTEGER inDueTime}, ${3:LONG inMillisecondsPeriod}, ${4:PVOID inFunctionContext}, ${5:ULONG inTolerance}); ${6:// BOOLEAN #DISPATCH_LEVEL}
snippet NdisSetEvent
	NdisSetEvent(${1:PNDIS_EVENT inEvent}); ${2:// VOID #DISPATCH_LEVEL}
snippet NdisSetPacketPoolProtocolId
	NdisSetPacketPoolProtocolId(${1:NDIS_HANDLE inPacketPoolHandle}, ${2:UINT inProtocolId}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisSetPacketStatus
	NdisSetPacketStatus(${1:PNDIS_PACKET inPacket}, ${2:NDIS_STATUS inStatus}, ${3:NDIS_HANDLE inHandle}, ${4:ULONG inCode}); ${5:// VOID #DISPATCH_LEVEL}
snippet NdisSetTimer
	NdisSetTimer(${1:PNDIS_TIMER inTimer}, ${2:UINT inMillisecondsToDelay}); ${3:// VOID #DISPATCH_LEVEL}
snippet NdisSetTimerEx
	NdisSetTimerEx(${1:PNDIS_TIMER inNdisTimer}, ${2:UINT inMillisecondsToDelay}, ${3:PVOID inFunctionContext}); ${4:// VOID #DISPATCH_LEVEL}
snippet NdisSetTimerObject
	NdisSetTimerObject(${1:NDIS_HANDLE inTimerObject}, ${2:LARGE_INTEGER inDueTime}, ${3:LONG inMillisecondsPeriod}, ${4:PVOID inFunctionContext }); ${5:// BOOLEAN #DISPATCH_LEVEL}
snippet NdisUnbindAdapter
	NdisUnbindAdapter(${1:NDIS_HANDLE inNdisBindingHandle}); ${2:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisWriteErrorLogEntry
	NdisWriteErrorLogEntry(${1:NDIS_HANDLE inNdisAdapterHandle}, ${2:NDIS_ERROR_CODE inErrorCode}, ${3:ULONG inNumberOfErrorValues}, ${4:...}); ${5:// __cdecl #DISPATCH_LEVEL}
snippet NdisWriteEventLogEntry
	NdisWriteEventLogEntry(${1:PVOID inLogHandle}, ${2:NDIS_STATUS inEventCode}, ${3:ULONG inUniqueEventValue}, ${4:USHORT inNumStrings}, ${5:PVOID inStringsList}, ${6:ULONG inDataSize}, ${7:PVOID inData }); ${8:// NDIS_STATUS #DISPATCH_LEVEL}
snippet NdisWritePciSlotInformation
	NdisWritePciSlotInformation(${1:NDIS_HANDLE inNdisAdapterHandle}, ${2:ULONG inSlotNumber}, ${3:ULONG inOffset}, ${4:PVOID Buffer}, ${5:ULONG inLength}); ${6:// ULONG #DISPATCH_LEVEL}
snippet NdisWritePcmciaAttributeMemory
	NdisWritePcmciaAttributeMemory(${1:NDIS_HANDLE inNdisAdapterHandle}, ${2:ULONG inOffset}, ${3:PVOID Buffer}, ${4:ULONG inLength}); ${5:// ULONG #DISPATCH_LEVEL}
snippet NewIrql
	NewIrql(${1:cl}); ${2:// UCHAR #HIGH_LEVEL}
snippet NtClose
	NtClose(${1:HANDLE inHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet NtCommitComplete
	NtCommitComplete(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtCommitEnlistment
	NtCommitEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtCommitTransaction
	NtCommitTransaction(${1:HANDLE inTransactionHandle}, ${2:BOOLEAN inWait}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtCreateEnlistment
	NtCreateEnlistment(${1:PHANDLE outEnlistmentHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inResourceManagerHandle}, ${4:HANDLE inTransactionHandle}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}, ${6:ULONG inCreateOptions}, ${7:NOTIFICATION_MASK inNotificationMask}, ${8:PVOID inEnlistmentKey}); ${9:// NTSTATUS #APC_LEVEL}
snippet NtCreateResourceManager
	NtCreateResourceManager(${1:PHANDLE outResourceManagerHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inTmHandle}, ${4:LPGUID inRmGuid}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}, ${6:ULONG inCreateOptions}, ${7:PUNICODE_STRING inDescription}); ${8:// NTSTATUS #APC_LEVEL}
snippet NtCreateTransaction
	NtCreateTransaction(${1:PHANDLE outTransactionHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:LPGUID inUow}, ${5:HANDLE inTmHandle}, ${6:ULONG inCreateOptions}, ${7:ULONG inIsolationLevel}, ${8:ULONG inIsolationFlags}, ${9:PLARGE_INTEGER inTimeout}, ${10:PUNICODE_STRING inDescription}); ${11:// NTSTATUS #APC_LEVEL}
snippet NtCreateTransactionManager
	NtCreateTransactionManager(${1:PHANDLE outTmHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PUNICODE_STRING inLogFileName}, ${5:ULONG inCreateOptions}, ${6:ULONG inCommitStrength}); ${7:// NTSTATUS #APC_LEVEL}
snippet NtEnumerateTransactionObject
	NtEnumerateTransactionObject(${1:HANDLE inRootObjectHandle}, ${2:KTMOBJECT_TYPE inQueryType},  ${3:PKTMOBJECT_CURSOR ObjectCursor}, ${4:ULONG inObjectCursorLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtGetDevicePowerState
	NtGetDevicePowerState(${1:HANDLE inDevice}, ${2:PDEVICE_POWER_STATE outState}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtGetNotificationResourceManager
	NtGetNotificationResourceManager(${1:HANDLE inResourceManagerHandle}, ${2:PTRANSACTION_NOTIFICATION outTransactionNotification}, ${3:ULONG inNotificationLength}, ${4:PLARGE_INTEGER inTimeout}, ${5:PULONG outReturnLength}, ${6:ULONG inAsynchronous}, ${7:ULONG_PTR inAsynchronousContext}); ${8:// NTSTATUS #APC_LEVEL}
snippet NtInitiatePowerAction
	NtInitiatePowerAction(${1:POWER_ACTION inSystemAction}, ${2:SYSTEM_POWER_STATE inLightestSystemState}, ${3:ULONG inFlags}, ${4:# POWER_ACTION_xxx flags BOOLEAN inAsynchronous}); ${5:// NTSTATUS //APC_LEVEL}
snippet NtIsSystemResumeAutomatic
	NtIsSystemResumeAutomatic(${1:VOID}); ${2:// BOOLEAN #APC_LEVEL}
snippet NtOpenEnlistment
	NtOpenEnlistment(${1:PHANDLE outEnlistmentHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inResourceManagerHandle}, ${4:LPGUID inEnlistmentGuid}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtOpenResourceManager
	NtOpenResourceManager(${1:PHANDLE outResourceManagerHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inTmHandle}, ${4:LPGUID inResourceManagerGuid}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtOpenTransaction
	NtOpenTransaction(${1:PHANDLE outTransactionHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:LPGUID inUow}, ${5:HANDLE inTmHandle}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtOpenTransactionManager
	NtOpenTransactionManager(${1:PHANDLE outTmHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PUNICODE_STRING inLogFileName}, ${5:LPGUID inTmIdentity}, ${6:ULONG inOpenOptions}); ${7:// NTSTATUS #APC_LEVEL}
snippet NtPowerInformation
	NtPowerInformation(${1:POWER_INFORMATION_LEVEL inInformationLevel}, ${2:PVOID inInputBuffer}, ${3:ULONG inInputBufferLength}, ${4:PVOID outOutputBuffer}, ${5:ULONG inOutputBufferLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtPrePrepareComplete
	NtPrePrepareComplete(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtPrePrepareEnlistment
	NtPrePrepareEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtPrepareComplete
	NtPrepareComplete(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtPrepareEnlistment
	NtPrepareEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtPropagationComplete
	NtPropagationComplete(${1:HANDLE inResourceManagerHandle}, ${2:ULONG inRequestCookie}, ${3:ULONG inBufferLength}, ${4:PVOID inBuffer}); ${5:// NTSTATUS #APC_LEVEL}
snippet NtPropagationFailed
	NtPropagationFailed(${1:HANDLE inResourceManagerHandle}, ${2:ULONG inRequestCookie}, ${3:NTSTATUS inPropStatus}); ${4:// NTSTATUS #APC_LEVEL}
snippet NtQueryInformationEnlistment
	NtQueryInformationEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:ENLISTMENT_INFORMATION_CLASS inEnlistmentInformationClass}, ${3:PVOID EnlistmentInformation}, ${4:ULONG inEnlistmentInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtQueryInformationResourceManager
	NtQueryInformationResourceManager(${1:HANDLE inResourceManagerHandle}, ${2:RESOURCEMANAGER_INFORMATION_CLASS inResourceManagerInformationClass}, ${3:PVOID ResourceManagerInformation}, ${4:ULONG inResourceManagerInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtQueryInformationTransaction
	NtQueryInformationTransaction(${1:HANDLE inTransactionHandle}, ${2:TRANSACTION_INFORMATION_CLASS inTransactionInformationClass}, ${3:PVOID TransactionInformation}, ${4:ULONG inTransactionInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtQueryInformationTransactionManager
	NtQueryInformationTransactionManager(${1:HANDLE inTransactionManagerHandle}, ${2:TRANSACTIONMANAGER_INFORMATION_CLASS inTransactionManagerInformationClass}, ${3:PVOID TransactionManagerInformation}, ${4:ULONG inTransactionManagerInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtQueryObject
	NtQueryObject(${1:HANDLE inHandle}, ${2:OBJECT_INFORMATION_CLASS inObjectInformationClass}, ${3:PVOID outObjectInformation}, ${4:ULONG inObjectInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet NtQuerySecurityObject
	NtQuerySecurityObject(${1:HANDLE inHandle}, ${2:SECURITY_INFORMATION inSecurityInformation}, ${3:PSECURITY_DESCRIPTOR outSecurityDescriptor}, ${4:ULONG inLength}, ${5:PULONG outLengthNeeded}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet NtReadOnlyEnlistment
	NtReadOnlyEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtRecoverEnlistment
	NtRecoverEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PVOID inEnlistmentKey}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtRecoverResourceManager
	NtRecoverResourceManager(${1:HANDLE inResourceManagerHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet NtRecoverTransactionManager
	NtRecoverTransactionManager(${1:HANDLE inTransactionManagerHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet NtRegisterProtocolAddressInformation
	NtRegisterProtocolAddressInformation(${1:HANDLE inResourceManager}, ${2:PCRM_PROTOCOL_ID inProtocolId}, ${3:ULONG inProtocolInformationSize}, ${4:PVOID inProtocolInformation}, ${5:ULONG inCreateOptions}); ${6:// NTSTATUS #APC_LEVEL}
snippet NtRenameTransactionManager
	NtRenameTransactionManager(${1:PUNICODE_STRING inLogFileName}, ${2:LPGUID inExistingTransactionManagerGuid}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtRollbackComplete
	NtRollbackComplete(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtRollbackEnlistment
	NtRollbackEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtRollbackTransaction
	NtRollbackTransaction(${1:HANDLE inTransactionHandle}, ${2:BOOLEAN inWait}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtRollforwardTransactionManager
	NtRollforwardTransactionManager(${1:HANDLE inTransactionManagerHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet NtSetInformationEnlistment
	NtSetInformationEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:ENLISTMENT_INFORMATION_CLASS inEnlistmentInformationClass}, ${3:PVOID EnlistmentInformation}, ${4:ULONG inEnlistmentInformationLength}); ${5:// NTSTATUS #APC_LEVEL}
snippet NtSetInformationResourceManager
	NtSetInformationResourceManager(${1:HANDLE inResourceManagerHandle}, ${2:RESOURCEMANAGER_INFORMATION_CLASS inResourceManagerInformationClass}, ${3:PVOID ResourceManagerInformation}, ${4:ULONG inResourceManagerInformationLength}); ${5:// NTSTATUS #APC_LEVEL}
snippet NtSetInformationTransaction
	NtSetInformationTransaction(${1:HANDLE inTransactionHandle}, ${2:TRANSACTION_INFORMATION_CLASS inTransactionInformationClass}, ${3:PVOID TransactionInformation}, ${4:ULONG inTransactionInformationLength}); ${5:// NTSTATUS #APC_LEVEL}
snippet NtSetInformationTransactionManager
	NtSetInformationTransactionManager(${1:HANDLE inTmHandle}, ${2:TRANSACTIONMANAGER_INFORMATION_CLASS inTransactionManagerInformationClass}, ${3:PVOID TransactionManagerInformation}, ${4:ULONG inTransactionManagerInformationLength}); ${5:// NTSTATUS #APC_LEVEL}
snippet NtSetSecurityObject
	NtSetSecurityObject(${1:HANDLE inHandle}, ${2:SECURITY_INFORMATION inSecurityInformation}, ${3:PSECURITY_DESCRIPTOR inSecurityDescriptor}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet NtSetSystemPowerState
	NtSetSystemPowerState(${1:POWER_ACTION inSystemAction}, ${2:SYSTEM_POWER_STATE inLightestSystemState}, ${3:ULONG inFlags # POWER_ACTION_xxx flags}); ${4:// NTSTATUS //APC_LEVEL}
snippet NtSetThreadExecutionState
	NtSetThreadExecutionState(${1:EXECUTION_STATE inNewFlags}, ${2:# ES_xxx flags PEXECUTION_STATE outPreviousFlags}); ${3:// NTSTATUS //APC_LEVEL}
snippet NtSinglePhaseReject
	NtSinglePhaseReject(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet ObGetObjectSecurity
	ObGetObjectSecurity(${1:PVOID inObject}, ${2:PSECURITY_DESCRIPTOR out*SecurityDescriptor}, ${3:PBOOLEAN outMemoryAllocated}); ${4:// NTSTATUS #APC_LEVEL}
snippet ObReferenceObjectByHandle
	ObReferenceObjectByHandle(${1:HANDLE inHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_TYPE inObjectType}, ${4:KPROCESSOR_MODE inAccessMode}, ${5:PVOID out*Object}, ${6:POBJECT_HANDLE_INFORMATION outHandleInformation}); ${7:// NTSTATUS #APC_LEVEL}
snippet ObReferenceObjectByHandleWithTag
	ObReferenceObjectByHandleWithTag(${1:HANDLE inHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_TYPE inObjectType}, ${4:KPROCESSOR_MODE inAccessMode}, ${5:ULONG inTag}, ${6:PVOID out*Object}, ${7:POBJECT_HANDLE_INFORMATION outHandleInformation}); ${8:// NTSTATUS #APC_LEVEL}
snippet ObReferenceObjectByPointer
	ObReferenceObjectByPointer(${1:PVOID inObject}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_TYPE inObjectType}, ${4:KPROCESSOR_MODE inAccessMode}); ${5:// NTSTATUS #DISPATCH_LEVEL}
snippet ObReferenceObjectByPointerWithTag
	ObReferenceObjectByPointerWithTag(${1:PVOID inObject}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_TYPE inObjectType}, ${4:KPROCESSOR_MODE inAccessMode}, ${5:ULONG inTag}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet ObReleaseObjectSecurity
	ObReleaseObjectSecurity(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}, ${2:BOOLEAN inMemoryAllocated}); ${3:// VOID #APC_LEVEL}
snippet ObfDereferenceObject
	ObfDereferenceObject(${1:PVOID inObject}); ${2:// FASTCALL #DISPATCH_LEVEL}
snippet ObfDereferenceObjectWithTag
	ObfDereferenceObjectWithTag(${1:PVOID inObject}, ${2:ULONG inTag}); ${3:// FASTCALL #DISPATCH_LEVEL}
snippet ObfReferenceObject
	ObfReferenceObject(${1:PVOID inObject}); ${2:// FASTCALL #DISPATCH_LEVEL}
snippet ObfReferenceObjectWithTag
	ObfReferenceObjectWithTag(${1:PVOID inObject}, ${2:ULONG inTag}); ${3:// FASTCALL #DISPATCH_LEVEL}
snippet PCI_EXPRESS_ENTER_LINK_QUIESCENT_MODE
	PCI_EXPRESS_ENTER_LINK_QUIESCENT_MODE(${1:PVOID ioContext}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet PCI_EXPRESS_EXIT_LINK_QUIESCENT_MODE
	PCI_EXPRESS_EXIT_LINK_QUIESCENT_MODE(${1:PVOID ioContext}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet PCI_IS_DEVICE_PRESENT
	PCI_IS_DEVICE_PRESENT(${1:USHORT inVendorID}, ${2:USHORT inDeviceID}, ${3:UCHAR inRevisionID}, ${4:USHORT inSubVendorID}, ${5:USHORT inSubSystemID}, ${6:ULONG inFlags}); ${7:// BOOLEAN #PASSIVE_LEVEL}
snippet PCI_IS_DEVICE_PRESENT_EX
	PCI_IS_DEVICE_PRESENT_EX(${1:PVOID inContext}, ${2:PPCI_DEVICE_PRESENCE_PARAMETERS inParameters}); ${3:// BOOLEAN #PASSIVE_LEVEL}
snippet PcRegisterIoTimeout
	PcRegisterIoTimeout(${1:PDEVICE_OBJECT inpDeviceObject}, ${2:PIO_TIMER_ROUTINE inpTimerRoutine}, ${3:PVOID inpContext}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet PcwAddInstance
	PcwAddInstance(${1:PPCW_BUFFER inBuffer}, ${2:PCUNICODE_STRING inName}, ${3:ULONG inId}, ${4:ULONG inCount}, ${5:PPCW_DATA Data}); ${6:// NTSTATUS #APC_LEVEL}
snippet PcwCloseInstance
	PcwCloseInstance(${1:PPCW_INSTANCE inInstance}); ${2:// VOID #APC_LEVEL}
snippet PcwCreateInstance
	PcwCreateInstance(${1:PPCW_INSTANCE *Instance}, ${2:PPCW_REGISTRATION inRegistration}, ${3:PCUNICODE_STRING inName}, ${4:ULONG inCount}, ${5:PPCW_DATA Data}); ${6:// NTSTATUS #APC_LEVEL}
snippet PcwRegister
	PcwRegister(${1:PPCW_REGISTRATION *Registration}, ${2:PPCW_REGISTRATION_INFORMATION inInfo}); ${3:// NTSTATUS #APC_LEVEL}
snippet PcwUnregister
	PcwUnregister(${1:PPCW_REGISTRATION inRegistration}); ${2:// VOID #APC_LEVEL}
snippet PfxFindPrefix
	PfxFindPrefix(${1:PPREFIX_TABLE inPrefixTable}, ${2:PSTRING inFullName}); ${3:// PPREFIX_TABLE_ENTRY #PASSIVE_LEVEL}
snippet PfxInitialize
	PfxInitialize(${1:PPREFIX_TABLE outPrefixTable}); ${2:// VOID #PASSIVE_LEVEL}
snippet PfxInsertPrefix
	PfxInsertPrefix(${1:PPREFIX_TABLE inPrefixTable}, ${2:PSTRING inPrefix}, ${3:PPREFIX_TABLE_ENTRY outPrefixTableEntry}); ${4:// BOOLEAN #PASSIVE_LEVEL}
snippet PfxRemovePrefix
	PfxRemovePrefix(${1:PPREFIX_TABLE inPrefixTable}, ${2:PPREFIX_TABLE_ENTRY inPrefixTableEntry}); ${3:// VOID #PASSIVE_LEVEL}
snippet PoCallDriver
	PoCallDriver(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP ioIrp}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet PoClearPowerRequest
	PoClearPowerRequest(${1:PVOID ioPowerRequest}, ${2:POWER_REQUEST_TYPE inType}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet PoCreatePowerRequest
	PoCreatePowerRequest(${1:PVOID *PowerRequest}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PCOUNTED_REASON_CONTEXT inContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet PoDeletePowerRequest
	PoDeletePowerRequest(${1:PVOID ioPowerRequest}); ${2:// VOID #APC_LEVEL}
snippet PoGetSystemWake
	PoGetSystemWake(${1:PIRP inIrp}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet PoQueryWatchdogTime
	PoQueryWatchdogTime(${1:PDEVICE_OBJECT inPdo}, ${2:PULONG outSecondsRemaining}); ${3:// BOOLEAN #DISPATCH_LEVEL}
snippet PoQueueShutdownWorkItem
	PoQueueShutdownWorkItem(${1:PWORK_QUEUE_ITEM ioWorkItem}); ${2:// NTSTATUS #APC_LEVEL}
snippet PoRegisterDeviceForIdleDetection
	PoRegisterDeviceForIdleDetection(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inConservationIdleTime}, ${3:ULONG inPerformanceIdleTime}, ${4:DEVICE_POWER_STATE inState}); ${5:// PULONG #APC_LEVEL}
snippet PoRegisterPowerSettingCallback
	PoRegisterPowerSettingCallback(${1:PDEVICE_OBJECT inDeviceObject}, ${2:LPCGUID inSettingGuid}, ${3:PPOWER_SETTING_CALLBACK inCallback}, ${4:PVOID inContext}, ${5:PVOID *Handle}); ${6:// NTSTATUS #APC_LEVEL}
snippet PoRegisterSystemState
	PoRegisterSystemState(${1:PVOID StateHandle}, ${2:EXECUTION_STATE inFlags}); ${3:// PVOID #APC_LEVEL}
snippet PoRequestPowerIrp
	PoRequestPowerIrp(${1:PDEVICE_OBJECT inDeviceObject}, ${2:UCHAR inMinorFunction}, ${3:POWER_STATE inPowerState}, ${4:PREQUEST_POWER_COMPLETE inCompletionFunction}, ${5:PVOID inContext}, ${6:PIRP *Irp}); ${7:// NTSTATUS #DISPATCH_LEVEL}
snippet PoSetPowerRequest
	PoSetPowerRequest(${1:PVOID ioPowerRequest}, ${2:POWER_REQUEST_TYPE inType}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet PoSetPowerState
	PoSetPowerState(${1:PDEVICE_OBJECT inDeviceObject}, ${2:POWER_STATE_TYPE inType}, ${3:POWER_STATE inState}); ${4:// POWER_STATE #APC_LEVEL}
snippet PoSetSystemState
	PoSetSystemState(${1:EXECUTION_STATE inFlags}); ${2:// VOID #DISPATCH_LEVEL}
snippet PoSetSystemWake
	PoSetSystemWake(${1:PIRP ioIrp}); ${2:// VOID #DISPATCH_LEVEL}
snippet PoStartNextPowerIrp
	PoStartNextPowerIrp(${1:PIRP ioIrp}); ${2:// VOID #DISPATCH_LEVEL}
snippet PoUnregisterPowerSettingCallback
	PoUnregisterPowerSettingCallback(${1:PVOID ioHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet PoUnregisterSystemState
	PoUnregisterSystemState(${1:PVOID ioStateHandle}); ${2:// VOID #APC_LEVEL}
snippet ProbeForRead
	ProbeForRead(${1:PVOID Address}, ${2:SIZE_T inLength}, ${3:ULONG inAlignment}); ${4:// VOID #APC_LEVEL}
snippet ProbeForWrite
	ProbeForWrite(${1: PVOID Address}, ${2:SIZE_T inLength}, ${3:ULONG inAlignment}); ${4:// VOID #APC_LEVEL}
snippet PsAssignImpersonationToken
	PsAssignImpersonationToken(${1:PETHREAD inThread}, ${2:HANDLE inToken}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet PsChargePoolQuota
	PsChargePoolQuota(${1:PEPROCESS inProcess}, ${2:POOL_TYPE inPoolType}, ${3:ULONG_PTR inAmount}); ${4:// VOID #APC_LEVEL}
snippet PsChargeProcessPoolQuota
	PsChargeProcessPoolQuota(${1:PEPROCESS inProcess}, ${2:POOL_TYPE inPoolType}, ${3:ULONG_PTR inAmount}); ${4:// NTSTATUS #APC_LEVEL}
snippet PsCreateSystemThread
	PsCreateSystemThread(${1:PHANDLE outThreadHandle}, ${2:ULONG inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:HANDLE inProcessHandle}, ${5:PCLIENT_ID outClientId}, ${6:PKSTART_ROUTINE inStartRoutine}, ${7:PVOID inStartContext}); ${8:// ) NTSTATUS #APC_LEVEL}
snippet PsDereferenceImpersonationToken
	PsDereferenceImpersonationToken(${1:PACCESS_TOKEN inImpersonationToken}); ${2:// VOID #PASSIVE_LEVEL}
snippet PsDereferencePrimaryToken
	PsDereferencePrimaryToken(${1:PACCESS_TOKEN inPrimaryToken}); ${2:// VOID #PASSIVE_LEVEL}
snippet PsDisableImpersonation
	PsDisableImpersonation(${1:PETHREAD ioThread}, ${2:PSE_IMPERSONATION_STATE ioImpersonationState}); ${3:// BOOLEAN #PASSIVE_LEVEL}
snippet PsGetCurrentThread
	PsGetCurrentThread(${1:VOID}); ${2:// PETHREAD #DISPATCH_LEVEL}
snippet PsGetCurrentThreadId
	PsGetCurrentThreadId(${1:VOID}); ${2:// HANDLE #DISPATCH_LEVEL}
snippet PsGetProcessCreateTimeQuadPart
	PsGetProcessCreateTimeQuadPart(${1:PEPROCESS inProcess}); ${2:// LONGLONG #DISPATCH_LEVEL}
snippet PsGetProcessExitTime
	PsGetProcessExitTime(${1:VOID}); ${2:// LARGE_INTEGER #APC_LEVEL}
snippet PsGetProcessId
	PsGetProcessId(${1:PEPROCESS inProcess}); ${2:// HANDLE #DISPATCH_LEVEL}
snippet PsGetThreadId
	PsGetThreadId(${1:PETHREAD inThread}); ${2:// HANDLE #DISPATCH_LEVEL}
snippet PsGetVersion
	PsGetVersion(${1:PULONG outMajorVersion}, ${2:PULONG outMinorVersion}, ${3:PULONG outBuildNumber}, ${4:PUNICODE_STRING outCSDVersion}); ${5:// BOOLEAN #PASSIVE_LEVEL}
snippet PsImpersonateClient
	PsImpersonateClient(${1:PETHREAD ioThread}, ${2:PACCESS_TOKEN inToken}, ${3:BOOLEAN inCopyOnOpen}, ${4:BOOLEAN inEffectiveOnly}, ${5:SECURITY_IMPERSONATION_LEVEL inImpersonationLevel}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet PsIsCurrentThreadPrefetching
	PsIsCurrentThreadPrefetching(${1:VOID}); ${2:// BOOLEAN #APC_LEVEL}
snippet PsIsThreadTerminating
	PsIsThreadTerminating(${1:PETHREAD inThread}); ${2:// BOOLEAN #DISPATCH_LEVEL}
snippet PsLookupProcessByProcessId
	PsLookupProcessByProcessId(${1:HANDLE inProcessId}, ${2:PEPROCESS *Process}); ${3:// NTSTATUS #APC_LEVEL}
snippet PsLookupThreadByThreadId
	PsLookupThreadByThreadId(${1:HANDLE inThreadId}, ${2:PETHREAD *Thread}); ${3:// NTSTATUS #APC_LEVEL}
snippet PsReferenceImpersonationToken
	PsReferenceImpersonationToken(${1:PETHREAD ioThread}, ${2:PBOOLEAN outCopyOnOpen}, ${3:PBOOLEAN outEffectiveOnly}, ${4:PSECURITY_IMPERSONATION_LEVEL outImpersonationLevel}); ${5:// PACCESS_TOKEN #APC_LEVEL}
snippet PsReferencePrimaryToken
	PsReferencePrimaryToken(${1:PEPROCESS ioProcess}); ${2:// PACCESS_TOKEN #PASSIVE_LEVEL}
snippet PsRemoveLoadImageNotifyRoutine
	PsRemoveLoadImageNotifyRoutine(${1:PLOAD_IMAGE_NOTIFY_ROUTINE inNotifyRoutine}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet PsRestoreImpersonation
	PsRestoreImpersonation(${1:PETHREAD ioThread}, ${2:PSE_IMPERSONATION_STATE inImpersonationState}); ${3:// VOID #PASSIVE_LEVEL}
snippet PsReturnPoolQuota
	PsReturnPoolQuota(${1:PEPROCESS inProcess}, ${2:POOL_TYPE inPoolType}, ${3:ULONG_PTR inAmount}); ${4:// VOID #APC_LEVEL}
snippet PsRevertToSelf
	PsRevertToSelf(${1:VOID}); ${2:// VOID #PASSIVE_LEVEL}
snippet PsSetCreateProcessNotifyRoutine
	PsSetCreateProcessNotifyRoutine(${1:PCREATE_PROCESS_NOTIFY_ROUTINE inNotifyRoutine}, ${2:BOOLEAN inRemove}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet PsSetCreateProcessNotifyRoutineEx
	PsSetCreateProcessNotifyRoutineEx(${1:PCREATE_PROCESS_NOTIFY_ROUTINE_EX inNotifyRoutine}, ${2:BOOLEAN inRemove}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet PsSetCreateThreadNotifyRoutine
	PsSetCreateThreadNotifyRoutine(${1:PCREATE_THREAD_NOTIFY_ROUTINE inNotifyRoutine}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet PsSetCurrentThreadPrefetching
	PsSetCurrentThreadPrefetching(${1:BOOLEAN inPrefetching}); ${2:// BOOLEAN #APC_LEVEL}
snippet PsSetLoadImageNotifyRoutine
	PsSetLoadImageNotifyRoutine(${1:PLOAD_IMAGE_NOTIFY_ROUTINE inNotifyRoutine}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet PsTerminateSystemThread
	PsTerminateSystemThread(${1:NTSTATUS inExitStatus}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet PshedAllocateMemory
	PshedAllocateMemory(${1:ULONG inSize}); ${2:// PVOID #DISPATCH_LEVEL}
snippet PshedFreeMemory
	PshedFreeMemory(${1:PVOID inAddress}); ${2:// VOID #DISPATCH_LEVEL}
snippet PshedRegisterPlugin
	PshedRegisterPlugin(${1:PWHEA_PSHED_PLUGIN_REGISTRATION_PACKET ioPacket}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet RTL_ALLOCATE_STRING_ROUTINE
	RTL_ALLOCATE_STRING_ROUTINE(${1:SIZE_T inNumberOfBytes}); ${2:// PVOID #PASSIVE_LEVEL}
snippet RTL_FREE_STRING_ROUTINE
	RTL_FREE_STRING_ROUTINE(${1:PVOID inBuffer}); ${2:// VOID #PASSIVE_LEVEL}
snippet RTL_QUERY_REGISTRY_ROUTINE
	RTL_QUERY_REGISTRY_ROUTINE(${1:PWSTR inValueName}, ${2:ULONG inValueType}, ${3:PVOID inValueData}, ${4:ULONG inValueLength}, ${5:PVOID inContext}, ${6:PVOID inEntryContext}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet RTL_REALLOCATE_STRING_ROUTINE
	RTL_REALLOCATE_STRING_ROUTINE(${1:SIZE_T inNumberOfBytes}, ${2:PVOID inBuffer}); ${3:// PVOID #PASSIVE_LEVEL}
snippet RegisterOpRegionHandler
	RegisterOpRegionHandler(${1:PDEVICE_OBJECT inDeviceObject}, ${2:ULONG inAccessType}, ${3:ULONG inRegionSpace}, ${4:PACPI_OP_REGION_HANDLER inHandler}, ${5:PVOID inContext}, ${6:ULONG inFlags}, ${7:PVOID out*OperationRegionObject}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlAbsoluteToSelfRelativeSD
	RtlAbsoluteToSelfRelativeSD(${1:PSECURITY_DESCRIPTOR inAbsoluteSecurityDescriptor}, ${2:PSECURITY_DESCRIPTOR outSelfRelativeSecurityDescriptor}, ${3:PULONG ioBufferLength}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlAddAccessAllowedAce
	RtlAddAccessAllowedAce(${1:PACL ioAcl}, ${2:ULONG inAceRevision}, ${3:ACCESS_MASK inAccessMask}, ${4:PSID inSid}); ${5:// NTSTATUS #APC_LEVEL}
snippet RtlAddAccessAllowedAceEx
	RtlAddAccessAllowedAceEx(${1:PACL ioAcl}, ${2:ULONG inAceRevision}, ${3:ULONG inAceFlags}, ${4:ACCESS_MASK inAccessMask}, ${5:PSID inSid}); ${6:// NTSTATUS #APC_LEVEL}
snippet RtlAddAce
	RtlAddAce(${1:PACL ioAcl}, ${2:ULONG inAceRevision}, ${3:ULONG inStartingAceIndex}, ${4:PVOID AceList}, ${5:ULONG inAceListLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet RtlAnsiStringToUnicodeString
	RtlAnsiStringToUnicodeString(${1:PUNICODE_STRING DestinationString}, ${2:PCANSI_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlAppendStringToString
	RtlAppendStringToString(${1:PSTRING ioDestination}, ${2:const inSTRING * Source}); ${3:// NTSTATUS #APC_LEVEL}
snippet RtlCharToInteger
	RtlCharToInteger(${1:PCSZ inString}, ${2:ULONG inBase}, ${3:PULONG outValue}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlCheckRegistryKey
	RtlCheckRegistryKey(${1:ULONG inRelativeTo}, ${2:PWSTR inPath}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlCompareString
	RtlCompareString(${1:const inSTRING * String1}, ${2:const inSTRING * String2}, ${3:BOOLEAN inCaseInSensitive}); ${4:// LONG #PASSIVE_LEVEL}
snippet RtlCompareUnicodeString
	RtlCompareUnicodeString(${1:PCUNICODE_STRING inString1}, ${2:PCUNICODE_STRING inString2}, ${3:BOOLEAN inCaseInSensitive}); ${4:// LONG #PASSIVE_LEVEL}
snippet RtlCompareUnicodeStrings
	RtlCompareUnicodeStrings(${1:PCWCH String1}, ${2:SIZE_T inString1Length}, ${3:PCWCH String2}, ${4:SIZE_T inString2Length}, ${5:BOOLEAN inCaseInSensitive}); ${6:// LONG #PASSIVE_LEVEL}
snippet RtlCompressChunks
	RtlCompressChunks(${1:PUCHAR UncompressedBuffer}, ${2:ULONG inUncompressedBufferSize}, ${3:PUCHAR CompressedBuffer}, ${4:ULONG CompressedBufferSize},  ${5:PCOMPRESSED_DATA_INFO CompressedDataInfo}, ${6:ULONG CompressedDataInfoLength}, ${7:PVOID inWorkSpace}); ${8:// NTSTATUS #APC_LEVEL}
snippet RtlConvertSidToUnicodeString
	RtlConvertSidToUnicodeString(${1:PUNICODE_STRING ioUnicodeString}, ${2:PSID inSid}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlCopyLuid
	RtlCopyLuid(${1:PLUID outDestinationLuid}, ${2:PLUID inSourceLuid}); ${3:// VOID #APC_LEVEL}
snippet RtlCopySid
	RtlCopySid(${1:ULONG inDestinationSidLength}, ${2:PSID DestinationSid}, ${3:PSID inSourceSid}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlCreateAcl
	RtlCreateAcl(${1:PACL Acl}, ${2:ULONG inAclLength}, ${3:ULONG inAclRevision}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlCreateRegistryKey
	RtlCreateRegistryKey(${1:ULONG inRelativeTo}, ${2:PWSTR inPath}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlCreateSecurityDescriptor
	RtlCreateSecurityDescriptor(${1:PSECURITY_DESCRIPTOR outSecurityDescriptor}, ${2:ULONG inRevision}); ${3:// NTSTATUS #APC_LEVEL}
snippet RtlCreateSecurityDescriptorRelative
	RtlCreateSecurityDescriptorRelative(${1:PISECURITY_DESCRIPTOR_RELATIVE outSecurityDescriptor}, ${2:ULONG inRevision}); ${3:// NTSTATUS #APC_LEVEL}
snippet RtlCreateSystemVolumeInformationFolder
	RtlCreateSystemVolumeInformationFolder(${1:PCUNICODE_STRING inVolumeRootPath}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlCreateUnicodeString
	RtlCreateUnicodeString(${1:PUNICODE_STRING outDestinationString}, ${2:PCWSTR inSourceString}); ${3:// BOOLEAN #APC_LEVEL}
snippet RtlCustomCPToUnicodeN
	RtlCustomCPToUnicodeN(${1:PCPTABLEINFO inCustomCP}, ${2:PWCH UnicodeString}, ${3:ULONG inMaxBytesInUnicodeString}, ${4:PULONG outBytesInUnicodeString}, ${5:PCH CustomCPString}, ${6:ULONG inBytesInCustomCPString}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlDecompressBuffer
	RtlDecompressBuffer(${1:USHORT inCompressionFormat}, ${2:PUCHAR UncompressedBuffer}, ${3:ULONG inUncompressedBufferSize}, ${4:PUCHAR CompressedBuffer}, ${5:ULONG inCompressedBufferSize}, ${6:PULONG outFinalUncompressedSize}); ${7:// NTSTATUS #APC_LEVEL}
snippet RtlDecompressChunks
	RtlDecompressChunks(${1:PUCHAR UncompressedBuffer}, ${2:ULONG inUncompressedBufferSize}, ${3:PUCHAR CompressedBuffer}, ${4:ULONG inCompressedBufferSize}, ${5:PUCHAR CompressedTail}, ${6:ULONG inCompressedTailSize}, ${7:PCOMPRESSED_DATA_INFO inCompressedDataInfo}); ${8:// NTSTATUS #APC_LEVEL}
snippet RtlDecompressFragment
	RtlDecompressFragment(${1:USHORT inCompressionFormat}, ${2:PUCHAR UncompressedFragment}, ${3:ULONG inUncompressedFragmentSize}, ${4:PUCHAR CompressedBuffer}, ${5:ULONG inCompressedBufferSize}, ${6:ULONG FragmentOffset}, ${7:PULONG outFinalUncompressedSize}, ${8:PVOID inWorkSpace}); ${9:// NTSTATUS #APC_LEVEL}
snippet RtlDeleteAce
	RtlDeleteAce(${1:PACL ioAcl}, ${2:ULONG inAceIndex}); ${3:// NTSTATUS #APC_LEVEL}
snippet RtlDeleteRegistryValue
	RtlDeleteRegistryValue(${1:ULONG inRelativeTo}, ${2:PCWSTR inPath}, ${3:PCWSTR inValueName}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlDescribeChunk
	RtlDescribeChunk(${1:USHORT inCompressionFormat}, ${2:ioPUCHAR *CompressedBuffer}, ${3:PUCHAR inEndOfCompressedBufferPlus1}, ${4:PUCHAR out*ChunkBuffer}, ${5:PULONG outChunkSize}); ${6:// NTSTATUS #APC_LEVEL}
snippet RtlDowncaseUnicodeChar
	RtlDowncaseUnicodeChar(${1:WCHAR inSourceCharacter}); ${2:// WCHAR #PASSIVE_LEVEL}
snippet RtlDowncaseUnicodeString
	RtlDowncaseUnicodeString(${1:PUNICODE_STRING DestinationString}, ${2:PCUNICODE_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlDuplicateUnicodeString
	RtlDuplicateUnicodeString(${1:ULONG inFlags}, ${2:PCUNICODE_STRING inStringIn}, ${3:PUNICODE_STRING outStringOut}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlEqualPrefixSid
	RtlEqualPrefixSid(${1:PSID inSid1}, ${2:PSID inSid2}); ${3:// BOOLEAN #APC_LEVEL}
snippet RtlEqualString
	RtlEqualString(${1:const inSTRING * String1}, ${2:const inSTRING * String2}, ${3:BOOLEAN inCaseInSensitive}); ${4:// BOOLEAN #PASSIVE_LEVEL}
snippet RtlEqualUnicodeString
	RtlEqualUnicodeString(${1:PCUNICODE_STRING inString1}, ${2:PCUNICODE_STRING inString2}, ${3:BOOLEAN inCaseInSensitive}); ${4:// BOOLEAN #PASSIVE_LEVEL}
snippet RtlFindUnicodePrefix
	RtlFindUnicodePrefix(${1:PUNICODE_PREFIX_TABLE inPrefixTable}, ${2:PCUNICODE_STRING inFullName}, ${3:ULONG inCaseInsensitiveIndex}); ${4:// PUNICODE_PREFIX_TABLE_ENTRY #PASSIVE_LEVEL}
snippet RtlFreeAnsiString
	RtlFreeAnsiString(${1:PANSI_STRING ioAnsiString}); ${2:// VOID #PASSIVE_LEVEL}
snippet RtlFreeOemString
	RtlFreeOemString(${1:POEM_STRING ioOemString}); ${2:// VOID #PASSIVE_LEVEL}
snippet RtlFreeUnicodeString
	RtlFreeUnicodeString(${1:PUNICODE_STRING ioUnicodeString}); ${2:// VOID #PASSIVE_LEVEL}
snippet RtlGUIDFromString
	RtlGUIDFromString(${1:PCUNICODE_STRING inGuidString}, ${2:GUIDout* Guid}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlGenerate8dot3Name
	RtlGenerate8dot3Name(${1:PCUNICODE_STRING inName}, ${2:BOOLEAN inAllowExtendedCharacters}, ${3:PGENERATE_NAME_CONTEXT ioContext}, ${4:PUNICODE_STRING ioName8dot3}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlGetGroupSecurityDescriptor
	RtlGetGroupSecurityDescriptor(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}, ${2:PSID out*Group}, ${3:PBOOLEAN outGroupDefaulted}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlGetOwnerSecurityDescriptor
	RtlGetOwnerSecurityDescriptor(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}, ${2:PSID out*Owner}, ${3:PBOOLEAN outOwnerDefaulted}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlGetSaclSecurityDescriptor
	RtlGetSaclSecurityDescriptor(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}, ${2:PBOOLEAN outSaclPresent}, ${3:PACL out*Sacl}, ${4:PBOOLEAN outSaclDefaulted}); ${5:// NTSTATUS #APC_LEVEL}
snippet RtlGetVersion
	RtlGetVersion(${1:PRTL_OSVERSIONINFOW outlpVersionInformation}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlHashUnicodeString
	RtlHashUnicodeString(${1:PCUNICODE_STRING inString}, ${2:BOOLEAN inCaseInSensitive}, ${3:ULONG inHashAlgorithm}, ${4:PULONG outHashValue}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlIdentifierAuthoritySid
	RtlIdentifierAuthoritySid(${1:PSID inSid}); ${2:// PSID_IDENTIFIER_AUTHORITY #APC_LEVEL}
snippet RtlInitAnsiString
	RtlInitAnsiString(${1:PANSI_STRING outDestinationString}, ${2:PCSZ inSourceString}); ${3:// VOID #DISPATCH_LEVEL}
snippet RtlInitAnsiStringEx
	RtlInitAnsiStringEx(${1:PANSI_STRING outDestinationString}, ${2:PCSZ inSourceString}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet RtlInitCodePageTable
	RtlInitCodePageTable(${1:PUSHORT inTableBase}, ${2:PCPTABLEINFO ioCodePageTable}); ${3:// VOID #PASSIVE_LEVEL}
snippet RtlInitString
	RtlInitString(${1:PSTRING outDestinationString}, ${2:PCSZ inSourceString}); ${3:// VOID #DISPATCH_LEVEL}
snippet RtlInitUnicodeString
	RtlInitUnicodeString(${1:PUNICODE_STRING outDestinationString}, ${2:PCWSTR inSourceString}); ${3:// VOID #DISPATCH_LEVEL}
snippet RtlInitUnicodeStringEx
	RtlInitUnicodeStringEx(${1:PUNICODE_STRING outDestinationString}, ${2:PCWSTR SourceString}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet RtlInitializeBitMap
	RtlInitializeBitMap(${1:PRTL_BITMAP outBitMapHeader}, ${2:PULONG inBitMapBuffer}, ${3:ULONG inSizeOfBitMap}); ${4:// VOID #APC_LEVEL}
snippet RtlInitializeSid
	RtlInitializeSid(${1:PSID outSid}, ${2:PSID_IDENTIFIER_AUTHORITY inIdentifierAuthority}, ${3:UCHAR inSubAuthorityCount}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlInitializeUnicodePrefix
	RtlInitializeUnicodePrefix(${1:PUNICODE_PREFIX_TABLE outPrefixTable}); ${2:// VOID #PASSIVE_LEVEL}
snippet RtlInsertUnicodePrefix
	RtlInsertUnicodePrefix(${1:PUNICODE_PREFIX_TABLE inPrefixTable}, ${2:PUNICODE_STRING inPrefix}, ${3:PUNICODE_PREFIX_TABLE_ENTRY outPrefixTableEntry}); ${4:// BOOLEAN #PASSIVE_LEVEL}
snippet RtlInt64ToUnicodeString
	RtlInt64ToUnicodeString(${1:ULONGLONG inValue}, ${2:ULONG inBase}, ${3:PUNICODE_STRING ioString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlIntegerToUnicodeString
	RtlIntegerToUnicodeString(${1:ULONG inValue}, ${2:ULONG inBase}, ${3:PUNICODE_STRING ioString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlIsNameLegalDOS8Dot3
	RtlIsNameLegalDOS8Dot3(${1:PCUNICODE_STRING inName}, ${2:POEM_STRING OemName}, ${3:PBOOLEAN outNameContainsSpaces}); ${4:// BOOLEAN #PASSIVE_LEVEL}
snippet RtlIsValidOemCharacter
	RtlIsValidOemCharacter(${1:PWCHAR ioChar}); ${2:// BOOLEAN #PASSIVE_LEVEL}
snippet RtlLengthRequiredSid
	RtlLengthRequiredSid(${1:ULONG inSubAuthorityCount}); ${2:// ULONG #APC_LEVEL}
snippet RtlLengthSecurityDescriptor
	RtlLengthSecurityDescriptor(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}); ${2:// ULONG #APC_LEVEL}
snippet RtlMapGenericMask
	RtlMapGenericMask(${1:PACCESS_MASK ioAccessMask}, ${2:PGENERIC_MAPPING inGenericMapping}); ${3:// VOID #APC_LEVEL}
snippet RtlMultiByteToUnicodeN
	RtlMultiByteToUnicodeN(${1:PWCH UnicodeString}, ${2:ULONG inMaxBytesInUnicodeString}, ${3:PULONG outBytesInUnicodeString}, ${4:const CHAR *MultiByteString}, ${5:ULONG inBytesInMultiByteString}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlMultiByteToUnicodeSize
	RtlMultiByteToUnicodeSize(${1:PULONG outBytesInUnicodeString}, ${2:const CHAR *MultiByteString}, ${3:ULONG inBytesInMultiByteString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlNextUnicodePrefix
	RtlNextUnicodePrefix(${1:PUNICODE_PREFIX_TABLE inPrefixTable}, ${2:BOOLEAN inRestart}); ${3:// PUNICODE_PREFIX_TABLE_ENTRY #PASSIVE_LEVEL}
snippet RtlNtStatusToDosError
	RtlNtStatusToDosError(${1:NTSTATUS inStatus}); ${2:// ULONG #APC_LEVEL}
snippet RtlOemStringToCountedUnicodeString
	RtlOemStringToCountedUnicodeString(${1:PUNICODE_STRING DestinationString}, ${2:PCOEM_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlOemStringToUnicodeString
	RtlOemStringToUnicodeString(${1:PUNICODE_STRING DestinationString}, ${2:PCOEM_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlOemToUnicodeN
	RtlOemToUnicodeN(${1:PWCH UnicodeString}, ${2:ULONG inMaxBytesInUnicodeString}, ${3:PULONG outBytesInUnicodeString}, ${4:PCCH OemString}, ${5:ULONG inBytesInOemString}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlPrefixUnicodeString
	RtlPrefixUnicodeString(${1:PCUNICODE_STRING inString1}, ${2:PCUNICODE_STRING inString2}, ${3:BOOLEAN inCaseInSensitive}); ${4:// BOOLEAN #PASSIVE_LEVEL}
snippet RtlQueryRegistryValues
	RtlQueryRegistryValues(${1:ULONG inRelativeTo}, ${2:PCWSTR inPath}, ${3:PRTL_QUERY_REGISTRY_TABLE ioQueryTable}, ${4:PVOID inContext}, ${5:PVOID inEnvironment}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlRemoveUnicodePrefix
	RtlRemoveUnicodePrefix(${1:PUNICODE_PREFIX_TABLE inPrefixTable}, ${2:PUNICODE_PREFIX_TABLE_ENTRY inPrefixTableEntry}); ${3:// VOID #PASSIVE_LEVEL}
snippet RtlReplaceSidInSd
	RtlReplaceSidInSd(${1:PSECURITY_DESCRIPTOR ioSecurityDescriptor}, ${2:PSID inOldSid}, ${3:PSID inNewSid}, ${4:ULONG out*NumChanges}); ${5:// NTSTATUS #APC_LEVEL}
snippet RtlReserveChunk
	RtlReserveChunk(${1:USHORT inCompressionFormat}, ${2:ioPUCHAR *CompressedBuffer}, ${3:PUCHAR inEndOfCompressedBufferPlus1}, ${4:PUCHAR out*ChunkBuffer}, ${5:ULONG inChunkSize}); ${6:// NTSTATUS #APC_LEVEL}
snippet RtlRunOnceBeginInitialize
	RtlRunOnceBeginInitialize(${1:PRTL_RUN_ONCE ioRunOnce}, ${2:ULONG inFlags}, ${3:PVOID *Context}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlRunOnceComplete
	RtlRunOnceComplete(${1:PRTL_RUN_ONCE ioRunOnce}, ${2:ULONG inFlags}, ${3:PVOID inContext}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlRunOnceExecuteOnce
	RtlRunOnceExecuteOnce(${1:PRTL_RUN_ONCE ioRunOnce}, ${2:PRTL_RUN_ONCE_INIT_FN inInitFn}, ${3:PVOID Parameter}, ${4:PVOID *Context}); ${5:// NTSTATUS #APC_LEVEL}
snippet RtlRunOnceInitialize
	RtlRunOnceInitialize(${1:PRTL_RUN_ONCE outRunOnce}); ${2:// VOID #APC_LEVEL}
snippet RtlSelfRelativeToAbsoluteSD
	RtlSelfRelativeToAbsoluteSD(${1:PSECURITY_DESCRIPTOR inSelfRelativeSecurityDescriptor}, ${2:PSECURITY_DESCRIPTOR outAbsoluteSecurityDescriptor}, ${3:PULONG ioAbsoluteSecurityDescriptorSize}, ${4:PACL outDacl}, ${5:PULONG ioDaclSize}, ${6:PACL outSacl}, ${7:PULONG ioSaclSize}, ${8:PSID outOwner}, ${9:PULONG ioOwnerSize}, ${10:PSID outPrimaryGroup}, ${11:PULONG ioPrimaryGroupSize}); ${12:// NTSTATUS #APC_LEVEL}
snippet RtlSetDaclSecurityDescriptor
	RtlSetDaclSecurityDescriptor(${1:PSECURITY_DESCRIPTOR ioSecurityDescriptor}, ${2:BOOLEAN inDaclPresent}, ${3:PACL inDacl}, ${4:BOOLEAN inDaclDefaulted}); ${5:// NTSTATUS #APC_LEVEL}
snippet RtlSetGroupSecurityDescriptor
	RtlSetGroupSecurityDescriptor(${1:PSECURITY_DESCRIPTOR ioSecurityDescriptor}, ${2:PSID inGroup}, ${3:BOOLEAN inGroupDefaulted}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlSetOwnerSecurityDescriptor
	RtlSetOwnerSecurityDescriptor(${1:PSECURITY_DESCRIPTOR ioSecurityDescriptor}, ${2:PSID inOwner}, ${3:BOOLEAN inOwnerDefaulted}); ${4:// NTSTATUS #APC_LEVEL}
snippet RtlStringFromGUID
	RtlStringFromGUID(${1:REFGUID inGuid}, ${2:PUNICODE_STRING outGuidString}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUTF8ToUnicodeN
	RtlUTF8ToUnicodeN(${1:PWSTR UnicodeStringDestination}, ${2:ULONG inUnicodeStringMaxByteCount}, ${3:PULONG outUnicodeStringActualByteCount}, ${4:PCCH UTF8StringSource}, ${5:ULONG inUTF8StringByteCount}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeStringToAnsiString
	RtlUnicodeStringToAnsiString(${1:PANSI_STRING DestinationString}, ${2:PCUNICODE_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeStringToCountedOemString
	RtlUnicodeStringToCountedOemString(${1:POEM_STRING DestinationString}, ${2:PCUNICODE_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeStringToInteger
	RtlUnicodeStringToInteger(${1:PCUNICODE_STRING inString}, ${2:ULONG inBase}, ${3:PULONG outValue}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeStringToOemString
	RtlUnicodeStringToOemString(${1:POEM_STRING DestinationString}, ${2:PCUNICODE_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeToCustomCPN
	RtlUnicodeToCustomCPN(${1:PCPTABLEINFO inCustomCP}, ${2:PCH CustomCPString}, ${3:ULONG inMaxBytesInCustomCPString}, ${4:PULONG outBytesInCustomCPString}, ${5:PWCH UnicodeString}, ${6:ULONG inBytesInUnicodeString}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeToMultiByteN
	RtlUnicodeToMultiByteN(${1:PCHAR MultiByteString}, ${2:ULONG inMaxBytesInMultiByteString}, ${3:PULONG outBytesInMultiByteString}, ${4:PCWCH UnicodeString}, ${5:ULONG inBytesInUnicodeString}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeToMultiByteSize
	RtlUnicodeToMultiByteSize(${1:PULONG outBytesInMultiByteString}, ${2:PCWCH UnicodeString}, ${3:ULONG inBytesInUnicodeString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeToOemN
	RtlUnicodeToOemN(${1:PCHAR OemString}, ${2:ULONG inMaxBytesInOemString}, ${3:PULONG outBytesInOemString}, ${4:PCWCH UnicodeString}, ${5:ULONG inBytesInUnicodeString}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUnicodeToUTF8N
	RtlUnicodeToUTF8N(${1:PCHAR UTF8StringDestination}, ${2:ULONG inUTF8StringMaxByteCount}, ${3:PULONG outUTF8StringActualByteCount}, ${4:PCWCH UnicodeStringSource}, ${5:ULONG inUnicodeStringByteCount}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUpcaseUnicodeChar
	RtlUpcaseUnicodeChar(${1:WCHAR inSourceCharacter}); ${2:// WCHAR #PASSIVE_LEVEL}
snippet RtlUpcaseUnicodeString
	RtlUpcaseUnicodeString(${1:PUNICODE_STRING DestinationString}, ${2:PCUNICODE_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUpcaseUnicodeStringToCountedOemString
	RtlUpcaseUnicodeStringToCountedOemString(${1:POEM_STRING DestinationString}, ${2:PCUNICODE_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUpcaseUnicodeStringToOemString
	RtlUpcaseUnicodeStringToOemString(${1:POEM_STRING DestinationString}, ${2:PCUNICODE_STRING inSourceString}, ${3:BOOLEAN inAllocateDestinationString}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUpcaseUnicodeToCustomCPN
	RtlUpcaseUnicodeToCustomCPN(${1:PCPTABLEINFO inCustomCP}, ${2:PCH CustomCPString}, ${3:ULONG inMaxBytesInCustomCPString}, ${4:PULONG outBytesInCustomCPString}, ${5:PWCH UnicodeString}, ${6:ULONG inBytesInUnicodeString}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUpcaseUnicodeToMultiByteN
	RtlUpcaseUnicodeToMultiByteN(${1:PCHAR MultiByteString}, ${2:ULONG inMaxBytesInMultiByteString}, ${3:PULONG outBytesInMultiByteString}, ${4:PCWCH UnicodeString}, ${5:ULONG inBytesInUnicodeString}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUpcaseUnicodeToOemN
	RtlUpcaseUnicodeToOemN(${1:PCHAR OemString}, ${2:ULONG inMaxBytesInOemString}, ${3:PULONG outBytesInOemString}, ${4:PCWCH UnicodeString}, ${5:ULONG inBytesInUnicodeString}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlUpperChar
	RtlUpperChar(${1:CHAR inCharacter}); ${2:// CHAR #PASSIVE_LEVEL}
snippet RtlUpperString
	RtlUpperString(${1:PSTRING ioDestinationString}, ${2:const inSTRING * SourceString}); ${3:// VOID #PASSIVE_LEVEL}
snippet RtlValidRelativeSecurityDescriptor
	RtlValidRelativeSecurityDescriptor(${1:PSECURITY_DESCRIPTOR SecurityDescriptorInput}, ${2:ULONG inSecurityDescriptorLength}, ${3:SECURITY_INFORMATION inRequiredInformation}); ${4:// BOOLEAN #APC_LEVEL}
snippet RtlValidSecurityDescriptor
	RtlValidSecurityDescriptor(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}); ${2:// BOOLEAN #APC_LEVEL}
snippet RtlValidSid
	RtlValidSid(${1:PSID inSid}); ${2:// BOOLEAN #APC_LEVEL}
snippet RtlVerifyVersionInfo
	RtlVerifyVersionInfo(${1:PRTL_OSVERSIONINFOEXW inVersionInfo}, ${2:ULONG inTypeMask}, ${3:ULONGLONG inConditionMask}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlVolumeDeviceToDosName
	RtlVolumeDeviceToDosName(${1:PVOID inVolumeDeviceObject}, ${2:PUNICODE_STRING outDosName}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlWriteRegistryValue
	RtlWriteRegistryValue(${1:ULONG inRelativeTo}, ${2:PCWSTR inPath}, ${3:PCWSTR inValueName}, ${4:ULONG inValueType}, ${5:PVOID inValueData}, ${6:ULONG inValueLength}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet RtlxAnsiStringToUnicodeSize
	RtlxAnsiStringToUnicodeSize(${1:PCANSI_STRING inAnsiString}); ${2:// ULONG #PASSIVE_LEVEL}
snippet RtlxOemStringToUnicodeSize
	RtlxOemStringToUnicodeSize(${1:PCOEM_STRING inOemString}); ${2:// ULONG #PASSIVE_LEVEL}
snippet RtlxUnicodeStringToAnsiSize
	RtlxUnicodeStringToAnsiSize(${1:PCUNICODE_STRING inUnicodeString}); ${2:// ULONG #PASSIVE_LEVEL}
snippet RtlxUnicodeStringToOemSize
	RtlxUnicodeStringToOemSize(${1:PCUNICODE_STRING inUnicodeString}); ${2:// ULONG #PASSIVE_LEVEL}
snippet SDBUS_CALLBACK_ROUTINE
	SDBUS_CALLBACK_ROUTINE(${1:PVOID inCallbackRoutineContext}, ${2:ULONG inInterruptType}); ${3:// VOID #DISPATCH_LEVEL}
snippet ScsiPortInitialize
	ScsiPortInitialize(${1:PVOID inArgument1}, ${2:PVOID inArgument2}, ${3:struct in_HW_INITIALIZATION_DATA *HwInitializationData}, ${4:PVOID inHwContext}); ${5:// SCSIPORT_ULONG #PASSIVE_LEVEL}
snippet SdBusOpenInterface
	SdBusOpenInterface(${1:PDEVICE_OBJECT inPdo}, ${2:PSDBUS_INTERFACE_STANDARD outInterfaceStandard}, ${3:USHORT inSize}, ${4:USHORT inVersion}); ${5:// NTSTATUS #APC_LEVEL}
snippet SdBusSubmitRequest
	SdBusSubmitRequest(${1:PVOID inInterfaceContext}, ${2:PSDBUS_REQUEST_PACKET inPacket}); ${3:// NTSTATUS #APC_LEVEL}
snippet SdBusSubmitRequestAsync
	SdBusSubmitRequestAsync(${1:PVOID inInterfaceContext}, ${2:PSDBUS_REQUEST_PACKET inPacket}, ${3:PIRP inIrp}, ${4:PIO_COMPLETION_ROUTINE inCompletionRoutine}, ${5:PVOID inUserContext}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet SeAccessCheck
	SeAccessCheck(${1:PSECURITY_DESCRIPTOR inSecurityDescriptor}, ${2:PSECURITY_SUBJECT_CONTEXT inSubjectSecurityContext}, ${3:BOOLEAN inSubjectContextLocked}, ${4:ACCESS_MASK inDesiredAccess}, ${5:ACCESS_MASK inPreviouslyGrantedAccess}, ${6:PPRIVILEGE_SET *Privileges}, ${7:PGENERIC_MAPPING inGenericMapping}, ${8:KPROCESSOR_MODE inAccessMode}, ${9:PACCESS_MASK outGrantedAccess}, ${10:PNTSTATUS outAccessStatus}); ${11:// BOOLEAN #PASSIVE_LEVEL}
snippet SeAssignSecurity
	SeAssignSecurity(${1:PSECURITY_DESCRIPTOR inParentDescriptor}, ${2:PSECURITY_DESCRIPTOR inExplicitDescriptor}, ${3:PSECURITY_DESCRIPTOR out*NewDescriptor}, ${4:BOOLEAN inIsDirectoryObject}, ${5:PSECURITY_SUBJECT_CONTEXT inSubjectContext}, ${6:PGENERIC_MAPPING inGenericMapping}, ${7:POOL_TYPE inPoolType}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet SeDeassignSecurity
	SeDeassignSecurity(${1:PSECURITY_DESCRIPTOR *SecurityDescriptor}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet SeSinglePrivilegeCheck
	SeSinglePrivilegeCheck(${1:LUID inPrivilegeValue}, ${2:KPROCESSOR_MODE inPreviousMode}); ${3:// BOOLEAN #PASSIVE_LEVEL}
snippet SeValidSecurityDescriptor
	SeValidSecurityDescriptor(${1:ULONG inLength}, ${2:PSECURITY_DESCRIPTOR SecurityDescriptor}); ${3:// BOOLEAN #PASSIVE_LEVEL}
snippet StorPortAllocateContiguousMemorySpecifyCacheNode
	StorPortAllocateContiguousMemorySpecifyCacheNode(${1:PVOID inHwDeviceExtension}, ${2:SIZE_T inNumberOfBytes}, ${3:PHYSICAL_ADDRESS inLowestAcceptableAddress}, ${4:PHYSICAL_ADDRESS inHighestAcceptableAddress}, ${5:PHYSICAL_ADDRESS inBoundaryAddressMultiple}, ${6:MEMORY_CACHING_TYPE inCacheType}, ${7:NODE_REQUIREMENT inPreferredNode}, ${8:PVOIDout* BufferPointer}); ${9:// FORCEINLINE #DISPATCH_LEVEL}
snippet StorPortGetLogicalProcessorRelationship
	StorPortGetLogicalProcessorRelationship(${1:PVOID inHwDeviceExtension}, ${2:PPROCESSOR_NUMBER inProcessorNumber}, ${3:LOGICAL_PROCESSOR_RELATIONSHIP inRelationshipType}, ${4:PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Information}, ${5:PULONG ioLength}); ${6:// FORCEINLINE #DISPATCH_LEVEL}
snippet StreamClassQueryMasterClockSync
	StreamClassQueryMasterClockSync(${1:HANDLE inMasterClockHandle}, ${2:PHW_TIME_CONTEXT ioTimeContext}); ${3:// VOID #DISPATCH_LEVEL}
snippet StreamClassReadWriteConfig
	StreamClassReadWriteConfig(${1:PVOID inHwDeviceExtension}, ${2:BOOLEAN inRead},  ${3:PVOID Buffer}, ${4:ULONG inOffset}, ${5:ULONG inLength}); ${6:// BOOLEAN #PASSIVE_LEVEL}
snippet StreamClassRegisterAdapter
	StreamClassRegisterAdapter(${1:PVOID inArgument1}, ${2:PVOID inArgument2}, ${3:PHW_INITIALIZATION_DATA inHwInitializationData}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet StreamClassRegisterFilterWithNoKSPins
	StreamClassRegisterFilterWithNoKSPins(${1:PDEVICE_OBJECT inDeviceObject}, ${2:const inGUID * InterfaceClassGUID}, ${3:ULONG inPinCount}, ${4:BOOL * PinDirection}, ${5:KSPIN_MEDIUM * MediumList}, ${6:inGUID * CategoryList}); ${7:// NTSTATUS #APC_LEVEL}
snippet TdiCopyBufferToMdl
	TdiCopyBufferToMdl(${1:PVOID inSourceBuffer}, ${2:ULONG inSourceOffset}, ${3:ULONG inSourceBytesToCopy}, ${4:PMDL inDestinationMdlChain}, ${5:ULONG inDestinationOffset}, ${6:PULONG outBytesCopied}); ${7:// NTSTATUS #DISPATCH_LEVEL}
snippet TdiCopyMdlChainToMdlChain
	TdiCopyMdlChainToMdlChain(${1:PMDL inSourceMdlChain}, ${2:ULONG inSourceOffset}, ${3:PMDL inDestinationMdlChain}, ${4:ULONG inDestinationOffset}, ${5:PULONG outBytesCopied}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet TdiCopyMdlToBuffer
	TdiCopyMdlToBuffer(${1:PMDL inSourceMdlChain}, ${2:ULONG inSourceOffset}, ${3:PVOID DestinationBuffer}, ${4:ULONG inDestinationOffset}, ${5:ULONG inDestinationBufferSize}, ${6:PULONG outBytesCopied}); ${7:// NTSTATUS #DISPATCH_LEVEL}
snippet TdiDeregisterDeviceObject
	TdiDeregisterDeviceObject(${1:HANDLE inRegistrationHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet TdiDeregisterNetAddress
	TdiDeregisterNetAddress(${1:HANDLE inRegistrationHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet TdiDeregisterPnPHandlers
	TdiDeregisterPnPHandlers(${1:HANDLE inBindingHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet TdiDeregisterProvider
	TdiDeregisterProvider(${1:HANDLE inProviderHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet TdiEnumerateAddresses
	TdiEnumerateAddresses(${1:HANDLE inBindingHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet TdiInitialize
	TdiInitialize(${1:VOID}); ${2:// VOID #PASSIVE_LEVEL}
snippet TdiMapUserRequest
	TdiMapUserRequest(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP inIrp}, ${3:PIO_STACK_LOCATION inIrpSp}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet TdiPnPPowerComplete
	TdiPnPPowerComplete(${1:HANDLE inBindingHandle}, ${2:PNET_PNP_EVENT inPowerEvent}, ${3:NTSTATUS inStatus}); ${4:// VOID #APC_LEVEL}
snippet TdiPnPPowerRequest
	TdiPnPPowerRequest(${1:PUNICODE_STRING inDeviceName}, ${2:PNET_PNP_EVENT inPowerEvent}, ${3:PTDI_PNP_CONTEXT inContext1}, ${4:PTDI_PNP_CONTEXT inContext2}, ${5:ProviderPnPPowerComplete inProtocolCompletionHandler}); ${6:// NTSTATUS #APC_LEVEL}
snippet TdiProviderReady
	TdiProviderReady(${1:HANDLE inProviderHandle}); ${2:// NTSTATUS #APC_LEVEL}
snippet TdiRegisterDeviceObject
	TdiRegisterDeviceObject(${1:PUNICODE_STRING inDeviceName}, ${2:HANDLE out*RegistrationHandle}); ${3:// NTSTATUS #APC_LEVEL}
snippet TdiRegisterNetAddress
	TdiRegisterNetAddress(${1:PTA_ADDRESS inAddress}, ${2:PUNICODE_STRING inDeviceName}, ${3:PTDI_PNP_CONTEXT inContext}, ${4:HANDLE out*RegistrationHandle}); ${5:// NTSTATUS #APC_LEVEL}
snippet TdiRegisterPnPHandlers
	TdiRegisterPnPHandlers(${1:PTDI_CLIENT_INTERFACE_INFO ClientInterfaceInfo}, ${2:ULONG inInterfaceInfoSize}, ${3:HANDLE out*BindingHandle}); ${4:// NTSTATUS #APC_LEVEL}
snippet TdiRegisterProvider
	TdiRegisterProvider(${1:PUNICODE_STRING inProviderName}, ${2:HANDLE out*ProviderHandle}); ${3:// NTSTATUS #APC_LEVEL}
snippet TdiReturnChainedReceives
	TdiReturnChainedReceives(${1:inPVOID *TsduDescriptors}, ${2:ULONG inNumberOfTsdus}); ${3:// VOID #DISPATCH_LEVEL}
snippet TmCommitComplete
	TmCommitComplete(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmCommitEnlistment
	TmCommitEnlistment(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmCommitTransaction
	TmCommitTransaction(${1:PKTRANSACTION inTransaction}, ${2:BOOLEAN inWait}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmCreateEnlistment
	TmCreateEnlistment(${1:PHANDLE outEnlistmentHandle}, ${2:KPROCESSOR_MODE inPreviousMode}, ${3:ACCESS_MASK inDesiredAccess}, ${4:POBJECT_ATTRIBUTES inObjectAttributes}, ${5:PRKRESOURCEMANAGER inResourceManager}, ${6:PKTRANSACTION inTransaction}, ${7:ULONG inCreateOptions}, ${8:NOTIFICATION_MASK inNotificationMask}, ${9:PVOID inEnlistmentKey}); ${10:// NTSTATUS #APC_LEVEL}
snippet TmDereferenceEnlistmentKey
	TmDereferenceEnlistmentKey(${1:PKENLISTMENT inEnlistment}, ${2:PBOOLEAN outLastReference}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmEnableCallbacks
	TmEnableCallbacks(${1:PKRESOURCEMANAGER inResourceManager}, ${2:PTM_RM_NOTIFICATION inCallbackRoutine}, ${3:PVOID inRMKey}); ${4:// NTSTATUS #APC_LEVEL}
snippet TmGetTransactionId
	TmGetTransactionId(${1:PKTRANSACTION inTransaction}, ${2:PUOW outTransactionId}); ${3:// VOID #APC_LEVEL}
snippet TmInitializeTransactionManager
	TmInitializeTransactionManager(${1:PRKTM inTransactionManager}, ${2:PCUNICODE_STRING inLogFileName}, ${3:PGUID inTmId}, ${4:ULONG inCreateOptions}); ${5:// NTSTATUS #APC_LEVEL}
snippet TmIsTransactionActive
	TmIsTransactionActive(${1:PKTRANSACTION inTransaction}); ${2:// BOOLEAN #APC_LEVEL}
snippet TmPrePrepareComplete
	TmPrePrepareComplete(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmPrePrepareEnlistment
	TmPrePrepareEnlistment(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmPrepareComplete
	TmPrepareComplete(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmPrepareEnlistment
	TmPrepareEnlistment(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmPropagationComplete
	TmPropagationComplete(${1:PKRESOURCEMANAGER inResourceManager}, ${2:ULONG inRequestCookie}, ${3:ULONG inBufferLength}, ${4:PVOID inBuffer}); ${5:// NTSTATUS #APC_LEVEL}
snippet TmPropagationFailed
	TmPropagationFailed(${1:PKRESOURCEMANAGER inResourceManager}, ${2:ULONG inRequestCookie}, ${3:NTSTATUS inStatus}); ${4:// NTSTATUS #APC_LEVEL}
snippet TmReadOnlyEnlistment
	TmReadOnlyEnlistment(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmRecoverEnlistment
	TmRecoverEnlistment(${1:PKENLISTMENT inEnlistment}, ${2:PVOID inEnlistmentKey}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmRecoverResourceManager
	TmRecoverResourceManager(${1:PKRESOURCEMANAGER inResourceManager}); ${2:// NTSTATUS #APC_LEVEL}
snippet TmRecoverTransactionManager
	TmRecoverTransactionManager(${1:PKTM inTm}, ${2:PLARGE_INTEGER inTargetVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmReferenceEnlistmentKey
	TmReferenceEnlistmentKey(${1:PKENLISTMENT inEnlistment}, ${2:PVOID out*Key}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmRegisterProtocolAddressInformation
	TmRegisterProtocolAddressInformation(${1:PKRESOURCEMANAGER inResourceManager}, ${2:PKCRM_PROTOCOL_ID inProtocolId}, ${3:ULONG inProtocolInformationSize}, ${4:PVOID inProtocolInformation}); ${5:// NTSTATUS #APC_LEVEL}
snippet TmRenameTransactionManager
	TmRenameTransactionManager(${1:PUNICODE_STRING inLogFileName}, ${2:LPGUID inExistingTransactionManagerGuid}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmRequestOutcomeEnlistment
	TmRequestOutcomeEnlistment(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmRollbackComplete
	TmRollbackComplete(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmRollbackEnlistment
	TmRollbackEnlistment(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmRollbackTransaction
	TmRollbackTransaction(${1:PKTRANSACTION inTransaction}, ${2:BOOLEAN inWait}); ${3:// NTSTATUS #APC_LEVEL}
snippet TmSinglePhaseReject
	TmSinglePhaseReject(${1:PKENLISTMENT inEnlistment}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #APC_LEVEL}
snippet USBD_CalculateUsbBandwidth
	USBD_CalculateUsbBandwidth(${1:ULONG inMaxPacketSize}, ${2:UCHAR inEndpointType}, ${3:BOOLEAN inLowSpeed}); ${4:// ULONG #DISPATCH_LEVEL}
snippet USBD_CreateConfigurationRequestEx
	USBD_CreateConfigurationRequestEx(${1:PUSB_CONFIGURATION_DESCRIPTOR inConfigurationDescriptor}, ${2:PUSBD_INTERFACE_LIST_ENTRY inInterfaceList}); ${3:// PURB #DISPATCH_LEVEL}
snippet USBD_GetInterfaceLength
	USBD_GetInterfaceLength(${1:PUSB_INTERFACE_DESCRIPTOR inInterfaceDescriptor}, ${2:PUCHAR inBufferEnd}); ${3:// ULONG #PASSIVE_LEVEL}
snippet USBD_GetPdoRegistryParameter
	USBD_GetPdoRegistryParameter(${1:PDEVICE_OBJECT inPhysicalDeviceObject},  ${2:PVOID Parameter}, ${3:ULONG inParameterLength}, ${4:PWSTR KeyName}, ${5:ULONG inKeyNameLength}); ${6:// NTSTATUS #APC_LEVEL}
snippet USBD_GetUSBDIVersion
	USBD_GetUSBDIVersion(${1:PUSBD_VERSION_INFORMATION outVersionInformation}); ${2:// VOID #DISPATCH_LEVEL}
snippet USBD_ParseConfigurationDescriptorEx
	USBD_ParseConfigurationDescriptorEx(${1:PUSB_CONFIGURATION_DESCRIPTOR inConfigurationDescriptor}, ${2:PVOID inStartPosition}, ${3:LONG inInterfaceNumber}, ${4:LONG inAlternateSetting}, ${5:LONG inInterfaceClass}, ${6:LONG inInterfaceSubClass}, ${7:LONG inInterfaceProtocol}); ${8:// PUSB_INTERFACE_DESCRIPTOR #APC_LEVEL}
snippet USBD_ParseDescriptors
	USBD_ParseDescriptors(${1:PVOID inDescriptorBuffer}, ${2:ULONG inTotalLength}, ${3:PVOID inStartPosition}, ${4:LONG inDescriptorType}); ${5:// PUSB_COMMON_DESCRIPTOR #APC_LEVEL}
snippet USBD_RegisterHcFilter
	USBD_RegisterHcFilter(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PDEVICE_OBJECT inFilterDeviceObject}); ${3:// VOID #PASSIVE_LEVEL}
snippet VideoPortAcquireDeviceLock
	VideoPortAcquireDeviceLock(${1:IN PVOID HwDeviceExtension}); ${2:// VIDEOPORT_VOID #PASSIVE_LEVEL}
snippet VideoPortAcquireSpinLock
	VideoPortAcquireSpinLock(${1:PVOID ioHwDeviceExtension}, ${2:PSPIN_LOCK inSpinLock}, ${3:PUCHAR outOldIrql }); ${4:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortAcquireSpinLockAtDpcLevel
	VideoPortAcquireSpinLockAtDpcLevel(${1:PVOID ioHwDeviceExtension}, ${2:PSPIN_LOCK inSpinLock}); ${3:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortAllocateBuffer
	VideoPortAllocateBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN ULONG Size}, ${3:OUT PVOID *Buffer}); ${4:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortAllocateCommonBuffer
	VideoPortAllocateCommonBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN PVP_DMA_ADAPTER VpDmaAdapter}, ${3:IN ULONG DesiredLength}, ${4:OUT PPHYSICAL_ADDRESS LogicalAddress}, ${5:IN BOOLEAN CacheEnabled}, ${6:OUT PVOID Reserved}); ${7:// (" #PASSIVE_LEVEL}
snippet VideoPortAllocateContiguousMemory
	VideoPortAllocateContiguousMemory(${1:IN PVOID HwDeviceExtension}, ${2:IN ULONG NumberOfBytes}, ${3:IN PHYSICAL_ADDRESS HighestAcceptableAddress}); ${4:// VIDEOPORT_PVOID #PASSIVE_LEVEL}
snippet VideoPortAllocatePool
	VideoPortAllocatePool(${1:IN PVOID HwDeviceExtension}, ${2:IN VP_POOL_TYPE PoolType}, ${3:IN SIZE_T NumberOfBytes}, ${4:IN ULONG Tag}); ${5:// VIDEOPORT_PVOID #DISPATCH_LEVEL}
snippet VideoPortCheckForDeviceExistence
	VideoPortCheckForDeviceExistence(${1:IN PVOID HwDeviceExtension}, ${2:IN USHORT VendorId}, ${3:IN USHORT DeviceId}, ${4:IN UCHAR RevisionId}, ${5:IN USHORT SubVendorId}, ${6:IN USHORT SubSystemId}, ${7:IN ULONG Flags}); ${8:// VIDEOPORT_BOOLEAN #PASSIVE_LEVEL}
snippet VideoPortClearEvent
	VideoPortClearEvent(${1:IN PVOID HwDeviceExtension}, ${2:IN PEVENT pEvent}); ${3:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortCompleteDma
	VideoPortCompleteDma(${1:IN PVOID HwDeviceExtension}, ${2:IN PVP_DMA_ADAPTER VpDmaAdapter}, ${3:IN PVP_SCATTER_GATHER_LIST VpScatterGather}, ${4:IN BOOLEAN WriteToDevice}); ${5:// VIDEOPORT_VP_STATUS #DISPATCH_LEVEL}
snippet VideoPortCreateEvent
	VideoPortCreateEvent(${1:IN PVOID HwDeviceExtension}, ${2:IN ULONG EventFlag}, ${3:IN PVOID Unused}, ${4:OUT PEVENT *ppEvent}); ${5:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortCreateSecondaryDisplay
	VideoPortCreateSecondaryDisplay(${1:IN PVOID HwDeviceExtension}, ${2:IN OUT PVOID *SecondaryDeviceExtension}, ${3:IN ULONG ulFlag}); ${4:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortCreateSpinLock
	VideoPortCreateSpinLock(${1:IN PVOID HwDeviceExtension}, ${2:OUT PSPIN_LOCK *SpinLock}); ${3:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortDDCMonitorHelper
	VideoPortDDCMonitorHelper(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID DDCControl}, ${3:IN OUT  PUCHAR EdidBuffer}, ${4:IN ULONG EdidBufferSize}); ${5:// VIDEOPORT_BOOLEAN #PASSIVE_LEVEL}
snippet VideoPortDeleteEvent
	VideoPortDeleteEvent(${1:IN PVOID HwDeviceExtension}, ${2:IN PEVENT pEvent}); ${3:// VIDEOPORT_VP_STATUS #DISPATCH_LEVEL}
snippet VideoPortDeleteSpinLock
	VideoPortDeleteSpinLock(${1:IN PVOID HwDeviceExtension}, ${2:IN PSPIN_LOCK SpinLock}); ${3:// VIDEOPORT_VP_STATUS #DISPATCH_LEVEL}
snippet VideoPortEnumerateChildren
	VideoPortEnumerateChildren(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID Reserved}); ${3:// VIDEOPORT_VP_STATUS #DISPATCH_LEVEL}
snippet VideoPortFlushRegistry
	VideoPortFlushRegistry(${1:PVOID HwDeviceExtension}); ${2:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortFreeCommonBuffer
	VideoPortFreeCommonBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN ULONG Length}, ${3:IN PVOID VirtualAddress}, ${4:IN PHYSICAL_ADDRESS LogicalAddress}, ${5:IN BOOLEAN CacheEnabled}); ${6:// VIDEOPORT_VOID #PASSIVE_LEVEL}
snippet VideoPortFreeDeviceBase
	VideoPortFreeDeviceBase(${1:PVOID HwDeviceExtension}, ${2:PVOID MappedAddress}); ${3:// VIDEOPORT_VOID #PASSIVE_LEVEL}
snippet VideoPortFreePool
	VideoPortFreePool(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID Ptr}); ${3:// (" #DISPATCH_LEVEL}
snippet VideoPortGetAccessRanges
	VideoPortGetAccessRanges(${1:PVOID HwDeviceExtension}, ${2:ULONG NumRequestedResources}, ${3:PIO_RESOURCE_DESCRIPTOR inRequestedResources OPTIONAL}, ${4:ULONG NumAccessRanges}, ${5:PVIDEO_ACCESS_RANGE AccessRanges}, ${6:PVOID VendorId}, ${7:PVOID DeviceId}, ${8:PULONG Slot}); ${9:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortGetAgpServices
	VideoPortGetAgpServices(${1:IN PVOID HwDeviceExtension}, ${2:IN PVIDEO_PORT_AGP_SERVICES AgpServices}); ${3:// STDAPICALLTYPE #PASSIVE_LEVEL}
snippet VideoPortGetAssociatedDeviceExtension
	VideoPortGetAssociatedDeviceExtension(${1:IN PVOID DeviceObject}); ${2:// VIDEOPORT_PVOID #PASSIVE_LEVEL}
snippet VideoPortGetAssociatedDeviceID
	VideoPortGetAssociatedDeviceID(${1:IN PVOID DeviceObject}); ${2:// VIDEOPORT_ULONG #PASSIVE_LEVEL}
snippet VideoPortGetBusData
	VideoPortGetBusData(${1:PVOID HwDeviceExtension}, ${2:BUS_DATA_TYPE BusDataType}, ${3:ULONG SlotNumber}, ${4:PVOID Buffer}, ${5:ULONG Offset}, ${6:ULONG Length}); ${7:// VIDEOPORT_ULONG #PASSIVE_LEVEL}
snippet VideoPortGetCommonBuffer
	VideoPortGetCommonBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN ULONG DesiredLength}, ${3:IN ULONG Alignment}, ${4:OUT PPHYSICAL_ADDRESS LogicalAddress}, ${5:OUT PULONG pActualLength}, ${6:IN BOOLEAN CacheEnabled}); ${7:// VIDEOPORT_PVOID #PASSIVE_LEVEL}
snippet VideoPortGetDeviceData
	VideoPortGetDeviceData(${1:PVOID HwDeviceExtension}, ${2:VIDEO_DEVICE_DATA_TYPE DeviceDataType}, ${3:PMINIPORT_QUERY_DEVICE_ROUTINE CallbackRoutine}, ${4:PVOID Context}); ${5:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortGetDmaAdapter
	VideoPortGetDmaAdapter(${1:IN PVOID HwDeviceExtension}, ${2:IN PVP_DEVICE_DESCRIPTION VpDeviceDescription}); ${3:// VIDEOPORT_PVP_DMA_ADAPTER #PASSIVE_LEVEL}
snippet VideoPortGetRegistryParameters
	VideoPortGetRegistryParameters(${1:PVOID HwDeviceExtension}, ${2:PWSTR inParameterName}, ${3:UCHAR IsParameterFileName}, ${4:PMINIPORT_GET_REGISTRY_ROUTINE GetRegistryRoutine}, ${5:PVOID Context}); ${6:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortGetRomImage
	VideoPortGetRomImage(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID Unused1}, ${3:IN ULONG Unused2}, ${4:IN ULONG Length}); ${5:// PVOID #PASSIVE_LEVEL}
snippet VideoPortGetVersion
	VideoPortGetVersion(${1:IN PVOID HwDeviceExtension}, ${2:IN OUT PVPOSVERSIONINFO pVpOsVersionInfo}); ${3:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortGetVgaStatus
	VideoPortGetVgaStatus(${1:PVOID HwDeviceExtension}, ${2:OUT PULONG VgaStatus}); ${3:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortInitialize
	VideoPortInitialize(${1:PVOID Argument1}, ${2:PVOID Argument2}, ${3:PVIDEO_HW_INITIALIZATION_DATA HwInitializationData}, ${4:PVOID HwContext}); ${5:// VIDEOPORT_ULONG #PASSIVE_LEVEL}
snippet VideoPortInt10
	VideoPortInt10(${1:PVOID HwDeviceExtension}, ${2:PVIDEO_X86_BIOS_ARGUMENTS BiosArguments}); ${3:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortLockBuffer
	VideoPortLockBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID BaseAddress}, ${3:IN ULONG Length}, ${4:IN VP_LOCK_OPERATION Operation}); ${5:// VIDEOPORT_PVOID #PASSIVE_LEVEL}
snippet VideoPortLogError
	VideoPortLogError(${1:PVOID HwDeviceExtension}, ${2:PVIDEO_REQUEST_PACKET Vrp OPTIONAL}, ${3:VP_STATUS ErrorCode}, ${4:ULONG UniqueId}); ${5:// VIDEOPORT_VOID #HIGH_LEVEL}
snippet VideoPortMapBankedMemory
	VideoPortMapBankedMemory(${1:PVOID HwDeviceExtension}, ${2:PHYSICAL_ADDRESS PhysicalAddress}, ${3:PULONG Length}, ${4:PULONG InIoSpace}, ${5:PVOID *VirtualAddress}, ${6:ULONG BankLength}, ${7:UCHAR ReadWriteBank}, ${8:PBANKED_SECTION_ROUTINE BankRoutine}, ${9:PVOID Context}); ${10:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortMapMemory
	VideoPortMapMemory(${1:PVOID HwDeviceExtension}, ${2:PHYSICAL_ADDRESS PhysicalAddress}, ${3:PULONG Length}, ${4:PULONG InIoSpace}, ${5:PVOID *VirtualAddress}); ${6:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortPutDmaAdapter
	VideoPortPutDmaAdapter(${1:IN PVOID HwDeviceExtension}, ${2:IN PVP_DMA_ADAPTER VpDmaAdapter}); ${3:// VIDEOPORT_VOID #PASSIVE_LEVEL}
snippet VideoPortQueryServices
	VideoPortQueryServices(${1:IN PVOID HwDeviceExtension}, ${2:IN VIDEO_PORT_SERVICES ServicesType}, ${3:IN OUT PINTERFACE Interface}); ${4:// (" #PASSIVE_LEVEL}
snippet VideoPortQueueDpc
	VideoPortQueueDpc(${1:IN PVOID HwDeviceExtension}, ${2:IN PMINIPORT_DPC_ROUTINE CallbackRoutine}, ${3:IN PVOID Context}); ${4:// VIDEOPORT_BOOLEAN #HIGH_LEVEL}
snippet VideoPortReadStateEvent
	VideoPortReadStateEvent(${1:IN PVOID HwDeviceExtension}, ${2:IN PEVENT pEvent}); ${3:// VIDEOPORT_LONG #DISPATCH_LEVEL}
snippet VideoPortRegisterBugcheckCallback
	VideoPortRegisterBugcheckCallback(${1:IN PVOID HwDeviceExtension}, ${2:IN ULONG BugcheckCode}, ${3:IN PVIDEO_BUGCHECK_CALLBACK Callback}, ${4:IN ULONG BugcheckDataSize}); ${5:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortReleaseBuffer
	VideoPortReleaseBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID Buffer}); ${3:// VIDEOPORT_VOID #PASSIVE_LEVEL}
snippet VideoPortReleaseCommonBuffer
	VideoPortReleaseCommonBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN PVP_DMA_ADAPTER VpDmaAdapter}, ${3:IN ULONG Length}, ${4:IN PHYSICAL_ADDRESS LogicalAddress}, ${5:IN PVOID VirtualAddress}, ${6:IN BOOLEAN CacheEnabled}); ${7:// (" #PASSIVE_LEVEL}
snippet VideoPortReleaseDeviceLock
	VideoPortReleaseDeviceLock(${1:IN PVOID HwDeviceExtension}); ${2:// VIDEOPORT_VOID #PASSIVE_LEVEL}
snippet VideoPortReleaseSpinLock
	VideoPortReleaseSpinLock(${1:PVOID inHwDeviceExtension}, ${2:PSPIN_LOCK ioSpinLock}, ${3:UCHAR inNewIrql}); ${4:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortReleaseSpinLockFromDpcLevel
	VideoPortReleaseSpinLockFromDpcLevel(${1:PVOID inHwDeviceExtension}, ${2:PSPIN_LOCK ioSpinLock }); ${3:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortScanRom
	VideoPortScanRom(${1:PVOID HwDeviceExtension}, ${2:PUCHAR RomBase}, ${3:ULONG RomLength}, ${4:PUCHAR String}); ${5:// VIDEOPORT_BOOLEAN #PASSIVE_LEVEL}
snippet VideoPortSetBusData
	VideoPortSetBusData(${1:PVOID HwDeviceExtension}, ${2:BUS_DATA_TYPE BusDataType}, ${3:ULONG SlotNumber}, ${4:PVOID Buffer}, ${5:ULONG Offset}, ${6:ULONG Length}); ${7:// VIDEOPORT_ULONG #PASSIVE_LEVEL}
snippet VideoPortSetEvent
	VideoPortSetEvent(${1:IN PVOID HwDeviceExtension}, ${2:IN PEVENT pEvent}); ${3:// VIDEOPORT_LONG #DISPATCH_LEVEL}
snippet VideoPortSetRegistryParameters
	VideoPortSetRegistryParameters(${1:PVOID HwDeviceExtension}, ${2:PWSTR inValueName}, ${3:PVOID ValueData}, ${4:ULONG ValueLength}); ${5:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortSetTrappedEmulatorPorts
	VideoPortSetTrappedEmulatorPorts(${1:PVOID HwDeviceExtension}, ${2:ULONG NumAccessRanges}, ${3:PVIDEO_ACCESS_RANGE AccessRange}); ${4:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortStartDma
	VideoPortStartDma(${1:IN PVOID HwDeviceExtension}, ${2:IN PVP_DMA_ADAPTER VpDmaAdapter}, ${3:IN PVOID Mdl}, ${4:IN ULONG Offset}, ${5:IN OUT PULONG pLength}, ${6:IN PEXECUTE_DMA ExecuteDmaRoutine}, ${7:IN PVOID Context}, ${8:IN BOOLEAN WriteToDevice}); ${9:// VIDEOPORT_VP_STATUS #DISPATCH_LEVEL}
snippet VideoPortStartTimer
	VideoPortStartTimer(${1:PVOID HwDeviceExtension}); ${2:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortStopTimer
	VideoPortStopTimer(${1:PVOID HwDeviceExtension}); ${2:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortSynchronizeExecution
	VideoPortSynchronizeExecution(${1:PVOID HwDeviceExtension}, ${2:VIDEO_SYNCHRONIZE_PRIORITY Priority}, ${3:PMINIPORT_SYNCHRONIZE_ROUTINE SynchronizeRoutine}, ${4:PVOID Context}); ${5:// ) VIDEOPORT_VOID #HIGH_LEVEL}
snippet VideoPortUnlockBuffer
	VideoPortUnlockBuffer(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID Mdl}); ${3:// VIDEOPORT_VOID #DISPATCH_LEVEL}
snippet VideoPortUnmapMemory
	VideoPortUnmapMemory(${1:PVOID HwDeviceExtension}, ${2:PVOID VirtualAddress}, ${3:HANDLE ProcessHandle}); ${4:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortVerifyAccessRanges
	VideoPortVerifyAccessRanges(${1:PVOID HwDeviceExtension}, ${2:ULONG NumAccessRanges}, ${3:PVIDEO_ACCESS_RANGE inAccessRanges}); ${4:// VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet VideoPortWaitForSingleObject
	VideoPortWaitForSingleObject(${1:IN PVOID HwDeviceExtension}, ${2:IN PVOID Object}, ${3:IN PLARGE_INTEGER Timeout}); ${4:// VIDEOPORT_VP_STATUS #DISPATCH_LEVEL}
snippet WdmlibIoCreateDeviceSecure
	WdmlibIoCreateDeviceSecure(${1:PDRIVER_OBJECT inDriverObject}, ${2:ULONG inDeviceExtensionSize}, ${3:PUNICODE_STRING inDeviceName}, ${4:DEVICE_TYPE inDeviceType}, ${5:ULONG inDeviceCharacteristics}, ${6:BOOLEAN inExclusive}, ${7:PCUNICODE_STRING inDefaultSDDLString}, ${8:LPCGUID inDeviceClassGuid}, ${9:PDEVICE_OBJECT out*DeviceObject}); ${10:// ) VIDEOPORT_VP_STATUS #PASSIVE_LEVEL}
snippet WmiCompleteRequest
	WmiCompleteRequest(${1:PDEVICE_OBJECT inDeviceObject}, ${2:PIRP ioIrp}, ${3:NTSTATUS inStatus}, ${4:ULONG inBufferUsed}, ${5:CCHAR inPriorityBoost}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet WmiFireEvent
	WmiFireEvent(${1:PDEVICE_OBJECT inDeviceObject}, ${2:LPCGUID inGuid}, ${3:ULONG inInstanceIndex}, ${4:ULONG inEventDataSize}, ${5:PVOID inEventData}); ${6:// NTSTATUS #DISPATCH_LEVEL}
snippet WmiQueryTraceInformation
	WmiQueryTraceInformation(${1:TRACE_INFORMATION_CLASS inTraceInformationClass}, ${2:PVOID TraceInformation}, ${3:ULONG inTraceInformationLength}, ${4:PULONG outRequiredLength}, ${5:PVOID inBuffer}); ${6:// NTSTATUS #APC_LEVEL}
snippet WmiSystemControl
	WmiSystemControl(${1:PWMILIB_CONTEXT inWmiLibInfo}, ${2:PDEVICE_OBJECT inDeviceObject}, ${3:PIRP ioIrp}, ${4:PSYSCTL_IRP_DISPOSITION outIrpDisposition}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet WmiTraceMessage
	WmiTraceMessage(${1:TRACEHANDLE inLoggerHandle}, ${2:ULONG inMessageFlags}, ${3:LPCGUID inMessageGuid}, ${4:USHORT inMessageNumber}, ${5:...}); ${6:// NTSTATUS #HIGH_LEVEL}
snippet WmiTraceMessageVa
	WmiTraceMessageVa(${1:TRACEHANDLE inLoggerHandle}, ${2:ULONG inMessageFlags}, ${3:LPCGUID inMessageGuid}, ${4:USHORT inMessageNumber}, ${5:va_list inMessageArgList}); ${6:// NTSTATUS #HIGH_LEVEL}
snippet WRITE_REGISTER_BUFFER_UCHAR
	WRITE_REGISTER_BUFFER_UCHAR(${1:PUCHAR inRegister},${2:PUCHAR_Buffer},${3:ULONG inCount -> }) NTSTATUS # DISPATCH_LEVEL
snippet WRITE_REGISTER_BUFFER_ULONG
	WRITE_REGISTER_BUFFER_ULONG(${1:PULONG inRegister},${2:PULONG_Buffer},${3:ULONG inCount -> HIGH_LEVEL # DISPATCH_LEVEL
snippet WRITE_REGISTER_BUFFER_USHORT
	WRITE_REGISTER_BUFFER_USHORT(${1:PUSHORT inRegister}},${2:PUSHORT_Buffer},${3:ULONG inCount -> (HIGH_LEVEL # DISPATCH_LEVEL
snippet WRITE_REGISTER_UCHAR
	WRITE_REGISTER_UCHAR(${1:PUCHAR inRegister}},${2:UCHAR inValue -> __drv_maxIRQL # DISPATCH_LEVEL
snippet WRITE_REGISTER_ULONG
	WRITE_REGISTER_ULONG(${1:PULONG inRegister}},${2:ULONG inValue -> ...}) # DISPATCH_LEVEL
snippet WRITE_REGISTER_USHORT
	WRITE_REGISTER_USHORT(${1:PUSHORT inRegister},${2:USHORT inValue -> }, ${3:...}) # DISPATCH_LEVEL
snippet ZwAllocateLocallyUniqueId
	ZwAllocateLocallyUniqueId(${1:PLUID outLuid}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwAllocateVirtualMemory
	ZwAllocateVirtualMemory(${1:HANDLE inProcessHandle}, ${2:ioPVOID *BaseAddress}, ${3:ULONG_PTR inZeroBits}, ${4:PSIZE_T ioRegionSize}, ${5:ULONG inAllocationType}, ${6:ULONG inProtect}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCancelTimer
	ZwCancelTimer(${1:HANDLE inTimerHandle}, ${2:PBOOLEAN outCurrentState}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwClose
	ZwClose(${1:HANDLE inHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCommitComplete
	ZwCommitComplete(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCommitEnlistment
	ZwCommitEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCommitTransaction
	ZwCommitTransaction(${1:HANDLE inTransactionHandle}, ${2:BOOLEAN inWait}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateDirectoryObject
	ZwCreateDirectoryObject(${1:PHANDLE outDirectoryHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateEnlistment
	ZwCreateEnlistment(${1:PHANDLE outEnlistmentHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inResourceManagerHandle}, ${4:HANDLE inTransactionHandle}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}, ${6:ULONG inCreateOptions}, ${7:NOTIFICATION_MASK inNotificationMask}, ${8:PVOID inEnlistmentKey}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateEvent
	ZwCreateEvent(${1:PHANDLE outEventHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:EVENT_TYPE inEventType}, ${5:BOOLEAN inInitialState}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateFile
	ZwCreateFile(${1:PHANDLE outFileHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PIO_STATUS_BLOCK outIoStatusBlock}, ${5:PLARGE_INTEGER inAllocationSize}, ${6:ULONG inFileAttributes}, ${7:ULONG inShareAccess}, ${8:ULONG inCreateDisposition}, ${9:ULONG inCreateOptions}, ${10:PVOID inEaBuffer}, ${11:ULONG inEaLength}); ${12:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateKey
	ZwCreateKey(${1:PHANDLE outKeyHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:ULONG TitleIndex}, ${5:PUNICODE_STRING inClass}, ${6:ULONG inCreateOptions}, ${7:PULONG outDisposition}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateKeyTransacted
	ZwCreateKeyTransacted(${1:PHANDLE outKeyHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:ULONG TitleIndex}, ${5:PUNICODE_STRING inClass}, ${6:ULONG inCreateOptions}, ${7:HANDLE inTransactionHandle}, ${8:PULONG outDisposition}); ${9:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateResourceManager
	ZwCreateResourceManager(${1:PHANDLE outResourceManagerHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inTmHandle}, ${4:LPGUID inResourceManagerGuid}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}, ${6:ULONG inCreateOptions}, ${7:PUNICODE_STRING inDescription}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateSection
	ZwCreateSection(${1:PHANDLE outSectionHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PLARGE_INTEGER inMaximumSize}, ${5:ULONG inSectionPageProtection}, ${6:ULONG inAllocationAttributes}, ${7:HANDLE inFileHandle}); ${8:// NTSTATUS #APC_LEVEL}
snippet ZwCreateTimer
	ZwCreateTimer(${1:PHANDLE outTimerHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:TIMER_TYPE inTimerType}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateTransaction
	ZwCreateTransaction(${1:PHANDLE outTransactionHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:LPGUID inUow}, ${5:HANDLE inTmHandle}, ${6:ULONG inCreateOptions}, ${7:ULONG inIsolationLevel}, ${8:ULONG inIsolationFlags}, ${9:PLARGE_INTEGER inTimeout}, ${10:PUNICODE_STRING inDescription}); ${11:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwCreateTransactionManager
	ZwCreateTransactionManager(${1:PHANDLE outTmHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PUNICODE_STRING inLogFileName}, ${5:ULONG inCreateOptions}, ${6:ULONG inCommitStrength}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwDeleteFile
	ZwDeleteFile(${1:POBJECT_ATTRIBUTES inObjectAttributes}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwDeleteKey
	ZwDeleteKey(${1:HANDLE inKeyHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwDeleteValueKey
	ZwDeleteValueKey(${1:HANDLE inKeyHandle}, ${2:PUNICODE_STRING inValueName}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwDeviceIoControlFile
	ZwDeviceIoControlFile(${1:HANDLE inFileHandle}, ${2:HANDLE inEvent}, ${3:PIO_APC_ROUTINE inApcRoutine}, ${4:PVOID inApcContext}, ${5:PIO_STATUS_BLOCK outIoStatusBlock}, ${6:ULONG inIoControlCode}, ${7:PVOID inInputBuffer}, ${8:ULONG inInputBufferLength}, ${9:PVOID outOutputBuffer}, ${10:ULONG inOutputBufferLength}); ${11:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwDisplayString
	ZwDisplayString(${1:PUNICODE_STRING inString}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwDuplicateObject
	ZwDuplicateObject(${1:HANDLE inSourceProcessHandle}, ${2:HANDLE inSourceHandle}, ${3:HANDLE inTargetProcessHandle}, ${4:PHANDLE outTargetHandle}, ${5:ACCESS_MASK inDesiredAccess}, ${6:ULONG inHandleAttributes}, ${7:ULONG inOptions}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwDuplicateToken
	ZwDuplicateToken(${1:HANDLE inExistingTokenHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:BOOLEAN inEffectiveOnly}, ${5:TOKEN_TYPE inTokenType}, ${6:PHANDLE outNewTokenHandle}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwEnumerateKey
	ZwEnumerateKey(${1:HANDLE inKeyHandle}, ${2:ULONG inIndex}, ${3:KEY_INFORMATION_CLASS inKeyInformationClass}, ${4:PVOID outKeyInformation}, ${5:ULONG inLength}, ${6:PULONG outResultLength}); ${7:// ) NTSTATUS #PASSIVE_LEVEL}
snippet ZwEnumerateTransactionObject
	ZwEnumerateTransactionObject(${1:HANDLE inRootObjectHandle}, ${2:KTMOBJECT_TYPE inQueryType},  ${3:PKTMOBJECT_CURSOR ObjectCursor}, ${4:ULONG inObjectCursorLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwEnumerateValueKey
	ZwEnumerateValueKey(${1:HANDLE inKeyHandle}, ${2:ULONG inIndex}, ${3:KEY_VALUE_INFORMATION_CLASS inKeyValueInformationClass}, ${4:PVOID outKeyValueInformation}, ${5:ULONG inLength}, ${6:PULONG outResultLength}); ${7:// ) NTSTATUS #PASSIVE_LEVEL}
snippet ZwFlushBuffersFile
	ZwFlushBuffersFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwFlushKey
	ZwFlushKey(${1:HANDLE inKeyHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwFlushVirtualMemory
	ZwFlushVirtualMemory(${1:HANDLE inProcessHandle}, ${2:ioPVOID *BaseAddress}, ${3:PSIZE_T ioRegionSize}, ${4:PIO_STATUS_BLOCK outIoStatus}); ${5:// NTSTATUS #APC_LEVEL}
snippet ZwFreeVirtualMemory
	ZwFreeVirtualMemory(${1:HANDLE inProcessHandle}, ${2:ioPVOID *BaseAddress}, ${3:PSIZE_T ioRegionSize}, ${4:ULONG inFreeType}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwFsControlFile
	ZwFsControlFile(${1:HANDLE inFileHandle}, ${2:HANDLE inEvent}, ${3:PIO_APC_ROUTINE inApcRoutine}, ${4:PVOID inApcContext}, ${5:PIO_STATUS_BLOCK outIoStatusBlock}, ${6:ULONG inFsControlCode}, ${7:PVOID inInputBuffer}, ${8:ULONG inInputBufferLength}, ${9:PVOID outOutputBuffer}, ${10:ULONG inOutputBufferLength}); ${11:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwGetNotificationResourceManager
	ZwGetNotificationResourceManager(${1:HANDLE inResourceManagerHandle}, ${2:PTRANSACTION_NOTIFICATION outTransactionNotification}, ${3:ULONG inNotificationLength}, ${4:PLARGE_INTEGER inTimeout}, ${5:PULONG outReturnLength}, ${6:ULONG inAsynchronous}, ${7:ULONG_PTR inAsynchronousContext}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwLoadDriver
	ZwLoadDriver(${1:PUNICODE_STRING inDriverServiceName}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwLockFile
	ZwLockFile(${1:HANDLE inFileHandle}, ${2:HANDLE inEvent}, ${3:PIO_APC_ROUTINE inApcRoutine}, ${4:PVOID inApcContext}, ${5:PIO_STATUS_BLOCK outIoStatusBlock}, ${6:PLARGE_INTEGER inByteOffset}, ${7:PLARGE_INTEGER inLength}, ${8:ULONG inKey}, ${9:BOOLEAN inFailImmediately}, ${10:BOOLEAN inExclusiveLock}); ${11:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwMakeTemporaryObject
	ZwMakeTemporaryObject(${1:HANDLE inHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwMapViewOfSection
	ZwMapViewOfSection(${1:HANDLE inSectionHandle}, ${2:HANDLE inProcessHandle}, ${3:ioPVOID *BaseAddress}, ${4:ULONG_PTR inZeroBits}, ${5:SIZE_T inCommitSize}, ${6:PLARGE_INTEGER SectionOffset}, ${7:PSIZE_T ioViewSize}, ${8:SECTION_INHERIT inInheritDisposition}, ${9:ULONG inAllocationType}, ${10:ULONG inWin32Protect}); ${11:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwNotifyChangeKey
	ZwNotifyChangeKey(${1:HANDLE inKeyHandle}, ${2:HANDLE inEvent}, ${3:PIO_APC_ROUTINE inApcRoutine}, ${4:PVOID inApcContext}, ${5:PIO_STATUS_BLOCK outIoStatusBlock}, ${6:ULONG inCompletionFilter}, ${7:BOOLEAN inWatchTree}, ${8:PVOID outBuffer}, ${9:ULONG inBufferSize}, ${10:BOOLEAN inAsynchronous}); ${11:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwNotifyChangeMultipleKeys
	ZwNotifyChangeMultipleKeys(${1:HANDLE inMasterKeyHandle}, ${2:ULONG inCount}, ${3:OBJECT_ATTRIBUTES inSubordinateObjects[]}, ${4:HANDLE inEvent}, ${5:PIO_APC_ROUTINE inApcRoutine}, ${6:PVOID inApcContext}, ${7:PIO_STATUS_BLOCK outIoStatusBlock}, ${8:ULONG inCompletionFilter}, ${9:BOOLEAN inWatchTree}, ${10:PVOID outBuffer}, ${11:ULONG inBufferSize}, ${12:BOOLEAN inAsynchronous}); ${13:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenDirectoryObject
	ZwOpenDirectoryObject(${1:PHANDLE outDirectoryHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenEnlistment
	ZwOpenEnlistment(${1:PHANDLE outEnlistmentHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inRmHandle}, ${4:LPGUID inEnlistmentGuid}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenEvent
	ZwOpenEvent(${1:PHANDLE outEventHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenFile
	ZwOpenFile(${1:PHANDLE outFileHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PIO_STATUS_BLOCK outIoStatusBlock}, ${5:ULONG inShareAccess}, ${6:ULONG inOpenOptions}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenKey
	ZwOpenKey(${1:PHANDLE outKeyHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenKeyEx
	ZwOpenKeyEx(${1:PHANDLE outKeyHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:ULONG inOpenOptions}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenKeyTransacted
	ZwOpenKeyTransacted(${1:PHANDLE outKeyHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:HANDLE inTransactionHandle}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenKeyTransactedEx
	ZwOpenKeyTransactedEx(${1:PHANDLE outKeyHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:ULONG inOpenOptions}, ${5:HANDLE inTransactionHandle}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenProcess
	ZwOpenProcess(${1:PHANDLE outProcessHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PCLIENT_ID inClientId}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenProcessTokenEx
	ZwOpenProcessTokenEx(${1:HANDLE inProcessHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:ULONG inHandleAttributes}, ${4:PHANDLE outTokenHandle}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenResourceManager
	ZwOpenResourceManager(${1:PHANDLE outResourceManagerHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:HANDLE inTmHandle}, ${4:LPGUID inResourceManagerGuid}, ${5:POBJECT_ATTRIBUTES inObjectAttributes}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenSection
	ZwOpenSection(${1:PHANDLE outSectionHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenSymbolicLinkObject
	ZwOpenSymbolicLinkObject(${1:PHANDLE outLinkHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenThreadTokenEx
	ZwOpenThreadTokenEx(${1:HANDLE inThreadHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:BOOLEAN inOpenAsSelf}, ${4:ULONG inHandleAttributes}, ${5:PHANDLE outTokenHandle}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenTimer
	ZwOpenTimer(${1:PHANDLE outTimerHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenTransaction
	ZwOpenTransaction(${1:PHANDLE outTransactionHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:LPGUID inUow}, ${5:HANDLE inTmHandle}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwOpenTransactionManager
	ZwOpenTransactionManager(${1:PHANDLE outTmHandle}, ${2:ACCESS_MASK inDesiredAccess}, ${3:POBJECT_ATTRIBUTES inObjectAttributes}, ${4:PUNICODE_STRING inLogFileName}, ${5:LPGUID inTmIdentity}, ${6:ULONG inOpenOptions}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwPowerInformation
	ZwPowerInformation(${1:POWER_INFORMATION_LEVEL inInformationLevel}, ${2:PVOID inInputBuffer}, ${3:ULONG inInputBufferLength}, ${4:PVOID outOutputBuffer}, ${5:ULONG inOutputBufferLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwPrePrepareComplete
	ZwPrePrepareComplete(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwPrePrepareEnlistment
	ZwPrePrepareEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwPrepareComplete
	ZwPrepareComplete(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwPrepareEnlistment
	ZwPrepareEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryDirectoryFile
	ZwQueryDirectoryFile(${1:HANDLE inFileHandle}, ${2:HANDLE inEvent}, ${3:PIO_APC_ROUTINE inApcRoutine}, ${4:PVOID inApcContext}, ${5:PIO_STATUS_BLOCK outIoStatusBlock}, ${6:PVOID FileInformation}, ${7:ULONG inLength}, ${8:FILE_INFORMATION_CLASS inFileInformationClass}, ${9:BOOLEAN inReturnSingleEntry}, ${10:PUNICODE_STRING inFileName}, ${11:BOOLEAN inRestartScan}); ${12:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryEaFile
	ZwQueryEaFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID Buffer}, ${4:ULONG inLength}, ${5:BOOLEAN inReturnSingleEntry}, ${6:PVOID inEaList}, ${7:ULONG inEaListLength}, ${8:PULONG inEaIndex}, ${9:BOOLEAN inRestartScan}); ${10:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryFullAttributesFile
	ZwQueryFullAttributesFile(${1:POBJECT_ATTRIBUTES inObjectAttributes}, ${2:PFILE_NETWORK_OPEN_INFORMATION outFileInformation}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryInformationEnlistment
	ZwQueryInformationEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:ENLISTMENT_INFORMATION_CLASS inEnlistmentInformationClass}, ${3:PVOID EnlistmentInformation}, ${4:ULONG inEnlistmentInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryInformationFile
	ZwQueryInformationFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID FileInformation}, ${4:ULONG inLength}, ${5:FILE_INFORMATION_CLASS inFileInformationClass}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryInformationResourceManager
	ZwQueryInformationResourceManager(${1:HANDLE inResourceManagerHandle}, ${2:RESOURCEMANAGER_INFORMATION_CLASS inResourceManagerInformationClass}, ${3:PVOID ResourceManagerInformation}, ${4:ULONG inResourceManagerInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryInformationToken
	ZwQueryInformationToken(${1:HANDLE inTokenHandle}, ${2:TOKEN_INFORMATION_CLASS inTokenInformationClass}, ${3:PVOID outTokenInformation}, ${4:ULONG inTokenInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryInformationTransaction
	ZwQueryInformationTransaction(${1:HANDLE inTransactionHandle}, ${2:TRANSACTION_INFORMATION_CLASS inTransactionInformationClass}, ${3:PVOID TransactionInformation}, ${4:ULONG inTransactionInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryInformationTransactionManager
	ZwQueryInformationTransactionManager(${1:HANDLE inTransactionManagerHandle}, ${2:TRANSACTIONMANAGER_INFORMATION_CLASS inTransactionManagerInformationClass}, ${3:PVOID TransactionManagerInformation}, ${4:ULONG inTransactionManagerInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryKey
	ZwQueryKey(${1:HANDLE inKeyHandle}, ${2:KEY_INFORMATION_CLASS inKeyInformationClass}, ${3:PVOID outKeyInformation}, ${4:ULONG inLength}, ${5:PULONG outResultLength}); ${6:// ) NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryMultipleValueKey
	ZwQueryMultipleValueKey(${1:HANDLE inKeyHandle},  ${2:PKEY_VALUE_ENTRY ValueEntries}, ${3:ULONG inEntryCount}, ${4:PVOID ValueBuffer}, ${5:PULONG ioBufferLength}, ${6:PULONG outRequiredBufferLength}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryObject
	ZwQueryObject(${1:HANDLE inHandle}, ${2:OBJECT_INFORMATION_CLASS inObjectInformationClass}, ${3:PVOID outObjectInformation}, ${4:ULONG inObjectInformationLength}, ${5:PULONG outReturnLength}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryQuotaInformationFile
	ZwQueryQuotaInformationFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID Buffer}, ${4:ULONG inLength}, ${5:BOOLEAN inReturnSingleEntry}, ${6:PVOID inSidList}, ${7:ULONG inSidListLength}, ${8:PSID inStartSid}, ${9:BOOLEAN inRestartScan}); ${10:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQuerySecurityObject
	ZwQuerySecurityObject(${1:HANDLE inHandle}, ${2:SECURITY_INFORMATION inSecurityInformation}, ${3:PSECURITY_DESCRIPTOR SecurityDescriptor}, ${4:ULONG inLength}, ${5:PULONG outLengthNeeded}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQuerySymbolicLinkObject
	ZwQuerySymbolicLinkObject(${1:HANDLE inLinkHandle}, ${2:PUNICODE_STRING ioLinkTarget}, ${3:PULONG outReturnedLength}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryValueKey
	ZwQueryValueKey(${1:HANDLE inKeyHandle}, ${2:PUNICODE_STRING inValueName}, ${3:KEY_VALUE_INFORMATION_CLASS inKeyValueInformationClass}, ${4:PVOID outKeyValueInformation}, ${5:ULONG inLength}, ${6:PULONG outResultLength}); ${7:// ) NTSTATUS #PASSIVE_LEVEL}
snippet ZwQueryVolumeInformationFile
	ZwQueryVolumeInformationFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID FsInformation}, ${4:ULONG inLength}, ${5:FS_INFORMATION_CLASS inFsInformationClass}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwReadFile
	ZwReadFile(${1:HANDLE inFileHandle}, ${2:HANDLE inEvent}, ${3:PIO_APC_ROUTINE inApcRoutine}, ${4:PVOID inApcContext}, ${5:PIO_STATUS_BLOCK outIoStatusBlock}, ${6:PVOID Buffer}, ${7:ULONG inLength}, ${8:PLARGE_INTEGER inByteOffset}, ${9:PULONG inKey}); ${10:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwReadOnlyEnlistment
	ZwReadOnlyEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwRecoverEnlistment
	ZwRecoverEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PVOID inEnlistmentKey}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwRecoverResourceManager
	ZwRecoverResourceManager(${1:HANDLE inResourceManagerHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwRecoverTransactionManager
	ZwRecoverTransactionManager(${1:HANDLE inTransactionManagerHandle}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwRenameKey
	ZwRenameKey(${1:HANDLE inKeyHandle}, ${2:PUNICODE_STRING inNewName}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwRollbackEnlistment
	ZwRollbackEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwRollbackTransaction
	ZwRollbackTransaction(${1:HANDLE inTransactionHandle}, ${2:BOOLEAN inWait}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwRollforwardTransactionManager
	ZwRollforwardTransactionManager(${1:HANDLE inTransactionManagerHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetEaFile
	ZwSetEaFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID Buffer}, ${4:ULONG inLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetEvent
	ZwSetEvent(${1:HANDLE inEventHandle}, ${2:PLONG outPreviousState}); ${3:// NTSTATUS #DISPATCH_LEVEL}
snippet ZwSetInformationEnlistment
	ZwSetInformationEnlistment(${1:HANDLE inEnlistmentHandle}, ${2:ENLISTMENT_INFORMATION_CLASS inEnlistmentInformationClass}, ${3:PVOID EnlistmentInformation}, ${4:ULONG inEnlistmentInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetInformationFile
	ZwSetInformationFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID FileInformation}, ${4:ULONG inLength}, ${5:FILE_INFORMATION_CLASS inFileInformationClass}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetInformationKey
	ZwSetInformationKey(${1:HANDLE inKeyHandle}, ${2:KEY_SET_INFORMATION_CLASS inKeySetInformationClass}, ${3:PVOID KeySetInformation}, ${4:ULONG inKeySetInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetInformationResourceManager
	ZwSetInformationResourceManager(${1:HANDLE inResourceManagerHandle}, ${2:RESOURCEMANAGER_INFORMATION_CLASS inResourceManagerInformationClass}, ${3:PVOID ResourceManagerInformation}, ${4:ULONG inResourceManagerInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetInformationThread
	ZwSetInformationThread(${1:HANDLE inThreadHandle}, ${2:THREADINFOCLASS inThreadInformationClass}, ${3:PVOID ThreadInformation}, ${4:ULONG inThreadInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetInformationToken
	ZwSetInformationToken(${1:HANDLE inTokenHandle}, ${2:TOKEN_INFORMATION_CLASS inTokenInformationClass}, ${3:PVOID TokenInformation}, ${4:ULONG inTokenInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetInformationTransaction
	ZwSetInformationTransaction(${1:HANDLE inTransactionHandle}, ${2:TRANSACTION_INFORMATION_CLASS inTransactionInformationClass}, ${3:PVOID inTransactionInformation}, ${4:ULONG inTransactionInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetInformationTransactionManager
	ZwSetInformationTransactionManager(${1:HANDLE inTmHandle}, ${2:TRANSACTIONMANAGER_INFORMATION_CLASS inTransactionManagerInformationClass}, ${3:PVOID inTransactionManagerInformation}, ${4:ULONG inTransactionManagerInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetQuotaInformationFile
	ZwSetQuotaInformationFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID Buffer}, ${4:ULONG inLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetSecurityObject
	ZwSetSecurityObject(${1:HANDLE inHandle}, ${2:SECURITY_INFORMATION inSecurityInformation}, ${3:PSECURITY_DESCRIPTOR inSecurityDescriptor}); ${4:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetTimer
	ZwSetTimer(${1:HANDLE inTimerHandle}, ${2:PLARGE_INTEGER inDueTime}, ${3:PTIMER_APC_ROUTINE inTimerApcRoutine}, ${4:PVOID inTimerContext}, ${5:BOOLEAN inResumeTimer}, ${6:LONG inPeriod}, ${7:PBOOLEAN outPreviousState}); ${8:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetTimerEx
	ZwSetTimerEx(${1:HANDLE inTimerHandle}, ${2:TIMER_SET_INFORMATION_CLASS inTimerSetInformationClass}, ${3:PVOID ioTimerSetInformation}, ${4:ULONG inTimerSetInformationLength}); ${5:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetValueKey
	ZwSetValueKey(${1:HANDLE inKeyHandle}, ${2:PUNICODE_STRING inValueName}, ${3:ULONG inTitleIndex}, ${4:ULONG inType}, ${5:PVOID inData}, ${6:ULONG inDataSize}); ${7:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSetVolumeInformationFile
	ZwSetVolumeInformationFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PVOID FsInformation}, ${4:ULONG inLength}, ${5:FS_INFORMATION_CLASS inFsInformationClass}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwSinglePhaseReject
	ZwSinglePhaseReject(${1:HANDLE inEnlistmentHandle}, ${2:PLARGE_INTEGER inTmVirtualClock}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwTerminateProcess
	ZwTerminateProcess(${1:HANDLE inProcessHandle}, ${2:NTSTATUS inExitStatus}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwUnloadDriver
	ZwUnloadDriver(${1:PUNICODE_STRING inDriverServiceName}); ${2:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwUnlockFile
	ZwUnlockFile(${1:HANDLE inFileHandle}, ${2:PIO_STATUS_BLOCK outIoStatusBlock}, ${3:PLARGE_INTEGER inByteOffset}, ${4:PLARGE_INTEGER inLength}, ${5:ULONG inKey}); ${6:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwUnmapViewOfSection
	ZwUnmapViewOfSection(${1:HANDLE inProcessHandle}, ${2:PVOID inBaseAddress}); ${3:// NTSTATUS #PASSIVE_LEVEL}
snippet ZwWaitForSingleObject
	ZwWaitForSingleObject(${1:HANDLE inHandle}, ${2:BOOLEAN inAlertable}, ${3:PLARGE_INTEGER inTimeout}); ${4:// NTSTATUS #(QuadPart!=0)APC_LEVEL, ${4:(QuadPart==0})DISPATCH_LEVEL}
snippet ZwWriteFile
	ZwWriteFile(${1:HANDLE inFileHandle}, ${2:HANDLE inEvent}, ${3:PIO_APC_ROUTINE inApcRoutine}, ${4:PVOID inApcContext}, ${5:PIO_STATUS_BLOCK outIoStatusBlock}, ${6:PVOID Buffer}, ${7:ULONG inLength}, ${8:PLARGE_INTEGER inByteOffset}, ${9:PULONG inKey}); ${10:// #PASSIVE_LEVEL}
